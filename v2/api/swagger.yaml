---
swagger: "2.0"
info:
  description: "# About \nThis document describes the Nodeum API version 2:\n\nIf\
    \ you are looking for any information about the product itself, reach the product\
    \ website https://www.nodeum.io. You can also contact us at this email address\
    \ : info@nodeum.io\n\n# Filter parameters\nWhen browsing a list of items, multiple\
    \ filter parameters may be applied.\nSome operators can be added to the value\
    \ as a prefix:\n - `=` value is equal. Default operator, may be omitted\n - `!=`\
    \ value is different\n - `>` greater than\n - `>=` greater than or equal\n - `<`\
    \ lower than\n - `>=` lower than or equal\n - `><` included in list, items should\
    \ be separated by `|`\n - `!><` not included in list, items should be separated\
    \ by `|`\n - `~` pattern matching, may include `%` (any characters) and `_` (one\
    \ character)\n - `!~` pattern not matching, may include `%` (any characters) and\
    \ `_` (one character)\n "
  version: "2.1.0"
  title: "Nodeum API"
basePath: "/api/v2"
consumes:
- "application/json"
produces:
- "application/json"
security:
- BasicAuth: []
- BearerAuth: []
paths:
  /users/me/api_keys:
    get:
      tags:
      - "users"
      summary: "Lists all API keys of current user."
      description: "**API Key Scope**: api_keys / index"
      operationId: "index_api_keys"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "List of API Keys."
          schema:
            $ref: "#/definitions/api_key_collection"
    post:
      tags:
      - "users"
      summary: "Creates a new API Key for current user."
      description: "**API Key Scope**: api_keys / create"
      operationId: "create_api_key"
      parameters:
      - in: "body"
        name: "api_key_body"
        required: true
        schema:
          $ref: "#/definitions/api_key_full"
        x-exportParamName: "ApiKeyBody"
      responses:
        201:
          description: "A specific file."
          schema:
            $ref: "#/definitions/api_key_full"
  /users/me/api_keys/{api_key_id}:
    get:
      tags:
      - "users"
      summary: "Displays a specific API Key with its scopes."
      description: "**API Key Scope**: api_keys / show"
      operationId: "show_api_key"
      parameters:
      - name: "api_key_id"
        in: "path"
        description: "Numeric ID of API Key."
        required: true
        type: "integer"
        x-exportParamName: "ApiKeyId"
      responses:
        200:
          description: "A specific file."
          schema:
            $ref: "#/definitions/api_key_full"
    put:
      tags:
      - "users"
      summary: "Updates a specific API Key."
      description: "**API Key Scope**: api_keys / update"
      operationId: "update_api_key"
      parameters:
      - name: "api_key_id"
        in: "path"
        description: "Numeric ID of API Key."
        required: true
        type: "integer"
        x-exportParamName: "ApiKeyId"
      - in: "body"
        name: "api_key_body"
        required: true
        schema:
          $ref: "#/definitions/api_key_full"
        x-exportParamName: "ApiKeyBody"
      responses:
        200:
          description: "A specific file."
          schema:
            $ref: "#/definitions/api_key_full"
    delete:
      tags:
      - "users"
      summary: "Destroys a specific API Key."
      description: "**API Key Scope**: api_keys / destroy"
      operationId: "destroy_api_key"
      parameters:
      - name: "api_key_id"
        in: "path"
        description: "Numeric ID of API Key."
        required: true
        type: "integer"
        x-exportParamName: "ApiKeyId"
      responses:
        204:
          description: "API Key destroyed."
  /files:
    get:
      tags:
      - "files"
      summary: "Lists files on root."
      description: "**API Key Scope**: files / index"
      operationId: "index_files"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "file_id"
        in: "query"
        description: "Filter on file id"
        required: false
        type: "string"
        x-exportParamName: "FileId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "permission"
        in: "query"
        description: "Filter on permission"
        required: false
        type: "string"
        x-exportParamName: "Permission"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "change_date"
        in: "query"
        description: "Filter on change date"
        required: false
        type: "string"
        x-exportParamName: "ChangeDate"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "access_date"
        in: "query"
        description: "Filter on access date"
        required: false
        type: "string"
        x-exportParamName: "AccessDate"
        x-optionalDataType: "String"
      - name: "gid"
        in: "query"
        description: "Filter on gid"
        required: false
        type: "string"
        x-exportParamName: "Gid"
        x-optionalDataType: "String"
      - name: "uid"
        in: "query"
        description: "Filter on uid"
        required: false
        type: "string"
        x-exportParamName: "Uid"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of files."
          schema:
            $ref: "#/definitions/nodeum_file_collection"
  /files/{file_id}:
    get:
      tags:
      - "files"
      summary: "Displays a specific file."
      description: "**API Key Scope**: files / show"
      operationId: "show_file"
      parameters:
      - name: "file_id"
        in: "path"
        description: "Numeric ID of file."
        required: true
        type: "integer"
        x-exportParamName: "FileId"
      responses:
        200:
          description: "A specific file."
          schema:
            $ref: "#/definitions/nodeum_file_with_path"
  /files/{file_parent_id}/children:
    get:
      tags:
      - "files"
      summary: "Lists files under a specific folder."
      description: "**API Key Scope**: files / index"
      operationId: "files_children"
      parameters:
      - name: "file_parent_id"
        in: "path"
        description: "Numeric ID of parent folder."
        required: true
        type: "integer"
        x-exportParamName: "FileParentId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "file_id"
        in: "query"
        description: "Filter on file id"
        required: false
        type: "string"
        x-exportParamName: "FileId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "permission"
        in: "query"
        description: "Filter on permission"
        required: false
        type: "string"
        x-exportParamName: "Permission"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "change_date"
        in: "query"
        description: "Filter on change date"
        required: false
        type: "string"
        x-exportParamName: "ChangeDate"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "access_date"
        in: "query"
        description: "Filter on access date"
        required: false
        type: "string"
        x-exportParamName: "AccessDate"
        x-optionalDataType: "String"
      - name: "gid"
        in: "query"
        description: "Filter on gid"
        required: false
        type: "string"
        x-exportParamName: "Gid"
        x-optionalDataType: "String"
      - name: "uid"
        in: "query"
        description: "Filter on uid"
        required: false
        type: "string"
        x-exportParamName: "Uid"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of files."
          schema:
            $ref: "#/definitions/nodeum_file_collection"
  /mounts:
    get:
      tags:
      - "mounts"
      summary: "List all mounted storages."
      description: "**API Key Scope**: mounts / index"
      operationId: "index_mounts"
      parameters: []
      responses:
        200:
          description: "List of mounted storages."
          schema:
            $ref: "#/definitions/mount_collection"
  /containers:
    get:
      tags:
      - "containers"
      summary: "Lists all containers."
      description: "**API Key Scope**: containers / index"
      operationId: "index_containers"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "comment"
        in: "query"
        description: "Filter on comment"
        required: false
        type: "string"
        x-exportParamName: "Comment"
        x-optionalDataType: "String"
      - name: "quota_total_size"
        in: "query"
        description: "Filter on quota total size"
        required: false
        type: "string"
        x-exportParamName: "QuotaTotalSize"
        x-optionalDataType: "String"
      - name: "quota_on_cache"
        in: "query"
        description: "Filter on quota on cache"
        required: false
        type: "string"
        x-exportParamName: "QuotaOnCache"
        x-optionalDataType: "String"
      - name: "stat_total_files"
        in: "query"
        description: "Filter on stat total files"
        required: false
        type: "string"
        x-exportParamName: "StatTotalFiles"
        x-optionalDataType: "String"
      - name: "stat_total_size"
        in: "query"
        description: "Filter on stat total size"
        required: false
        type: "string"
        x-exportParamName: "StatTotalSize"
        x-optionalDataType: "String"
      - name: "stat_size_on_cache"
        in: "query"
        description: "Filter on stat size on cache"
        required: false
        type: "string"
        x-exportParamName: "StatSizeOnCache"
        x-optionalDataType: "String"
      - name: "guest_right"
        in: "query"
        description: "Filter on guest right"
        required: false
        type: "string"
        x-exportParamName: "GuestRight"
        x-optionalDataType: "String"
      - name: "last_update"
        in: "query"
        description: "Filter on last update"
        required: false
        type: "string"
        x-exportParamName: "LastUpdate"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of containers."
          schema:
            $ref: "#/definitions/container_collection"
    post:
      tags:
      - "containers"
      summary: "Creates a new container."
      description: "It **does not** yet create the file structure and configure the\
        \ samba connection. Use API v1 instead.\n\n**API Key Scope**: containers /\
        \ create"
      operationId: "create_container"
      parameters:
      - in: "body"
        name: "container_body"
        required: true
        schema:
          $ref: "#/definitions/container"
        x-exportParamName: "ContainerBody"
      responses:
        201:
          description: "A specific container."
          schema:
            $ref: "#/definitions/container"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
  /containers/{container_id}:
    get:
      tags:
      - "containers"
      summary: "Displays a specific container."
      description: "**API Key Scope**: containers / show"
      operationId: "show_container"
      parameters:
      - name: "container_id"
        in: "path"
        description: "Numeric ID or name of container."
        required: true
        type: "string"
        x-exportParamName: "ContainerId"
      responses:
        200:
          description: "A specific container."
          schema:
            $ref: "#/definitions/container"
    put:
      tags:
      - "containers"
      summary: "Updates a specific container."
      description: "It **does not** yet create the file structure and configure the\
        \ samba connection. Use API v1 instead.\n\n**API Key Scope**: containers /\
        \ update"
      operationId: "update_container"
      parameters:
      - name: "container_id"
        in: "path"
        description: "Numeric ID or name of container."
        required: true
        type: "string"
        x-exportParamName: "ContainerId"
      - in: "body"
        name: "container_body"
        required: true
        schema:
          $ref: "#/definitions/container"
        x-exportParamName: "ContainerBody"
      responses:
        200:
          description: "A specific container."
          schema:
            $ref: "#/definitions/container"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "containers"
      summary: "Destroys a specific container."
      description: "**API Key Scope**: containers / destroy"
      operationId: "destroy_container"
      parameters:
      - name: "container_id"
        in: "path"
        description: "Numeric ID or name of container."
        required: true
        type: "string"
        x-exportParamName: "ContainerId"
      responses:
        204:
          description: "Container destroyed."
  /containers/{container_id}/container_privileges:
    get:
      tags:
      - "containers"
      summary: "Lists all privilege on the container."
      description: "**API Key Scope**: container_privileges / index"
      operationId: "index_container_privileges"
      parameters:
      - name: "container_id"
        in: "path"
        description: "Numeric ID or name of container."
        required: true
        type: "string"
        x-exportParamName: "ContainerId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "privilege"
        in: "query"
        description: "Filter on privilege"
        required: false
        type: "string"
        x-exportParamName: "Privilege"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of container privileges."
          schema:
            $ref: "#/definitions/container_privilege_collection"
    post:
      tags:
      - "containers"
      summary: "Creates a new privilege on the container."
      description: "**API Key Scope**: container_privileges / create"
      operationId: "create_container_privilege"
      parameters:
      - name: "container_id"
        in: "path"
        description: "Numeric ID or name of container."
        required: true
        type: "string"
        x-exportParamName: "ContainerId"
      - in: "body"
        name: "container_privilege_body"
        required: true
        schema:
          $ref: "#/definitions/container_privilege"
        x-exportParamName: "ContainerPrivilegeBody"
      responses:
        201:
          description: "A specific container privilege."
          schema:
            $ref: "#/definitions/container_privilege"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
  /containers/{container_id}/container_privileges/{container_privilege_id}:
    get:
      tags:
      - "containers"
      summary: "Displays a specific privilege."
      description: "**API Key Scope**: container_privileges / show"
      operationId: "show_container_privilege"
      parameters:
      - name: "container_id"
        in: "path"
        description: "Numeric ID or name of container."
        required: true
        type: "string"
        x-exportParamName: "ContainerId"
      - name: "container_privilege_id"
        in: "path"
        description: "Numeric ID of container privilege."
        required: true
        type: "integer"
        x-exportParamName: "ContainerPrivilegeId"
      responses:
        200:
          description: "A specific container privilege."
          schema:
            $ref: "#/definitions/container_privilege"
    put:
      tags:
      - "containers"
      summary: "Updates a specific privilege."
      description: "**API Key Scope**: container_privileges / update"
      operationId: "update_container_privilege"
      parameters:
      - name: "container_id"
        in: "path"
        description: "Numeric ID or name of container."
        required: true
        type: "string"
        x-exportParamName: "ContainerId"
      - name: "container_privilege_id"
        in: "path"
        description: "Numeric ID of container privilege."
        required: true
        type: "integer"
        x-exportParamName: "ContainerPrivilegeId"
      - in: "body"
        name: "container_privilege_body"
        required: true
        schema:
          $ref: "#/definitions/container_privilege"
        x-exportParamName: "ContainerPrivilegeBody"
      responses:
        200:
          description: "A specific container privilege."
          schema:
            $ref: "#/definitions/container_privilege"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "containers"
      summary: "Destroys a specific privilege."
      description: "**API Key Scope**: container_privileges / destroy"
      operationId: "destroy_container_privilege"
      parameters:
      - name: "container_id"
        in: "path"
        description: "Numeric ID or name of container."
        required: true
        type: "string"
        x-exportParamName: "ContainerId"
      - name: "container_privilege_id"
        in: "path"
        description: "Numeric ID of container privilege."
        required: true
        type: "integer"
        x-exportParamName: "ContainerPrivilegeId"
      responses:
        204:
          description: "Container privilege destroyed."
  /containers/{container_id}/files:
    get:
      tags:
      - "files"
      summary: "Lists files on root."
      description: "**API Key Scope**: files / index"
      operationId: "index_files_by_container"
      parameters:
      - name: "container_id"
        in: "path"
        description: "Numeric ID or name of container."
        required: true
        type: "string"
        x-exportParamName: "ContainerId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "file_id"
        in: "query"
        description: "Filter on file id"
        required: false
        type: "string"
        x-exportParamName: "FileId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "permission"
        in: "query"
        description: "Filter on permission"
        required: false
        type: "string"
        x-exportParamName: "Permission"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "change_date"
        in: "query"
        description: "Filter on change date"
        required: false
        type: "string"
        x-exportParamName: "ChangeDate"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "access_date"
        in: "query"
        description: "Filter on access date"
        required: false
        type: "string"
        x-exportParamName: "AccessDate"
        x-optionalDataType: "String"
      - name: "gid"
        in: "query"
        description: "Filter on gid"
        required: false
        type: "string"
        x-exportParamName: "Gid"
        x-optionalDataType: "String"
      - name: "uid"
        in: "query"
        description: "Filter on uid"
        required: false
        type: "string"
        x-exportParamName: "Uid"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of files."
          schema:
            $ref: "#/definitions/nodeum_file_collection"
  /containers/{container_id}/files/{file_id}:
    get:
      tags:
      - "files"
      summary: "Displays a specific file."
      description: "**API Key Scope**: files / show"
      operationId: "show_file_by_container"
      parameters:
      - name: "container_id"
        in: "path"
        description: "Numeric ID or name of container."
        required: true
        type: "string"
        x-exportParamName: "ContainerId"
      - name: "file_id"
        in: "path"
        description: "Numeric ID of file."
        required: true
        type: "integer"
        x-exportParamName: "FileId"
      responses:
        200:
          description: "A specific file."
          schema:
            $ref: "#/definitions/nodeum_file_with_path"
  /containers/{container_id}/files/{file_parent_id}/children:
    get:
      tags:
      - "files"
      summary: "Lists files under a specific folder."
      description: "**API Key Scope**: files / index"
      operationId: "files_children_by_container"
      parameters:
      - name: "container_id"
        in: "path"
        description: "Numeric ID or name of container."
        required: true
        type: "string"
        x-exportParamName: "ContainerId"
      - name: "file_parent_id"
        in: "path"
        description: "Numeric ID of parent folder."
        required: true
        type: "integer"
        x-exportParamName: "FileParentId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "file_id"
        in: "query"
        description: "Filter on file id"
        required: false
        type: "string"
        x-exportParamName: "FileId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "permission"
        in: "query"
        description: "Filter on permission"
        required: false
        type: "string"
        x-exportParamName: "Permission"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "change_date"
        in: "query"
        description: "Filter on change date"
        required: false
        type: "string"
        x-exportParamName: "ChangeDate"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "access_date"
        in: "query"
        description: "Filter on access date"
        required: false
        type: "string"
        x-exportParamName: "AccessDate"
        x-optionalDataType: "String"
      - name: "gid"
        in: "query"
        description: "Filter on gid"
        required: false
        type: "string"
        x-exportParamName: "Gid"
        x-optionalDataType: "String"
      - name: "uid"
        in: "query"
        description: "Filter on uid"
        required: false
        type: "string"
        x-exportParamName: "Uid"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of files."
          schema:
            $ref: "#/definitions/nodeum_file_collection"
  /tape_libraries:
    get:
      tags:
      - "tape_libraries"
      summary: "Lists all tape libraries."
      description: "**API Key Scope**: tape_libraries / index"
      operationId: "index_tape_libraries"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "serial"
        in: "query"
        description: "Filter on serial"
        required: false
        type: "string"
        x-exportParamName: "Serial"
        x-optionalDataType: "String"
      - name: "comment"
        in: "query"
        description: "Filter on comment"
        required: false
        type: "string"
        x-exportParamName: "Comment"
        x-optionalDataType: "String"
      - name: "protocol"
        in: "query"
        description: "Filter on protocol"
        required: false
        type: "string"
        x-exportParamName: "Protocol"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "query"
        description: "Filter on vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "product"
        in: "query"
        description: "Filter on product"
        required: false
        type: "string"
        x-exportParamName: "Product"
        x-optionalDataType: "String"
      - name: "firmware"
        in: "query"
        description: "Filter on firmware"
        required: false
        type: "string"
        x-exportParamName: "Firmware"
        x-optionalDataType: "String"
      - name: "device"
        in: "query"
        description: "Filter on device"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "libso"
        in: "query"
        description: "Filter on libso"
        required: false
        type: "string"
        x-exportParamName: "Libso"
        x-optionalDataType: "String"
      - name: "acs"
        in: "query"
        description: "Filter on acs"
        required: false
        type: "string"
        x-exportParamName: "Acs"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "Filter on status"
        required: false
        type: "string"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "storage_slots"
        in: "query"
        description: "Filter on storage slots"
        required: false
        type: "string"
        x-exportParamName: "StorageSlots"
        x-optionalDataType: "String"
      - name: "storage_slots_address"
        in: "query"
        description: "Filter on storage slots address"
        required: false
        type: "string"
        x-exportParamName: "StorageSlotsAddress"
        x-optionalDataType: "String"
      - name: "io_slots"
        in: "query"
        description: "Filter on io slots"
        required: false
        type: "string"
        x-exportParamName: "IoSlots"
        x-optionalDataType: "String"
      - name: "io_slots_address"
        in: "query"
        description: "Filter on io slots address"
        required: false
        type: "string"
        x-exportParamName: "IoSlotsAddress"
        x-optionalDataType: "String"
      - name: "price"
        in: "query"
        description: "Filter on price"
        required: false
        type: "string"
        x-exportParamName: "Price"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of tape libraries."
          schema:
            $ref: "#/definitions/tape_library_collection"
    post:
      tags:
      - "tape_libraries"
      summary: "Creates a new tape library."
      description: "**API Key Scope**: tape_libraries / create"
      operationId: "create_tape_library"
      parameters:
      - in: "body"
        name: "tape_library_body"
        required: true
        schema:
          $ref: "#/definitions/tape_library"
        x-exportParamName: "TapeLibraryBody"
      responses:
        201:
          description: "A specific tape library."
          schema:
            $ref: "#/definitions/tape_library"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
  /tape_libraries/-/devices:
    get:
      tags:
      - "tape_libraries"
      summary: "Lists tape libraries devices."
      description: "**API Key Scope**: tape_libraries / devices"
      operationId: "index_tape_library_devices"
      parameters:
      - name: "job_id"
        in: "query"
        description: "ID of active job"
        required: false
        type: "string"
        x-exportParamName: "JobId"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of tape libraries devices."
          schema:
            $ref: "#/definitions/tape_library_device_collection"
        202:
          description: "An active job that may be queued, working, completed or failed."
          examples:
            queued:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "queued"
            working:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "working"
                progress: 2
                total: 6
            failed:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "failed"
          schema:
            $ref: "#/definitions/active_job_status"
        500:
          description: "An active job that may be queued, working, completed or failed."
          examples:
            queued:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "queued"
            working:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "working"
                progress: 2
                total: 6
            failed:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "failed"
          schema:
            $ref: "#/definitions/active_job_status"
  /tape_libraries/{tape_library_id}:
    get:
      tags:
      - "tape_libraries"
      summary: "Displays a specific tape library."
      description: "**API Key Scope**: tape_libraries / show"
      operationId: "show_tape_library"
      parameters:
      - name: "tape_library_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape library."
        required: true
        type: "string"
        x-exportParamName: "TapeLibraryId"
      responses:
        200:
          description: "A specific tape library."
          schema:
            $ref: "#/definitions/tape_library"
    put:
      tags:
      - "tape_libraries"
      summary: "Updates a specific tape library."
      description: "**API Key Scope**: tape_libraries / update"
      operationId: "update_tape_library"
      parameters:
      - name: "tape_library_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape library."
        required: true
        type: "string"
        x-exportParamName: "TapeLibraryId"
      - in: "body"
        name: "tape_library_body"
        required: true
        schema:
          $ref: "#/definitions/tape_library"
        x-exportParamName: "TapeLibraryBody"
      responses:
        200:
          description: "A specific tape library."
          schema:
            $ref: "#/definitions/tape_library"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "tape_libraries"
      summary: "Destroys a specific tape library."
      description: "**API Key Scope**: tape_libraries / destroy"
      operationId: "destroy_tape_library"
      parameters:
      - name: "tape_library_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape library."
        required: true
        type: "string"
        x-exportParamName: "TapeLibraryId"
      responses:
        204:
          description: "Tape library destroyed."
  /tape_libraries/{tape_library_id}/tape_drives:
    get:
      tags:
      - "tape_drives"
      summary: "Lists all tape drives."
      description: "**API Key Scope**: tape_drives / index"
      operationId: "index_tape_drives_by_tape_library"
      parameters:
      - name: "tape_library_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape library."
        required: true
        type: "string"
        x-exportParamName: "TapeLibraryId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "serial"
        in: "query"
        description: "Filter on serial"
        required: false
        type: "string"
        x-exportParamName: "Serial"
        x-optionalDataType: "String"
      - name: "comment"
        in: "query"
        description: "Filter on comment"
        required: false
        type: "string"
        x-exportParamName: "Comment"
        x-optionalDataType: "String"
      - name: "scsi_address"
        in: "query"
        description: "Filter on scsi address"
        required: false
        type: "string"
        x-exportParamName: "ScsiAddress"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "query"
        description: "Filter on vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "product"
        in: "query"
        description: "Filter on product"
        required: false
        type: "string"
        x-exportParamName: "Product"
        x-optionalDataType: "String"
      - name: "firmware"
        in: "query"
        description: "Filter on firmware"
        required: false
        type: "string"
        x-exportParamName: "Firmware"
        x-optionalDataType: "String"
      - name: "device"
        in: "query"
        description: "Filter on device"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "sgdevice"
        in: "query"
        description: "Filter on sgdevice"
        required: false
        type: "string"
        x-exportParamName: "Sgdevice"
        x-optionalDataType: "String"
      - name: "libso"
        in: "query"
        description: "Filter on libso"
        required: false
        type: "string"
        x-exportParamName: "Libso"
        x-optionalDataType: "String"
      - name: "acs"
        in: "query"
        description: "Filter on acs"
        required: false
        type: "string"
        x-exportParamName: "Acs"
        x-optionalDataType: "String"
      - name: "lsm"
        in: "query"
        description: "Filter on lsm"
        required: false
        type: "string"
        x-exportParamName: "Lsm"
        x-optionalDataType: "String"
      - name: "panel"
        in: "query"
        description: "Filter on panel"
        required: false
        type: "string"
        x-exportParamName: "Panel"
        x-optionalDataType: "String"
      - name: "transport"
        in: "query"
        description: "Filter on transport"
        required: false
        type: "string"
        x-exportParamName: "Transport"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "Filter on status"
        required: false
        type: "string"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "full"
        in: "query"
        description: "Filter on full"
        required: false
        type: "string"
        x-exportParamName: "Full"
        x-optionalDataType: "String"
      - name: "mount_count"
        in: "query"
        description: "Filter on mount count"
        required: false
        type: "string"
        x-exportParamName: "MountCount"
        x-optionalDataType: "String"
      - name: "use_to"
        in: "query"
        description: "Filter on use to"
        required: false
        type: "string"
        x-exportParamName: "UseTo"
        x-optionalDataType: "String"
      - name: "use_by"
        in: "query"
        description: "Filter on use by"
        required: false
        type: "string"
        x-exportParamName: "UseBy"
        x-optionalDataType: "String"
      - name: "barcode"
        in: "query"
        description: "Filter on barcode"
        required: false
        type: "string"
        x-exportParamName: "Barcode"
        x-optionalDataType: "String"
      - name: "task_id"
        in: "query"
        description: "Filter on task id"
        required: false
        type: "string"
        x-exportParamName: "TaskId"
        x-optionalDataType: "String"
      - name: "use_file_processed_size"
        in: "query"
        description: "Filter on use file processed size"
        required: false
        type: "string"
        x-exportParamName: "UseFileProcessedSize"
        x-optionalDataType: "String"
      - name: "use_file_size_to_process"
        in: "query"
        description: "Filter on use file size to process"
        required: false
        type: "string"
        x-exportParamName: "UseFileSizeToProcess"
        x-optionalDataType: "String"
      - name: "use_file_name_processed"
        in: "query"
        description: "Filter on use file name processed"
        required: false
        type: "string"
        x-exportParamName: "UseFileNameProcessed"
        x-optionalDataType: "String"
      - name: "bandwidth"
        in: "query"
        description: "Filter on bandwidth"
        required: false
        type: "string"
        x-exportParamName: "Bandwidth"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of tape drives."
          schema:
            $ref: "#/definitions/tape_drive_collection"
    post:
      tags:
      - "tape_drives"
      summary: "Creates a new tape drive."
      description: "**API Key Scope**: tape_drives / create"
      operationId: "create_tape_drive_by_tape_library"
      parameters:
      - name: "tape_library_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape library."
        required: true
        type: "string"
        x-exportParamName: "TapeLibraryId"
      - in: "body"
        name: "tape_drive_body"
        required: true
        schema:
          $ref: "#/definitions/tape_drive"
        x-exportParamName: "TapeDriveBody"
      responses:
        201:
          description: "A specific tape drive."
          schema:
            $ref: "#/definitions/tape_drive"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
  /tape_libraries/{tape_library_id}/tape_drives/-/devices:
    get:
      tags:
      - "tape_drives"
      summary: "Lists tape drives devices."
      description: "**API Key Scope**: tape_drives / devices"
      operationId: "index_tape_drive_devices"
      parameters:
      - name: "tape_library_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape library."
        required: true
        type: "string"
        x-exportParamName: "TapeLibraryId"
      - name: "job_id"
        in: "query"
        description: "ID of active job"
        required: false
        type: "string"
        x-exportParamName: "JobId"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of tape drives devices."
          schema:
            $ref: "#/definitions/tape_drive_device_collection"
        202:
          description: "An active job that may be queued, working, completed or failed."
          examples:
            queued:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "queued"
            working:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "working"
                progress: 2
                total: 6
            failed:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "failed"
          schema:
            $ref: "#/definitions/active_job_status"
        500:
          description: "An active job that may be queued, working, completed or failed."
          examples:
            queued:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "queued"
            working:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "working"
                progress: 2
                total: 6
            failed:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "failed"
          schema:
            $ref: "#/definitions/active_job_status"
  /tape_libraries/{tape_library_id}/tape_drives/{tape_drive_id}:
    get:
      tags:
      - "tape_drives"
      summary: "Displays a specific tape drive."
      description: "**API Key Scope**: tape_drives / show"
      operationId: "show_tape_drive_by_tape_library"
      parameters:
      - name: "tape_library_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape library."
        required: true
        type: "string"
        x-exportParamName: "TapeLibraryId"
      - name: "tape_drive_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape drive."
        required: true
        type: "string"
        x-exportParamName: "TapeDriveId"
      responses:
        200:
          description: "A specific tape drive."
          schema:
            $ref: "#/definitions/tape_drive"
    put:
      tags:
      - "tape_drives"
      summary: "Updates a specific tape drive."
      description: "**API Key Scope**: tape_drives / update"
      operationId: "update_tape_drive_by_tape_library"
      parameters:
      - name: "tape_library_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape library."
        required: true
        type: "string"
        x-exportParamName: "TapeLibraryId"
      - name: "tape_drive_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape drive."
        required: true
        type: "string"
        x-exportParamName: "TapeDriveId"
      - in: "body"
        name: "tape_drive_body"
        required: true
        schema:
          $ref: "#/definitions/tape_drive"
        x-exportParamName: "TapeDriveBody"
      responses:
        200:
          description: "A specific tape drive."
          schema:
            $ref: "#/definitions/tape_drive"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "tape_drives"
      summary: "Destroys a specific tape drive."
      description: "**API Key Scope**: tape_drives / destroy"
      operationId: "destroy_tape_drive_by_tape_library"
      parameters:
      - name: "tape_library_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape library."
        required: true
        type: "string"
        x-exportParamName: "TapeLibraryId"
      - name: "tape_drive_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape drive."
        required: true
        type: "string"
        x-exportParamName: "TapeDriveId"
      responses:
        204:
          description: "Tape drive destroyed."
  /tape_libraries/{tape_library_id}/tapes:
    get:
      tags:
      - "tapes"
      summary: "Lists all tapes."
      description: "**API Key Scope**: tapes / index"
      operationId: "index_tapes_by_tape_library"
      parameters:
      - name: "tape_library_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape library."
        required: true
        type: "string"
        x-exportParamName: "TapeLibraryId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "pool_id"
        in: "query"
        description: "Filter on a pool id"
        required: false
        type: "string"
        x-exportParamName: "PoolId"
        x-optionalDataType: "String"
      - name: "barcode"
        in: "query"
        description: "Filter on barcode"
        required: false
        type: "string"
        x-exportParamName: "Barcode"
        x-optionalDataType: "String"
      - name: "location"
        in: "query"
        description: "Filter on location"
        required: false
        type: "string"
        x-exportParamName: "Location"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "locked"
        in: "query"
        description: "Filter on locked"
        required: false
        type: "string"
        x-exportParamName: "Locked"
        x-optionalDataType: "String"
      - name: "scratch"
        in: "query"
        description: "Filter on scratch"
        required: false
        type: "string"
        x-exportParamName: "Scratch"
        x-optionalDataType: "String"
      - name: "cleaning"
        in: "query"
        description: "Filter on cleaning"
        required: false
        type: "string"
        x-exportParamName: "Cleaning"
        x-optionalDataType: "String"
      - name: "write_protect"
        in: "query"
        description: "Filter on write protect"
        required: false
        type: "string"
        x-exportParamName: "WriteProtect"
        x-optionalDataType: "String"
      - name: "mounted"
        in: "query"
        description: "Filter on mounted"
        required: false
        type: "string"
        x-exportParamName: "Mounted"
        x-optionalDataType: "String"
      - name: "ejected"
        in: "query"
        description: "Filter on ejected"
        required: false
        type: "string"
        x-exportParamName: "Ejected"
        x-optionalDataType: "String"
      - name: "known"
        in: "query"
        description: "Filter on known"
        required: false
        type: "string"
        x-exportParamName: "Known"
        x-optionalDataType: "String"
      - name: "mount_count"
        in: "query"
        description: "Filter on mount count"
        required: false
        type: "string"
        x-exportParamName: "MountCount"
        x-optionalDataType: "String"
      - name: "date_in"
        in: "query"
        description: "Filter on date in"
        required: false
        type: "string"
        x-exportParamName: "DateIn"
        x-optionalDataType: "String"
      - name: "date_move"
        in: "query"
        description: "Filter on date move"
        required: false
        type: "string"
        x-exportParamName: "DateMove"
        x-optionalDataType: "String"
      - name: "free"
        in: "query"
        description: "Filter on free"
        required: false
        type: "string"
        x-exportParamName: "Free"
        x-optionalDataType: "String"
      - name: "max"
        in: "query"
        description: "Filter on max"
        required: false
        type: "string"
        x-exportParamName: "Max"
        x-optionalDataType: "String"
      - name: "last_size_update"
        in: "query"
        description: "Filter on last size update"
        required: false
        type: "string"
        x-exportParamName: "LastSizeUpdate"
        x-optionalDataType: "String"
      - name: "last_maintenance"
        in: "query"
        description: "Filter on last maintenance"
        required: false
        type: "string"
        x-exportParamName: "LastMaintenance"
        x-optionalDataType: "String"
      - name: "last_repack"
        in: "query"
        description: "Filter on last repack"
        required: false
        type: "string"
        x-exportParamName: "LastRepack"
        x-optionalDataType: "String"
      - name: "repack_status"
        in: "query"
        description: "Filter on repack status"
        required: false
        type: "string"
        x-exportParamName: "RepackStatus"
        x-optionalDataType: "String"
      - name: "hash"
        in: "query"
        description: "Filter on hash"
        required: false
        type: "string"
        x-exportParamName: "Hash"
        x-optionalDataType: "String"
      - name: "force_import_type"
        in: "query"
        description: "Filter on force import type"
        required: false
        type: "string"
        x-exportParamName: "ForceImportType"
        x-optionalDataType: "String"
      - name: "need_to_check"
        in: "query"
        description: "Filter on need to check"
        required: false
        type: "string"
        x-exportParamName: "NeedToCheck"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of tapes."
          schema:
            $ref: "#/definitions/tape_collection"
  /tape_libraries/{tape_library_id}/tapes/{tape_id}:
    get:
      tags:
      - "tapes"
      summary: "Displays a specific tape."
      description: "**API Key Scope**: tapes / show"
      operationId: "show_tape_by_tape_library"
      parameters:
      - name: "tape_library_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape library."
        required: true
        type: "string"
        x-exportParamName: "TapeLibraryId"
      - name: "tape_id"
        in: "path"
        description: "Numeric ID, or barcode of tape."
        required: true
        type: "string"
        x-exportParamName: "TapeId"
      responses:
        200:
          description: "A specific tape."
          schema:
            $ref: "#/definitions/tape"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /tape_libraries/{tape_library_id}/tapes/{tape_id}/mount:
    get:
      tags:
      - "tapes"
      summary: "Get mount status of Tape."
      description: "**API Key Scope**: tapes / mount_status"
      operationId: "mount_status_tape_by_tape_library"
      parameters:
      - name: "tape_library_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape library."
        required: true
        type: "string"
        x-exportParamName: "TapeLibraryId"
      - name: "tape_id"
        in: "path"
        description: "Numeric ID, or barcode of tape."
        required: true
        type: "string"
        x-exportParamName: "TapeId"
      responses:
        200:
          description: "Mount status of storage."
          schema:
            $ref: "#/definitions/mount_status"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /pools:
    get:
      tags:
      - "pools"
      summary: "Lists all pools."
      description: "**API Key Scope**: pools / index"
      operationId: "index_pools"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "comment"
        in: "query"
        description: "Filter on comment"
        required: false
        type: "string"
        x-exportParamName: "Comment"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "content"
        in: "query"
        description: "Filter on content"
        required: false
        type: "string"
        x-exportParamName: "Content"
        x-optionalDataType: "String"
      - name: "primary_id"
        in: "query"
        description: "Filter on primary id"
        required: false
        type: "string"
        x-exportParamName: "PrimaryId"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of pools."
          schema:
            $ref: "#/definitions/pool_collection"
    post:
      tags:
      - "pools"
      summary: "Creates a new pool."
      description: "**API Key Scope**: pools / create"
      operationId: "create_pool"
      parameters:
      - in: "body"
        name: "pool_body"
        required: true
        schema:
          $ref: "#/definitions/pool_up"
        x-exportParamName: "PoolBody"
      responses:
        201:
          description: "A specific pool."
          schema:
            $ref: "#/definitions/pool"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
  /pools/{pool_id}:
    get:
      tags:
      - "pools"
      summary: "Displays a specific pool."
      description: "**API Key Scope**: pools / show"
      operationId: "show_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      responses:
        200:
          description: "A specific pool."
          schema:
            $ref: "#/definitions/pool"
    put:
      tags:
      - "pools"
      summary: "Updates a specific pool."
      description: "**API Key Scope**: pools / update"
      operationId: "update_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - in: "body"
        name: "pool_body"
        required: true
        schema:
          $ref: "#/definitions/pool_up"
        x-exportParamName: "PoolBody"
      responses:
        200:
          description: "A specific pool."
          schema:
            $ref: "#/definitions/pool"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "pools"
      summary: "Destroys a specific tape pool."
      description: "**API Key Scope**: pools / destroy"
      operationId: "destroy_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      responses:
        204:
          description: "Pool destroyed."
  /pools/{pool_id}/primary_scan:
    get:
      tags:
      - "pools"
      summary: "Displays the primary pool scan status."
      description: "**API Key Scope**: primary_scans / show"
      operationId: "show_primary_scan"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      responses:
        200:
          description: "The primary pool scan status."
          schema:
            $ref: "#/definitions/primary_scan"
    post:
      tags:
      - "pools"
      summary: "Set a new primary pool scan option."
      description: "**API Key Scope**: primary_scans / create"
      operationId: "create_primary_scan"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - in: "body"
        name: "primary_scan_body"
        required: true
        schema:
          $ref: "#/definitions/primary_scan"
        x-exportParamName: "PrimaryScanBody"
      responses:
        201:
          description: "The primary pool scan status."
          schema:
            $ref: "#/definitions/primary_scan"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    put:
      tags:
      - "pools"
      summary: "Updates the existing primary pool scan option."
      description: "**API Key Scope**: primary_scans / update"
      operationId: "update_primary_scan"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - in: "body"
        name: "primary_scan_body"
        required: true
        schema:
          $ref: "#/definitions/primary_scan"
        x-exportParamName: "PrimaryScanBody"
      responses:
        200:
          description: "The primary pool scan status."
          schema:
            $ref: "#/definitions/primary_scan"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "pools"
      summary: "Disable the primary pool scan."
      description: "**API Key Scope**: primary_scans / destroy"
      operationId: "destroy_primary_scan"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      responses:
        204:
          description: "Primary pool scan disabled."
  /pools/{pool_id}/sync:
    post:
      tags:
      - "pools"
      summary: "Synchronize a primary after a scan (for internal use only)."
      description: "**API Key Scope**: pools / sync_primary"
      operationId: "sync_primary_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "tx"
        in: "query"
        description: "New transaction number."
        required: true
        type: "integer"
        x-exportParamName: "Tx"
      responses:
        204:
          description: "Synchronization triggered."
  /pools/{pool_id}/mount:
    get:
      tags:
      - "pools"
      summary: "Get mount status of Pool."
      description: "**API Key Scope**: pools / mount_status"
      operationId: "mount_status_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      responses:
        200:
          description: "Mount status of storage."
          schema:
            $ref: "#/definitions/mount_status"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
    put:
      tags:
      - "pools"
      summary: "Mount Pool."
      description: "**API Key Scope**: pools / mount"
      operationId: "mount_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      responses:
        200:
          description: "Mount status of storage."
          schema:
            $ref: "#/definitions/mount_status"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "pools"
      summary: "Unmount Pool."
      description: "**API Key Scope**: pools / unmount"
      operationId: "unmount_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      responses:
        200:
          description: "Mount status of storage."
          schema:
            $ref: "#/definitions/mount_status"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /pools/{pool_id}/files:
    get:
      tags:
      - "files"
      summary: "Lists files on root."
      description: "**API Key Scope**: files / index"
      operationId: "index_files_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "file_id"
        in: "query"
        description: "Filter on file id"
        required: false
        type: "string"
        x-exportParamName: "FileId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "permission"
        in: "query"
        description: "Filter on permission"
        required: false
        type: "string"
        x-exportParamName: "Permission"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "change_date"
        in: "query"
        description: "Filter on change date"
        required: false
        type: "string"
        x-exportParamName: "ChangeDate"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "access_date"
        in: "query"
        description: "Filter on access date"
        required: false
        type: "string"
        x-exportParamName: "AccessDate"
        x-optionalDataType: "String"
      - name: "gid"
        in: "query"
        description: "Filter on gid"
        required: false
        type: "string"
        x-exportParamName: "Gid"
        x-optionalDataType: "String"
      - name: "uid"
        in: "query"
        description: "Filter on uid"
        required: false
        type: "string"
        x-exportParamName: "Uid"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of files."
          schema:
            $ref: "#/definitions/nodeum_file_collection"
  /pools/{pool_id}/files/{file_id}:
    get:
      tags:
      - "files"
      summary: "Displays a specific file."
      description: "**API Key Scope**: files / show"
      operationId: "show_file_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "file_id"
        in: "path"
        description: "Numeric ID of file."
        required: true
        type: "integer"
        x-exportParamName: "FileId"
      responses:
        200:
          description: "A specific file."
          schema:
            $ref: "#/definitions/nodeum_file_with_path"
  /pools/{pool_id}/files/{file_parent_id}/children:
    get:
      tags:
      - "files"
      summary: "Lists files under a specific folder."
      description: "**API Key Scope**: files / index"
      operationId: "files_children_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "file_parent_id"
        in: "path"
        description: "Numeric ID of parent folder."
        required: true
        type: "integer"
        x-exportParamName: "FileParentId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "file_id"
        in: "query"
        description: "Filter on file id"
        required: false
        type: "string"
        x-exportParamName: "FileId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "permission"
        in: "query"
        description: "Filter on permission"
        required: false
        type: "string"
        x-exportParamName: "Permission"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "change_date"
        in: "query"
        description: "Filter on change date"
        required: false
        type: "string"
        x-exportParamName: "ChangeDate"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "access_date"
        in: "query"
        description: "Filter on access date"
        required: false
        type: "string"
        x-exportParamName: "AccessDate"
        x-optionalDataType: "String"
      - name: "gid"
        in: "query"
        description: "Filter on gid"
        required: false
        type: "string"
        x-exportParamName: "Gid"
        x-optionalDataType: "String"
      - name: "uid"
        in: "query"
        description: "Filter on uid"
        required: false
        type: "string"
        x-exportParamName: "Uid"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of files."
          schema:
            $ref: "#/definitions/nodeum_file_collection"
  /pools/{pool_id}/import_files:
    get:
      tags:
      - "files"
      summary: "Lists files on root of tape of pools, specific for Data Exchange."
      description: "**API Key Scope**: import_files / index"
      operationId: "index_import_files_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "file_id"
        in: "query"
        description: "Filter on file id"
        required: false
        type: "string"
        x-exportParamName: "FileId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "permission"
        in: "query"
        description: "Filter on permission"
        required: false
        type: "string"
        x-exportParamName: "Permission"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "change_date"
        in: "query"
        description: "Filter on change date"
        required: false
        type: "string"
        x-exportParamName: "ChangeDate"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "access_date"
        in: "query"
        description: "Filter on access date"
        required: false
        type: "string"
        x-exportParamName: "AccessDate"
        x-optionalDataType: "String"
      - name: "gid"
        in: "query"
        description: "Filter on gid"
        required: false
        type: "string"
        x-exportParamName: "Gid"
        x-optionalDataType: "String"
      - name: "uid"
        in: "query"
        description: "Filter on uid"
        required: false
        type: "string"
        x-exportParamName: "Uid"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of imported files."
          schema:
            $ref: "#/definitions/import_file_collection"
  /pools/{pool_id}/import_files/{file_id}:
    get:
      tags:
      - "files"
      summary: "Displays a specific file on tape of pools, specific for Data Exchange."
      description: "**API Key Scope**: import_files / show"
      operationId: "show_import_file_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "file_id"
        in: "path"
        description: "Numeric ID of file."
        required: true
        type: "integer"
        x-exportParamName: "FileId"
      responses:
        200:
          description: "A specific imported file."
          schema:
            $ref: "#/definitions/import_file_with_path"
  /pools/{pool_id}/import_files/{file_parent_id}/children:
    get:
      tags:
      - "files"
      summary: "Lists files under a specific folder on tape of pools, specific for\
        \ Data Exchange."
      description: "**API Key Scope**: import_files / index"
      operationId: "import_files_children_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "file_parent_id"
        in: "path"
        description: "Numeric ID of parent folder."
        required: true
        type: "integer"
        x-exportParamName: "FileParentId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "file_id"
        in: "query"
        description: "Filter on file id"
        required: false
        type: "string"
        x-exportParamName: "FileId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "permission"
        in: "query"
        description: "Filter on permission"
        required: false
        type: "string"
        x-exportParamName: "Permission"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "change_date"
        in: "query"
        description: "Filter on change date"
        required: false
        type: "string"
        x-exportParamName: "ChangeDate"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "access_date"
        in: "query"
        description: "Filter on access date"
        required: false
        type: "string"
        x-exportParamName: "AccessDate"
        x-optionalDataType: "String"
      - name: "gid"
        in: "query"
        description: "Filter on gid"
        required: false
        type: "string"
        x-exportParamName: "Gid"
        x-optionalDataType: "String"
      - name: "uid"
        in: "query"
        description: "Filter on uid"
        required: false
        type: "string"
        x-exportParamName: "Uid"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of imported files."
          schema:
            $ref: "#/definitions/import_file_collection"
  /pools/{pool_id}/on_tapes_files:
    get:
      tags:
      - "files"
      summary: "Lists files on root of tape of pools, specific for Active and Offline."
      description: "**API Key Scope**: on_tapes_files / index"
      operationId: "index_on_tapes_files_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of files on tapes."
          schema:
            $ref: "#/definitions/on_tapes_file_collection"
  /pools/{pool_id}/on_tapes_files/{file_id}:
    get:
      tags:
      - "files"
      summary: "Displays a specific file on tape of pools, specific for Active and\
        \ Offline."
      description: "**API Key Scope**: on_tapes_files / show"
      operationId: "show_on_tape_file_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "file_id"
        in: "path"
        description: "Numeric ID of file."
        required: true
        type: "integer"
        x-exportParamName: "FileId"
      responses:
        200:
          description: "A specific file on tapes."
          schema:
            $ref: "#/definitions/on_tapes_file"
  /pools/{pool_id}/on_tapes_files/{file_parent_id}/children:
    get:
      tags:
      - "files"
      summary: "Lists files under a specific folder on tape of pools, specific for\
        \ Active and Offline."
      description: "**API Key Scope**: on_tapes_files / index"
      operationId: "on_tapes_files_children_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "file_parent_id"
        in: "path"
        description: "Numeric ID of parent folder."
        required: true
        type: "integer"
        x-exportParamName: "FileParentId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of files on tapes."
          schema:
            $ref: "#/definitions/on_tapes_file_collection"
  /pools/{pool_id}/tapes:
    get:
      tags:
      - "tapes"
      summary: "Lists all tapes."
      description: "**API Key Scope**: tapes / index"
      operationId: "index_tapes_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "tape_library_id"
        in: "query"
        description: "Filter on tape library id"
        required: false
        type: "string"
        x-exportParamName: "TapeLibraryId"
        x-optionalDataType: "String"
      - name: "barcode"
        in: "query"
        description: "Filter on barcode"
        required: false
        type: "string"
        x-exportParamName: "Barcode"
        x-optionalDataType: "String"
      - name: "location"
        in: "query"
        description: "Filter on location"
        required: false
        type: "string"
        x-exportParamName: "Location"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "locked"
        in: "query"
        description: "Filter on locked"
        required: false
        type: "string"
        x-exportParamName: "Locked"
        x-optionalDataType: "String"
      - name: "scratch"
        in: "query"
        description: "Filter on scratch"
        required: false
        type: "string"
        x-exportParamName: "Scratch"
        x-optionalDataType: "String"
      - name: "cleaning"
        in: "query"
        description: "Filter on cleaning"
        required: false
        type: "string"
        x-exportParamName: "Cleaning"
        x-optionalDataType: "String"
      - name: "write_protect"
        in: "query"
        description: "Filter on write protect"
        required: false
        type: "string"
        x-exportParamName: "WriteProtect"
        x-optionalDataType: "String"
      - name: "mounted"
        in: "query"
        description: "Filter on mounted"
        required: false
        type: "string"
        x-exportParamName: "Mounted"
        x-optionalDataType: "String"
      - name: "ejected"
        in: "query"
        description: "Filter on ejected"
        required: false
        type: "string"
        x-exportParamName: "Ejected"
        x-optionalDataType: "String"
      - name: "known"
        in: "query"
        description: "Filter on known"
        required: false
        type: "string"
        x-exportParamName: "Known"
        x-optionalDataType: "String"
      - name: "mount_count"
        in: "query"
        description: "Filter on mount count"
        required: false
        type: "string"
        x-exportParamName: "MountCount"
        x-optionalDataType: "String"
      - name: "date_in"
        in: "query"
        description: "Filter on date in"
        required: false
        type: "string"
        x-exportParamName: "DateIn"
        x-optionalDataType: "String"
      - name: "date_move"
        in: "query"
        description: "Filter on date move"
        required: false
        type: "string"
        x-exportParamName: "DateMove"
        x-optionalDataType: "String"
      - name: "free"
        in: "query"
        description: "Filter on free"
        required: false
        type: "string"
        x-exportParamName: "Free"
        x-optionalDataType: "String"
      - name: "max"
        in: "query"
        description: "Filter on max"
        required: false
        type: "string"
        x-exportParamName: "Max"
        x-optionalDataType: "String"
      - name: "last_size_update"
        in: "query"
        description: "Filter on last size update"
        required: false
        type: "string"
        x-exportParamName: "LastSizeUpdate"
        x-optionalDataType: "String"
      - name: "last_maintenance"
        in: "query"
        description: "Filter on last maintenance"
        required: false
        type: "string"
        x-exportParamName: "LastMaintenance"
        x-optionalDataType: "String"
      - name: "last_repack"
        in: "query"
        description: "Filter on last repack"
        required: false
        type: "string"
        x-exportParamName: "LastRepack"
        x-optionalDataType: "String"
      - name: "repack_status"
        in: "query"
        description: "Filter on repack status"
        required: false
        type: "string"
        x-exportParamName: "RepackStatus"
        x-optionalDataType: "String"
      - name: "hash"
        in: "query"
        description: "Filter on hash"
        required: false
        type: "string"
        x-exportParamName: "Hash"
        x-optionalDataType: "String"
      - name: "force_import_type"
        in: "query"
        description: "Filter on force import type"
        required: false
        type: "string"
        x-exportParamName: "ForceImportType"
        x-optionalDataType: "String"
      - name: "need_to_check"
        in: "query"
        description: "Filter on need to check"
        required: false
        type: "string"
        x-exportParamName: "NeedToCheck"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of tapes."
          schema:
            $ref: "#/definitions/tape_collection"
  /pools/{pool_id}/tapes/{tape_id}:
    get:
      tags:
      - "tapes"
      summary: "Displays a specific tape."
      description: "**API Key Scope**: tapes / show"
      operationId: "show_tape_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "tape_id"
        in: "path"
        description: "Numeric ID, or barcode of tape."
        required: true
        type: "string"
        x-exportParamName: "TapeId"
      responses:
        200:
          description: "A specific tape."
          schema:
            $ref: "#/definitions/tape"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /pools/{pool_id}/tapes/{tape_id}/mount:
    get:
      tags:
      - "tapes"
      summary: "Get mount status of Tape."
      description: "**API Key Scope**: tapes / mount_status"
      operationId: "mount_status_tape_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "tape_id"
        in: "path"
        description: "Numeric ID, or barcode of tape."
        required: true
        type: "string"
        x-exportParamName: "TapeId"
      responses:
        200:
          description: "Mount status of storage."
          schema:
            $ref: "#/definitions/mount_status"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /tape_drives:
    get:
      tags:
      - "tape_drives"
      summary: "Lists all tape drives."
      description: "**API Key Scope**: tape_drives / index"
      operationId: "index_tape_drives"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "tape_library_id"
        in: "query"
        description: "Filter on tape library id"
        required: false
        type: "string"
        x-exportParamName: "TapeLibraryId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "serial"
        in: "query"
        description: "Filter on serial"
        required: false
        type: "string"
        x-exportParamName: "Serial"
        x-optionalDataType: "String"
      - name: "comment"
        in: "query"
        description: "Filter on comment"
        required: false
        type: "string"
        x-exportParamName: "Comment"
        x-optionalDataType: "String"
      - name: "scsi_address"
        in: "query"
        description: "Filter on scsi address"
        required: false
        type: "string"
        x-exportParamName: "ScsiAddress"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "query"
        description: "Filter on vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "product"
        in: "query"
        description: "Filter on product"
        required: false
        type: "string"
        x-exportParamName: "Product"
        x-optionalDataType: "String"
      - name: "firmware"
        in: "query"
        description: "Filter on firmware"
        required: false
        type: "string"
        x-exportParamName: "Firmware"
        x-optionalDataType: "String"
      - name: "device"
        in: "query"
        description: "Filter on device"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "sgdevice"
        in: "query"
        description: "Filter on sgdevice"
        required: false
        type: "string"
        x-exportParamName: "Sgdevice"
        x-optionalDataType: "String"
      - name: "libso"
        in: "query"
        description: "Filter on libso"
        required: false
        type: "string"
        x-exportParamName: "Libso"
        x-optionalDataType: "String"
      - name: "acs"
        in: "query"
        description: "Filter on acs"
        required: false
        type: "string"
        x-exportParamName: "Acs"
        x-optionalDataType: "String"
      - name: "lsm"
        in: "query"
        description: "Filter on lsm"
        required: false
        type: "string"
        x-exportParamName: "Lsm"
        x-optionalDataType: "String"
      - name: "panel"
        in: "query"
        description: "Filter on panel"
        required: false
        type: "string"
        x-exportParamName: "Panel"
        x-optionalDataType: "String"
      - name: "transport"
        in: "query"
        description: "Filter on transport"
        required: false
        type: "string"
        x-exportParamName: "Transport"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "Filter on status"
        required: false
        type: "string"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "full"
        in: "query"
        description: "Filter on full"
        required: false
        type: "string"
        x-exportParamName: "Full"
        x-optionalDataType: "String"
      - name: "mount_count"
        in: "query"
        description: "Filter on mount count"
        required: false
        type: "string"
        x-exportParamName: "MountCount"
        x-optionalDataType: "String"
      - name: "use_to"
        in: "query"
        description: "Filter on use to"
        required: false
        type: "string"
        x-exportParamName: "UseTo"
        x-optionalDataType: "String"
      - name: "use_by"
        in: "query"
        description: "Filter on use by"
        required: false
        type: "string"
        x-exportParamName: "UseBy"
        x-optionalDataType: "String"
      - name: "barcode"
        in: "query"
        description: "Filter on barcode"
        required: false
        type: "string"
        x-exportParamName: "Barcode"
        x-optionalDataType: "String"
      - name: "task_id"
        in: "query"
        description: "Filter on task id"
        required: false
        type: "string"
        x-exportParamName: "TaskId"
        x-optionalDataType: "String"
      - name: "use_file_processed_size"
        in: "query"
        description: "Filter on use file processed size"
        required: false
        type: "string"
        x-exportParamName: "UseFileProcessedSize"
        x-optionalDataType: "String"
      - name: "use_file_size_to_process"
        in: "query"
        description: "Filter on use file size to process"
        required: false
        type: "string"
        x-exportParamName: "UseFileSizeToProcess"
        x-optionalDataType: "String"
      - name: "use_file_name_processed"
        in: "query"
        description: "Filter on use file name processed"
        required: false
        type: "string"
        x-exportParamName: "UseFileNameProcessed"
        x-optionalDataType: "String"
      - name: "bandwidth"
        in: "query"
        description: "Filter on bandwidth"
        required: false
        type: "string"
        x-exportParamName: "Bandwidth"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of tape drives."
          schema:
            $ref: "#/definitions/tape_drive_collection"
  /tape_drives/{tape_drive_id}:
    get:
      tags:
      - "tape_drives"
      summary: "Displays a specific tape drive."
      description: "**API Key Scope**: tape_drives / show"
      operationId: "show_tape_drive"
      parameters:
      - name: "tape_drive_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape drive."
        required: true
        type: "string"
        x-exportParamName: "TapeDriveId"
      responses:
        200:
          description: "A specific tape drive."
          schema:
            $ref: "#/definitions/tape_drive"
    put:
      tags:
      - "tape_drives"
      summary: "Updates a specific tape drive."
      description: "**API Key Scope**: tape_drives / update"
      operationId: "update_tape_drive"
      parameters:
      - name: "tape_drive_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape drive."
        required: true
        type: "string"
        x-exportParamName: "TapeDriveId"
      - in: "body"
        name: "tape_drive_body"
        required: true
        schema:
          $ref: "#/definitions/tape_drive"
        x-exportParamName: "TapeDriveBody"
      responses:
        200:
          description: "A specific tape drive."
          schema:
            $ref: "#/definitions/tape_drive"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "tape_drives"
      summary: "Destroys a specific tape drive."
      description: "**API Key Scope**: tape_drives / destroy"
      operationId: "destroy_tape_drive"
      parameters:
      - name: "tape_drive_id"
        in: "path"
        description: "Numeric ID, serial, or name of tape drive."
        required: true
        type: "string"
        x-exportParamName: "TapeDriveId"
      responses:
        204:
          description: "Tape drive destroyed."
  /tapes:
    get:
      tags:
      - "tapes"
      summary: "Lists all tapes."
      description: "**API Key Scope**: tapes / index"
      operationId: "index_tapes"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "tape_library_id"
        in: "query"
        description: "Filter on tape library id"
        required: false
        type: "string"
        x-exportParamName: "TapeLibraryId"
        x-optionalDataType: "String"
      - name: "pool_id"
        in: "query"
        description: "Filter on a pool id"
        required: false
        type: "string"
        x-exportParamName: "PoolId"
        x-optionalDataType: "String"
      - name: "barcode"
        in: "query"
        description: "Filter on barcode"
        required: false
        type: "string"
        x-exportParamName: "Barcode"
        x-optionalDataType: "String"
      - name: "location"
        in: "query"
        description: "Filter on location"
        required: false
        type: "string"
        x-exportParamName: "Location"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "locked"
        in: "query"
        description: "Filter on locked"
        required: false
        type: "string"
        x-exportParamName: "Locked"
        x-optionalDataType: "String"
      - name: "scratch"
        in: "query"
        description: "Filter on scratch"
        required: false
        type: "string"
        x-exportParamName: "Scratch"
        x-optionalDataType: "String"
      - name: "cleaning"
        in: "query"
        description: "Filter on cleaning"
        required: false
        type: "string"
        x-exportParamName: "Cleaning"
        x-optionalDataType: "String"
      - name: "write_protect"
        in: "query"
        description: "Filter on write protect"
        required: false
        type: "string"
        x-exportParamName: "WriteProtect"
        x-optionalDataType: "String"
      - name: "mounted"
        in: "query"
        description: "Filter on mounted"
        required: false
        type: "string"
        x-exportParamName: "Mounted"
        x-optionalDataType: "String"
      - name: "ejected"
        in: "query"
        description: "Filter on ejected"
        required: false
        type: "string"
        x-exportParamName: "Ejected"
        x-optionalDataType: "String"
      - name: "known"
        in: "query"
        description: "Filter on known"
        required: false
        type: "string"
        x-exportParamName: "Known"
        x-optionalDataType: "String"
      - name: "mount_count"
        in: "query"
        description: "Filter on mount count"
        required: false
        type: "string"
        x-exportParamName: "MountCount"
        x-optionalDataType: "String"
      - name: "date_in"
        in: "query"
        description: "Filter on date in"
        required: false
        type: "string"
        x-exportParamName: "DateIn"
        x-optionalDataType: "String"
      - name: "date_move"
        in: "query"
        description: "Filter on date move"
        required: false
        type: "string"
        x-exportParamName: "DateMove"
        x-optionalDataType: "String"
      - name: "free"
        in: "query"
        description: "Filter on free"
        required: false
        type: "string"
        x-exportParamName: "Free"
        x-optionalDataType: "String"
      - name: "max"
        in: "query"
        description: "Filter on max"
        required: false
        type: "string"
        x-exportParamName: "Max"
        x-optionalDataType: "String"
      - name: "last_size_update"
        in: "query"
        description: "Filter on last size update"
        required: false
        type: "string"
        x-exportParamName: "LastSizeUpdate"
        x-optionalDataType: "String"
      - name: "last_maintenance"
        in: "query"
        description: "Filter on last maintenance"
        required: false
        type: "string"
        x-exportParamName: "LastMaintenance"
        x-optionalDataType: "String"
      - name: "last_repack"
        in: "query"
        description: "Filter on last repack"
        required: false
        type: "string"
        x-exportParamName: "LastRepack"
        x-optionalDataType: "String"
      - name: "repack_status"
        in: "query"
        description: "Filter on repack status"
        required: false
        type: "string"
        x-exportParamName: "RepackStatus"
        x-optionalDataType: "String"
      - name: "hash"
        in: "query"
        description: "Filter on hash"
        required: false
        type: "string"
        x-exportParamName: "Hash"
        x-optionalDataType: "String"
      - name: "force_import_type"
        in: "query"
        description: "Filter on force import type"
        required: false
        type: "string"
        x-exportParamName: "ForceImportType"
        x-optionalDataType: "String"
      - name: "need_to_check"
        in: "query"
        description: "Filter on need to check"
        required: false
        type: "string"
        x-exportParamName: "NeedToCheck"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of tapes."
          schema:
            $ref: "#/definitions/tape_collection"
  /tapes/{tape_id}:
    get:
      tags:
      - "tapes"
      summary: "Displays a specific tape."
      description: "**API Key Scope**: tapes / show"
      operationId: "show_tape"
      parameters:
      - name: "tape_id"
        in: "path"
        description: "Numeric ID, or barcode of tape."
        required: true
        type: "string"
        x-exportParamName: "TapeId"
      responses:
        200:
          description: "A specific tape."
          schema:
            $ref: "#/definitions/tape"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /tapes/{tape_id}/mount:
    get:
      tags:
      - "tapes"
      summary: "Get mount status of Tape."
      description: "**API Key Scope**: tapes / mount_status"
      operationId: "mount_status_tape"
      parameters:
      - name: "tape_id"
        in: "path"
        description: "Numeric ID, or barcode of tape."
        required: true
        type: "string"
        x-exportParamName: "TapeId"
      responses:
        200:
          description: "Mount status of storage."
          schema:
            $ref: "#/definitions/mount_status"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /cloud_connectors:
    get:
      tags:
      - "cloud_connectors"
      summary: "Lists all cloud connectors."
      description: "**API Key Scope**: cloud_connectors / index  \nOptional API Key\
        \ Explicit Scope: cloud_connectors / get_secret_key"
      operationId: "index_cloud_connectors"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "url"
        in: "query"
        description: "Filter on url"
        required: false
        type: "string"
        x-exportParamName: "Url"
        x-optionalDataType: "String"
      - name: "url_proxy"
        in: "query"
        description: "Filter on url proxy"
        required: false
        type: "string"
        x-exportParamName: "UrlProxy"
        x-optionalDataType: "String"
      - name: "provider"
        in: "query"
        description: "Filter on provider"
        required: false
        type: "string"
        x-exportParamName: "Provider"
        x-optionalDataType: "String"
      - name: "region"
        in: "query"
        description: "Filter on region"
        required: false
        type: "string"
        x-exportParamName: "Region"
        x-optionalDataType: "String"
      - name: "access_key"
        in: "query"
        description: "Filter on access key"
        required: false
        type: "string"
        x-exportParamName: "AccessKey"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of cloud connectors."
          schema:
            $ref: "#/definitions/cloud_connector_collection"
    post:
      tags:
      - "cloud_connectors"
      summary: "Creates a new cloud connector."
      description: "**API Key Scope**: cloud_connectors / create"
      operationId: "create_cloud_connector"
      parameters:
      - in: "body"
        name: "cloud_connector_body"
        required: true
        schema:
          $ref: "#/definitions/cloud_connector"
        x-exportParamName: "CloudConnectorBody"
      responses:
        201:
          description: "A specific cloud connector."
          schema:
            $ref: "#/definitions/cloud_connector"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
  /cloud_connectors/-/test:
    get:
      tags:
      - "cloud_connectors"
      summary: "Check result of cloud connector test job."
      description: "**API Key Scope**: cloud_connectors / test"
      operationId: "test_result_cloud_connector"
      parameters:
      - name: "job_id"
        in: "query"
        description: "ID of active job"
        required: false
        type: "string"
        x-exportParamName: "JobId"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Simple list of cloud buckets."
          schema:
            $ref: "#/definitions/cloud_bucket_simple_collection"
        202:
          description: "An active job that may be queued, working, completed or failed."
          examples:
            queued:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "queued"
            working:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "working"
                progress: 2
                total: 6
            failed:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "failed"
          schema:
            $ref: "#/definitions/active_job_status"
    put:
      tags:
      - "cloud_connectors"
      summary: "Test an unsaved cloud connector."
      description: "**API Key Scope**: cloud_connectors / test"
      operationId: "test_cloud_connector"
      parameters:
      - in: "body"
        name: "cloud_connector_body"
        required: true
        schema:
          $ref: "#/definitions/cloud_connector"
        x-exportParamName: "CloudConnectorBody"
      responses:
        202:
          description: "An active job that may be queued, working, completed or failed."
          examples:
            queued:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "queued"
            working:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "working"
                progress: 2
                total: 6
            failed:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "failed"
          schema:
            $ref: "#/definitions/active_job_status"
  /cloud_connectors/{cloud_connector_id}:
    get:
      tags:
      - "cloud_connectors"
      summary: "Displays a specific cloud connector."
      description: "**API Key Scope**: cloud_connectors / show  \nOptional API Key\
        \ Explicit Scope: cloud_connectors / get_secret_key"
      operationId: "show_cloud_connector"
      parameters:
      - name: "cloud_connector_id"
        in: "path"
        description: "Numeric ID or name of cloud connector."
        required: true
        type: "string"
        x-exportParamName: "CloudConnectorId"
      responses:
        200:
          description: "A specific cloud connector."
          schema:
            $ref: "#/definitions/cloud_connector"
    put:
      tags:
      - "cloud_connectors"
      summary: "Updates a specific cloud connector."
      description: "**API Key Scope**: cloud_connectors / update"
      operationId: "update_cloud_connector"
      parameters:
      - name: "cloud_connector_id"
        in: "path"
        description: "Numeric ID or name of cloud connector."
        required: true
        type: "string"
        x-exportParamName: "CloudConnectorId"
      - in: "body"
        name: "cloud_connector_body"
        required: true
        schema:
          $ref: "#/definitions/cloud_connector"
        x-exportParamName: "CloudConnectorBody"
      responses:
        200:
          description: "A specific cloud connector."
          schema:
            $ref: "#/definitions/cloud_connector"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "cloud_connectors"
      summary: "Destroys a specific cloud connector."
      description: "**API Key Scope**: cloud_connectors / destroy"
      operationId: "destroy_cloud_connector"
      parameters:
      - name: "cloud_connector_id"
        in: "path"
        description: "Numeric ID or name of cloud connector."
        required: true
        type: "string"
        x-exportParamName: "CloudConnectorId"
      responses:
        204:
          description: "Cloud connector destroyed."
  /cloud_connectors/{cloud_connector_id}/cloud_buckets:
    get:
      tags:
      - "cloud_buckets"
      summary: "Lists all cloud buckets."
      description: "**API Key Scope**: cloud_buckets / index"
      operationId: "index_cloud_buckets_by_cloud_connector"
      parameters:
      - name: "cloud_connector_id"
        in: "path"
        description: "Numeric ID or name of cloud connector."
        required: true
        type: "string"
        x-exportParamName: "CloudConnectorId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "pool_id"
        in: "query"
        description: "Filter on a pool id"
        required: false
        type: "string"
        x-exportParamName: "PoolId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "location"
        in: "query"
        description: "Filter on location"
        required: false
        type: "string"
        x-exportParamName: "Location"
        x-optionalDataType: "String"
      - name: "price"
        in: "query"
        description: "Filter on price"
        required: false
        type: "string"
        x-exportParamName: "Price"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of cloud buckets."
          schema:
            $ref: "#/definitions/cloud_bucket_collection"
  /cloud_connectors/{cloud_connector_id}/cloud_buckets/-/sync:
    get:
      tags:
      - "cloud_buckets"
      summary: "Check result of cloud connector sync job."
      description: "**API Key Scope**: cloud_buckets / sync"
      operationId: "sync_result_cloud_buckets"
      parameters:
      - name: "cloud_connector_id"
        in: "path"
        description: "Numeric ID or name of cloud connector."
        required: true
        type: "string"
        x-exportParamName: "CloudConnectorId"
      - name: "job_id"
        in: "query"
        description: "ID of active job"
        required: false
        type: "string"
        x-exportParamName: "JobId"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Simple list of cloud buckets."
          schema:
            $ref: "#/definitions/cloud_bucket_simple_collection"
        202:
          description: "An active job that may be queued, working, completed or failed."
          examples:
            queued:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "queued"
            working:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "working"
                progress: 2
                total: 6
            failed:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "failed"
          schema:
            $ref: "#/definitions/active_job_status"
    put:
      tags:
      - "cloud_buckets"
      summary: "Synchronize internal cloud buckets with their remote equivalent."
      description: "**API Key Scope**: cloud_buckets / sync"
      operationId: "sync_cloud_buckets"
      parameters:
      - name: "cloud_connector_id"
        in: "path"
        description: "Numeric ID or name of cloud connector."
        required: true
        type: "string"
        x-exportParamName: "CloudConnectorId"
      responses:
        202:
          description: "An active job that may be queued, working, completed or failed."
          examples:
            queued:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "queued"
            working:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "working"
                progress: 2
                total: 6
            failed:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "failed"
          schema:
            $ref: "#/definitions/active_job_status"
  /cloud_connectors/{cloud_connector_id}/cloud_buckets/{cloud_bucket_id}:
    get:
      tags:
      - "cloud_buckets"
      summary: "Displays a specific cloud bucket."
      description: "**API Key Scope**: cloud_buckets / show"
      operationId: "show_cloud_bucket_by_cloud_connector"
      parameters:
      - name: "cloud_connector_id"
        in: "path"
        description: "Numeric ID or name of cloud connector."
        required: true
        type: "string"
        x-exportParamName: "CloudConnectorId"
      - name: "cloud_bucket_id"
        in: "path"
        description: "Numeric ID or name of cloud bucket."
        required: true
        type: "string"
        x-exportParamName: "CloudBucketId"
      responses:
        200:
          description: "A specific cloud bucket."
          schema:
            $ref: "#/definitions/cloud_bucket"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /cloud_connectors/{cloud_connector_id}/cloud_buckets/{cloud_bucket_id}/mount:
    get:
      tags:
      - "cloud_buckets"
      summary: "Get mount status of Cloud bucket."
      description: "**API Key Scope**: cloud_buckets / mount_status"
      operationId: "mount_status_cloud_bucket_by_cloud_connector"
      parameters:
      - name: "cloud_connector_id"
        in: "path"
        description: "Numeric ID or name of cloud connector."
        required: true
        type: "string"
        x-exportParamName: "CloudConnectorId"
      - name: "cloud_bucket_id"
        in: "path"
        description: "Numeric ID or name of cloud bucket."
        required: true
        type: "string"
        x-exportParamName: "CloudBucketId"
      responses:
        200:
          description: "Mount status of storage."
          schema:
            $ref: "#/definitions/mount_status"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /pools/{pool_id}/cloud_buckets:
    get:
      tags:
      - "cloud_buckets"
      summary: "Lists all cloud buckets from pool."
      description: "**API Key Scope**: cloud_buckets / index"
      operationId: "index_cloud_buckets_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "cloud_connector_id"
        in: "query"
        description: "Filter on cloud connector id"
        required: false
        type: "string"
        x-exportParamName: "CloudConnectorId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "location"
        in: "query"
        description: "Filter on location"
        required: false
        type: "string"
        x-exportParamName: "Location"
        x-optionalDataType: "String"
      - name: "price"
        in: "query"
        description: "Filter on price"
        required: false
        type: "string"
        x-exportParamName: "Price"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of cloud buckets."
          schema:
            $ref: "#/definitions/cloud_bucket_collection"
  /pools/{pool_id}/cloud_buckets/{cloud_bucket_id}:
    get:
      tags:
      - "cloud_buckets"
      summary: "Displays a specific cloud bucket."
      description: "**API Key Scope**: cloud_buckets / show"
      operationId: "show_cloud_bucket_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "cloud_bucket_id"
        in: "path"
        description: "Numeric ID or name of cloud bucket."
        required: true
        type: "string"
        x-exportParamName: "CloudBucketId"
      responses:
        200:
          description: "A specific cloud bucket."
          schema:
            $ref: "#/definitions/cloud_bucket"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /pools/{pool_id}/cloud_buckets/{cloud_bucket_id}/mount:
    get:
      tags:
      - "cloud_buckets"
      summary: "Get mount status of Cloud bucket."
      description: "**API Key Scope**: cloud_buckets / mount_status"
      operationId: "mount_status_cloud_bucket_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "cloud_bucket_id"
        in: "path"
        description: "Numeric ID or name of cloud bucket."
        required: true
        type: "string"
        x-exportParamName: "CloudBucketId"
      responses:
        200:
          description: "Mount status of storage."
          schema:
            $ref: "#/definitions/mount_status"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /cloud_buckets:
    get:
      tags:
      - "cloud_buckets"
      summary: "Lists all cloud buckets."
      description: "**API Key Scope**: cloud_buckets / index"
      operationId: "index_cloud_buckets"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "cloud_connector_id"
        in: "query"
        description: "Filter on cloud connector id"
        required: false
        type: "string"
        x-exportParamName: "CloudConnectorId"
        x-optionalDataType: "String"
      - name: "pool_id"
        in: "query"
        description: "Filter on a pool id"
        required: false
        type: "string"
        x-exportParamName: "PoolId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "location"
        in: "query"
        description: "Filter on location"
        required: false
        type: "string"
        x-exportParamName: "Location"
        x-optionalDataType: "String"
      - name: "price"
        in: "query"
        description: "Filter on price"
        required: false
        type: "string"
        x-exportParamName: "Price"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of cloud buckets."
          schema:
            $ref: "#/definitions/cloud_bucket_collection"
  /cloud_buckets/{cloud_bucket_id}:
    get:
      tags:
      - "cloud_buckets"
      summary: "Displays a specific cloud bucket."
      description: "**API Key Scope**: cloud_buckets / show"
      operationId: "show_cloud_bucket"
      parameters:
      - name: "cloud_bucket_id"
        in: "path"
        description: "Numeric ID or name of cloud bucket."
        required: true
        type: "string"
        x-exportParamName: "CloudBucketId"
      responses:
        200:
          description: "A specific cloud bucket."
          schema:
            $ref: "#/definitions/cloud_bucket"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /cloud_buckets/{cloud_bucket_id}/mount:
    get:
      tags:
      - "cloud_buckets"
      summary: "Get mount status of Cloud bucket."
      description: "**API Key Scope**: cloud_buckets / mount_status"
      operationId: "mount_status_cloud_bucket"
      parameters:
      - name: "cloud_bucket_id"
        in: "path"
        description: "Numeric ID or name of cloud bucket."
        required: true
        type: "string"
        x-exportParamName: "CloudBucketId"
      responses:
        200:
          description: "Mount status of storage."
          schema:
            $ref: "#/definitions/mount_status"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /nas:
    get:
      tags:
      - "nas"
      summary: "Lists all NAS."
      description: "**API Key Scope**: nas / index"
      operationId: "index_nas"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "comment"
        in: "query"
        description: "Filter on comment"
        required: false
        type: "string"
        x-exportParamName: "Comment"
        x-optionalDataType: "String"
      - name: "host"
        in: "query"
        description: "Filter on host"
        required: false
        type: "string"
        x-exportParamName: "Host"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "price"
        in: "query"
        description: "Filter on price"
        required: false
        type: "string"
        x-exportParamName: "Price"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of NAS."
          schema:
            $ref: "#/definitions/nas_collection"
    post:
      tags:
      - "nas"
      summary: "Creates a new NAS."
      description: "**API Key Scope**: nas / create"
      operationId: "create_nas"
      parameters:
      - in: "body"
        name: "nas_body"
        required: true
        schema:
          $ref: "#/definitions/nas"
        x-exportParamName: "NasBody"
      responses:
        201:
          description: "A specific NAS."
          schema:
            $ref: "#/definitions/nas"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
  /nas/{nas_id}:
    get:
      tags:
      - "nas"
      summary: "Displays a specific NAS."
      description: "**API Key Scope**: nas / show"
      operationId: "show_nas"
      parameters:
      - name: "nas_id"
        in: "path"
        description: "Numeric ID or name of NAS."
        required: true
        type: "string"
        x-exportParamName: "NasId"
      responses:
        200:
          description: "A specific NAS."
          schema:
            $ref: "#/definitions/nas"
    put:
      tags:
      - "nas"
      summary: "Updates a specific NAS."
      description: "**API Key Scope**: nas / update"
      operationId: "update_nas"
      parameters:
      - name: "nas_id"
        in: "path"
        description: "Numeric ID or name of NAS."
        required: true
        type: "string"
        x-exportParamName: "NasId"
      - in: "body"
        name: "nas_body"
        required: true
        schema:
          $ref: "#/definitions/nas"
        x-exportParamName: "NasBody"
      responses:
        200:
          description: "A specific NAS."
          schema:
            $ref: "#/definitions/nas"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "nas"
      summary: "Destroys a specific NAS."
      description: "**API Key Scope**: nas / destroy"
      operationId: "destroy_nas"
      parameters:
      - name: "nas_id"
        in: "path"
        description: "Numeric ID or name of NAS."
        required: true
        type: "string"
        x-exportParamName: "NasId"
      responses:
        204:
          description: "NAS destroyed."
  /nas/{nas_id}/nas_shares:
    get:
      tags:
      - "nas_shares"
      summary: "Lists all NAS shares."
      description: "**API Key Scope**: nas_shares / index  \nOptional API Key Explicit\
        \ Scope: nas_shares / get_password"
      operationId: "index_nas_shares_by_nas"
      parameters:
      - name: "nas_id"
        in: "path"
        description: "Numeric ID or name of NAS."
        required: true
        type: "string"
        x-exportParamName: "NasId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "path"
        in: "query"
        description: "Filter on path"
        required: false
        type: "string"
        x-exportParamName: "Path"
        x-optionalDataType: "String"
      - name: "options"
        in: "query"
        description: "Filter on options"
        required: false
        type: "string"
        x-exportParamName: "Options"
        x-optionalDataType: "String"
      - name: "username"
        in: "query"
        description: "Filter on username"
        required: false
        type: "string"
        x-exportParamName: "Username"
        x-optionalDataType: "String"
      - name: "pool_id"
        in: "query"
        description: "Filter on a pool id"
        required: false
        type: "string"
        x-exportParamName: "PoolId"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of NAS shares."
          schema:
            $ref: "#/definitions/nas_share_collection"
    post:
      tags:
      - "nas_shares"
      summary: "Creates a new NAS share."
      description: "**API Key Scope**: nas_shares / create"
      operationId: "create_nas_share_by_nas"
      parameters:
      - name: "nas_id"
        in: "path"
        description: "Numeric ID or name of NAS."
        required: true
        type: "string"
        x-exportParamName: "NasId"
      - in: "body"
        name: "nas_share_body"
        required: true
        schema:
          $ref: "#/definitions/nas_share"
        x-exportParamName: "NasShareBody"
      responses:
        201:
          description: "A specific NAS share."
          schema:
            $ref: "#/definitions/nas_share"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
  /nas/{nas_id}/nas_shares/-/test:
    get:
      tags:
      - "nas_shares"
      summary: "Check result of a NAS Share test job."
      description: "**API Key Scope**: nas_shares / test"
      operationId: "test_result_nas_share"
      parameters:
      - name: "nas_id"
        in: "path"
        description: "Numeric ID or name of NAS."
        required: true
        type: "string"
        x-exportParamName: "NasId"
      - name: "job_id"
        in: "query"
        description: "ID of active job"
        required: false
        type: "string"
        x-exportParamName: "JobId"
        x-optionalDataType: "String"
      responses:
        200:
          description: "An active job that may be queued, working, completed or failed."
          examples:
            queued:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "queued"
            working:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "working"
                progress: 2
                total: 6
            failed:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "failed"
          schema:
            $ref: "#/definitions/active_job_status"
        202:
          description: "An active job that may be queued, working, completed or failed."
          examples:
            queued:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "queued"
            working:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "working"
                progress: 2
                total: 6
            failed:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "failed"
          schema:
            $ref: "#/definitions/active_job_status"
    put:
      tags:
      - "nas_shares"
      summary: "Test an unsaved NAS Share."
      description: "**API Key Scope**: nas_shares / test"
      operationId: "test_nas_share"
      parameters:
      - name: "nas_id"
        in: "path"
        description: "Numeric ID or name of NAS."
        required: true
        type: "string"
        x-exportParamName: "NasId"
      - in: "body"
        name: "nas_share_body"
        required: true
        schema:
          $ref: "#/definitions/nas_share"
        x-exportParamName: "NasShareBody"
      responses:
        202:
          description: "An active job that may be queued, working, completed or failed."
          examples:
            queued:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "queued"
            working:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "working"
                progress: 2
                total: 6
            failed:
              value:
                job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
                status: "failed"
          schema:
            $ref: "#/definitions/active_job_status"
  /nas/{nas_id}/nas_shares/{nas_share_id}:
    get:
      tags:
      - "nas_shares"
      summary: "Displays a specific NAS share."
      description: "**API Key Scope**: nas_shares / show  \nOptional API Key Explicit\
        \ Scope: nas_shares / get_password"
      operationId: "show_nas_share_by_nas"
      parameters:
      - name: "nas_id"
        in: "path"
        description: "Numeric ID or name of NAS."
        required: true
        type: "string"
        x-exportParamName: "NasId"
      - name: "nas_share_id"
        in: "path"
        description: "Numeric ID of NAS share."
        required: true
        type: "integer"
        x-exportParamName: "NasShareId"
      responses:
        200:
          description: "A specific NAS share."
          schema:
            $ref: "#/definitions/nas_share"
    put:
      tags:
      - "nas_shares"
      summary: "Updates a specific NAS share."
      description: "**API Key Scope**: nas_shares / update"
      operationId: "update_nas_share_by_nas"
      parameters:
      - name: "nas_id"
        in: "path"
        description: "Numeric ID or name of NAS."
        required: true
        type: "string"
        x-exportParamName: "NasId"
      - name: "nas_share_id"
        in: "path"
        description: "Numeric ID of NAS share."
        required: true
        type: "integer"
        x-exportParamName: "NasShareId"
      - in: "body"
        name: "nas_share_body"
        required: true
        schema:
          $ref: "#/definitions/nas_share"
        x-exportParamName: "NasShareBody"
      responses:
        200:
          description: "A specific NAS share."
          schema:
            $ref: "#/definitions/nas_share"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "nas_shares"
      summary: "Destroys a specific NAS share."
      description: "**API Key Scope**: nas_shares / destroy"
      operationId: "destroy_nas_share_by_nas"
      parameters:
      - name: "nas_id"
        in: "path"
        description: "Numeric ID or name of NAS."
        required: true
        type: "string"
        x-exportParamName: "NasId"
      - name: "nas_share_id"
        in: "path"
        description: "Numeric ID of NAS share."
        required: true
        type: "integer"
        x-exportParamName: "NasShareId"
      responses:
        204:
          description: "NAS share destroyed."
  /nas/{nas_id}/nas_shares/{nas_share_id}/mount:
    get:
      tags:
      - "nas_shares"
      summary: "Get mount status of NAS Share."
      description: "**API Key Scope**: nas_shares / mount_status"
      operationId: "mount_status_nas_share_by_nas"
      parameters:
      - name: "nas_id"
        in: "path"
        description: "Numeric ID or name of NAS."
        required: true
        type: "string"
        x-exportParamName: "NasId"
      - name: "nas_share_id"
        in: "path"
        description: "Numeric ID of NAS share."
        required: true
        type: "integer"
        x-exportParamName: "NasShareId"
      responses:
        200:
          description: "Mount status of storage."
          schema:
            $ref: "#/definitions/mount_status"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /nas_shares:
    get:
      tags:
      - "nas_shares"
      summary: "Lists all NAS shares."
      description: "**API Key Scope**: nas_shares / index  \nOptional API Key Explicit\
        \ Scope: nas_shares / get_password"
      operationId: "index_nas_shares"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "path"
        in: "query"
        description: "Filter on path"
        required: false
        type: "string"
        x-exportParamName: "Path"
        x-optionalDataType: "String"
      - name: "options"
        in: "query"
        description: "Filter on options"
        required: false
        type: "string"
        x-exportParamName: "Options"
        x-optionalDataType: "String"
      - name: "username"
        in: "query"
        description: "Filter on username"
        required: false
        type: "string"
        x-exportParamName: "Username"
        x-optionalDataType: "String"
      - name: "nas_id"
        in: "query"
        description: "Filter on NAS id"
        required: false
        type: "string"
        x-exportParamName: "NasId"
        x-optionalDataType: "String"
      - name: "pool_id"
        in: "query"
        description: "Filter on a pool id"
        required: false
        type: "string"
        x-exportParamName: "PoolId"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of NAS shares."
          schema:
            $ref: "#/definitions/nas_share_collection"
  /nas_shares/{nas_share_id}:
    get:
      tags:
      - "nas_shares"
      summary: "Displays a specific NAS share."
      description: "**API Key Scope**: nas_shares / show  \nOptional API Key Explicit\
        \ Scope: nas_shares / get_password"
      operationId: "show_nas_shares"
      parameters:
      - name: "nas_share_id"
        in: "path"
        description: "Numeric ID of NAS share."
        required: true
        type: "integer"
        x-exportParamName: "NasShareId"
      responses:
        200:
          description: "A specific NAS share."
          schema:
            $ref: "#/definitions/nas_share"
    put:
      tags:
      - "nas_shares"
      summary: "Updates a specific NAS share."
      description: "**API Key Scope**: nas_shares / update"
      operationId: "update_nas_share"
      parameters:
      - name: "nas_share_id"
        in: "path"
        description: "Numeric ID of NAS share."
        required: true
        type: "integer"
        x-exportParamName: "NasShareId"
      - in: "body"
        name: "nas_share_body"
        required: true
        schema:
          $ref: "#/definitions/nas_share"
        x-exportParamName: "NasShareBody"
      responses:
        200:
          description: "A specific NAS share."
          schema:
            $ref: "#/definitions/nas_share"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "nas_shares"
      summary: "Destroys a specific NAS share."
      description: "**API Key Scope**: nas_shares / destroy"
      operationId: "destroy_nas_share"
      parameters:
      - name: "nas_share_id"
        in: "path"
        description: "Numeric ID of NAS share."
        required: true
        type: "integer"
        x-exportParamName: "NasShareId"
      responses:
        204:
          description: "NAS share destroyed."
  /nas_shares/{nas_share_id}/mount:
    get:
      tags:
      - "nas_shares"
      summary: "Get mount status of NAS Share."
      description: "**API Key Scope**: nas_shares / mount_status"
      operationId: "mount_status_nas_share"
      parameters:
      - name: "nas_share_id"
        in: "path"
        description: "Numeric ID of NAS share."
        required: true
        type: "integer"
        x-exportParamName: "NasShareId"
      responses:
        200:
          description: "Mount status of storage."
          schema:
            $ref: "#/definitions/mount_status"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /pools/{pool_id}/nas_shares:
    get:
      tags:
      - "nas_shares"
      summary: "Lists all NAS shares from pool."
      description: "**API Key Scope**: nas_shares / index  \nOptional API Key Explicit\
        \ Scope: nas_shares / get_password"
      operationId: "index_nas_shares_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "path"
        in: "query"
        description: "Filter on path"
        required: false
        type: "string"
        x-exportParamName: "Path"
        x-optionalDataType: "String"
      - name: "options"
        in: "query"
        description: "Filter on options"
        required: false
        type: "string"
        x-exportParamName: "Options"
        x-optionalDataType: "String"
      - name: "username"
        in: "query"
        description: "Filter on username"
        required: false
        type: "string"
        x-exportParamName: "Username"
        x-optionalDataType: "String"
      - name: "nas_id"
        in: "query"
        description: "Filter on NAS id"
        required: false
        type: "string"
        x-exportParamName: "NasId"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of NAS shares."
          schema:
            $ref: "#/definitions/nas_share_collection"
  /pools/{pool_id}/nas_shares/{nas_share_id}:
    get:
      tags:
      - "nas_shares"
      summary: "Displays a specific NAS share."
      description: "**API Key Scope**: nas_shares / show  \nOptional API Key Explicit\
        \ Scope: nas_shares / get_password"
      operationId: "show_nas_shares_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "nas_share_id"
        in: "path"
        description: "Numeric ID of NAS share."
        required: true
        type: "integer"
        x-exportParamName: "NasShareId"
      responses:
        200:
          description: "A specific NAS share."
          schema:
            $ref: "#/definitions/nas_share"
    put:
      tags:
      - "nas_shares"
      summary: "Updates a specific NAS share."
      description: "**API Key Scope**: nas_shares / update"
      operationId: "update_nas_share_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "nas_share_id"
        in: "path"
        description: "Numeric ID of NAS share."
        required: true
        type: "integer"
        x-exportParamName: "NasShareId"
      - in: "body"
        name: "nas_share_body"
        required: true
        schema:
          $ref: "#/definitions/nas_share"
        x-exportParamName: "NasShareBody"
      responses:
        200:
          description: "A specific NAS share."
          schema:
            $ref: "#/definitions/nas_share"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "nas_shares"
      summary: "Destroys a specific NAS share."
      description: "**API Key Scope**: nas_shares / destroy"
      operationId: "destroy_nas_share_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "nas_share_id"
        in: "path"
        description: "Numeric ID of NAS share."
        required: true
        type: "integer"
        x-exportParamName: "NasShareId"
      responses:
        204:
          description: "NAS share destroyed."
  /pools/{pool_id}/nas_shares/{nas_share_id}/mount:
    get:
      tags:
      - "nas_shares"
      summary: "Get mount status of NAS Share."
      description: "**API Key Scope**: nas_shares / mount_status"
      operationId: "mount_status_nas_share_by_pool"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "Numeric ID, or name of pool."
        required: true
        type: "string"
        x-exportParamName: "PoolId"
      - name: "nas_share_id"
        in: "path"
        description: "Numeric ID of NAS share."
        required: true
        type: "integer"
        x-exportParamName: "NasShareId"
      responses:
        200:
          description: "Mount status of storage."
          schema:
            $ref: "#/definitions/mount_status"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /tasks:
    get:
      tags:
      - "tasks"
      summary: "Lists all tasks."
      description: "**API Key Scope**: tasks / index"
      operationId: "index_tasks"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "comment"
        in: "query"
        description: "Filter on comment"
        required: false
        type: "string"
        x-exportParamName: "Comment"
        x-optionalDataType: "String"
      - name: "workflow_type"
        in: "query"
        description: "Filter on task workflow type"
        required: false
        type: "string"
        x-exportParamName: "WorkflowType"
        x-optionalDataType: "String"
      - name: "workflow_action"
        in: "query"
        description: "Filter on task workflow action"
        required: false
        type: "string"
        x-exportParamName: "WorkflowAction"
        x-optionalDataType: "String"
      - name: "source_type"
        in: "query"
        description: "Filter on task source type"
        required: false
        type: "string"
        x-exportParamName: "SourceType"
        x-optionalDataType: "String"
      - name: "destination_type"
        in: "query"
        description: "Filter on task destination type"
        required: false
        type: "string"
        x-exportParamName: "DestinationType"
        x-optionalDataType: "String"
      - name: "priority"
        in: "query"
        description: "Filter on priority"
        required: false
        type: "string"
        x-exportParamName: "Priority"
        x-optionalDataType: "String"
      - name: "conflict_resolution"
        in: "query"
        description: "Filter on conflict resolution"
        required: false
        type: "string"
        x-exportParamName: "ConflictResolution"
        x-optionalDataType: "String"
      - name: "action"
        in: "query"
        description: "Filter on action"
        required: false
        type: "string"
        x-exportParamName: "Action"
        x-optionalDataType: "String"
      - name: "activate"
        in: "query"
        description: "Filter on activate"
        required: false
        type: "string"
        x-exportParamName: "Activate"
        x-optionalDataType: "String"
      - name: "creation_date"
        in: "query"
        description: "Filter on creation date"
        required: false
        type: "string"
        x-exportParamName: "CreationDate"
        x-optionalDataType: "String"
      - name: "creation_username"
        in: "query"
        description: "Filter on creation username"
        required: false
        type: "string"
        x-exportParamName: "CreationUsername"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "modification_username"
        in: "query"
        description: "Filter on modification username"
        required: false
        type: "string"
        x-exportParamName: "ModificationUsername"
        x-optionalDataType: "String"
      - name: "job_started"
        in: "query"
        description: "Filter on job started"
        required: false
        type: "string"
        x-exportParamName: "JobStarted"
        x-optionalDataType: "String"
      - name: "job_finished"
        in: "query"
        description: "Filter on job finished"
        required: false
        type: "string"
        x-exportParamName: "JobFinished"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "Filter on status"
        required: false
        type: "string"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "processed_size"
        in: "query"
        description: "Filter on processed size"
        required: false
        type: "string"
        x-exportParamName: "ProcessedSize"
        x-optionalDataType: "String"
      - name: "to_process_size"
        in: "query"
        description: "Filter on to process size"
        required: false
        type: "string"
        x-exportParamName: "ToProcessSize"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of tasks."
          schema:
            $ref: "#/definitions/task_collection"
    post:
      tags:
      - "tasks"
      summary: "Creates a new task."
      description: "**API Key Scope**: tasks / create\n"
      operationId: "create_task"
      parameters:
      - in: "body"
        name: "task_body"
        required: true
        schema:
          $ref: "#/definitions/task"
        x-exportParamName: "TaskBody"
      responses:
        201:
          description: "A specific task."
          schema:
            $ref: "#/definitions/task"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
  /tasks/{task_id}:
    get:
      tags:
      - "tasks"
      summary: "Displays a specific task."
      description: "**API Key Scope**: tasks / show"
      operationId: "show_task"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      responses:
        200:
          description: "A specific task."
          schema:
            $ref: "#/definitions/task"
    put:
      tags:
      - "tasks"
      summary: "Updates a specific task."
      description: "**API Key Scope**: tasks / update"
      operationId: "update_task"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - in: "body"
        name: "task_body"
        required: true
        schema:
          $ref: "#/definitions/task"
        x-exportParamName: "TaskBody"
      responses:
        200:
          description: "A specific task."
          schema:
            $ref: "#/definitions/task"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "tasks"
      summary: "Destroys a specific task."
      description: "**API Key Scope**: tasks / destroy"
      operationId: "destroy_task"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      responses:
        204:
          description: "Task destroyed."
  /tasks/{task_id}/files:
    get:
      tags:
      - "files"
      summary: "Lists files on root."
      description: "**API Key Scope**: files / index"
      operationId: "index_files_by_task"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "file_id"
        in: "query"
        description: "Filter on file id"
        required: false
        type: "string"
        x-exportParamName: "FileId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "permission"
        in: "query"
        description: "Filter on permission"
        required: false
        type: "string"
        x-exportParamName: "Permission"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "change_date"
        in: "query"
        description: "Filter on change date"
        required: false
        type: "string"
        x-exportParamName: "ChangeDate"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "access_date"
        in: "query"
        description: "Filter on access date"
        required: false
        type: "string"
        x-exportParamName: "AccessDate"
        x-optionalDataType: "String"
      - name: "gid"
        in: "query"
        description: "Filter on gid"
        required: false
        type: "string"
        x-exportParamName: "Gid"
        x-optionalDataType: "String"
      - name: "uid"
        in: "query"
        description: "Filter on uid"
        required: false
        type: "string"
        x-exportParamName: "Uid"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of files."
          schema:
            $ref: "#/definitions/nodeum_file_collection"
  /tasks/{task_id}/files/{file_id}:
    get:
      tags:
      - "files"
      summary: "Displays a specific file."
      description: "**API Key Scope**: files / show"
      operationId: "show_file_by_task"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "file_id"
        in: "path"
        description: "Numeric ID of file."
        required: true
        type: "integer"
        x-exportParamName: "FileId"
      responses:
        200:
          description: "A specific file."
          schema:
            $ref: "#/definitions/nodeum_file_with_path"
  /tasks/{task_id}/files/{file_id}/tapes:
    get:
      tags:
      - "files"
      summary: "Displays tapes containing specific file, related to the specific task."
      description: "**API Key Scope**: files / tapes"
      operationId: "index_tapes_by_file_by_task"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "file_id"
        in: "path"
        description: "Numeric ID of file."
        required: true
        type: "integer"
        x-exportParamName: "FileId"
      responses:
        200:
          description: "List of tapes."
          schema:
            $ref: "#/definitions/tape_collection"
  /tasks/{task_id}/files/{file_parent_id}/children:
    get:
      tags:
      - "files"
      summary: "Lists files under a specific folder."
      description: "**API Key Scope**: files / index"
      operationId: "files_children_by_task"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "file_parent_id"
        in: "path"
        description: "Numeric ID of parent folder."
        required: true
        type: "integer"
        x-exportParamName: "FileParentId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "file_id"
        in: "query"
        description: "Filter on file id"
        required: false
        type: "string"
        x-exportParamName: "FileId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "permission"
        in: "query"
        description: "Filter on permission"
        required: false
        type: "string"
        x-exportParamName: "Permission"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "change_date"
        in: "query"
        description: "Filter on change date"
        required: false
        type: "string"
        x-exportParamName: "ChangeDate"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "access_date"
        in: "query"
        description: "Filter on access date"
        required: false
        type: "string"
        x-exportParamName: "AccessDate"
        x-optionalDataType: "String"
      - name: "gid"
        in: "query"
        description: "Filter on gid"
        required: false
        type: "string"
        x-exportParamName: "Gid"
        x-optionalDataType: "String"
      - name: "uid"
        in: "query"
        description: "Filter on uid"
        required: false
        type: "string"
        x-exportParamName: "Uid"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of files."
          schema:
            $ref: "#/definitions/nodeum_file_collection"
  /tasks/{task_id}/task_sources:
    get:
      tags:
      - "task_sources"
      summary: "Lists all task sources."
      description: "**API Key Scope**: task_sources / index"
      operationId: "index_task_sources"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "file_id"
        in: "query"
        description: "Filter on file id"
        required: false
        type: "string"
        x-exportParamName: "FileId"
        x-optionalDataType: "String"
      - name: "import_file_id"
        in: "query"
        description: "Filter on import file id"
        required: false
        type: "string"
        x-exportParamName: "ImportFileId"
        x-optionalDataType: "String"
      - name: "tape_id"
        in: "query"
        description: "Filter on tape id"
        required: false
        type: "string"
        x-exportParamName: "TapeId"
        x-optionalDataType: "String"
      - name: "pool_id"
        in: "query"
        description: "Filter on a pool id"
        required: false
        type: "string"
        x-exportParamName: "PoolId"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of task sources."
          schema:
            $ref: "#/definitions/task_source_collection"
    post:
      tags:
      - "task_sources"
      summary: "Creates a new task source."
      description: "**API Key Scope**: task_sources / create"
      operationId: "create_task_source"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - in: "body"
        name: "task_source_body"
        required: true
        schema:
          $ref: "#/definitions/task_source_up"
        x-exportParamName: "TaskSourceBody"
      responses:
        201:
          description: "A specific task source."
          schema:
            $ref: "#/definitions/task_source_down"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
  /tasks/{task_id}/task_sources/{task_source_id}:
    get:
      tags:
      - "task_sources"
      summary: "Displays a specific task source."
      description: "**API Key Scope**: task_sources / show"
      operationId: "show_task_source"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_source_id"
        in: "path"
        description: "Numeric ID of task source."
        required: true
        type: "integer"
        x-exportParamName: "TaskSourceId"
      responses:
        200:
          description: "A specific task source."
          schema:
            $ref: "#/definitions/task_source_down"
    put:
      tags:
      - "task_sources"
      summary: "Updates a specific task source."
      description: "**API Key Scope**: task_sources / update"
      operationId: "update_task_source"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_source_id"
        in: "path"
        description: "Numeric ID of task source."
        required: true
        type: "integer"
        x-exportParamName: "TaskSourceId"
      - in: "body"
        name: "task_source_body"
        required: true
        schema:
          $ref: "#/definitions/task_source_up"
        x-exportParamName: "TaskSourceBody"
      responses:
        200:
          description: "A specific task source."
          schema:
            $ref: "#/definitions/task_source_down"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "task_sources"
      summary: "Destroys a specific task source."
      description: "**API Key Scope**: task_sources / destroy"
      operationId: "destroy_task_source"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_source_id"
        in: "path"
        description: "Numeric ID of task source."
        required: true
        type: "integer"
        x-exportParamName: "TaskSourceId"
      responses:
        204:
          description: "Task source destroyed."
  /tasks/{task_id}/task_destinations:
    get:
      tags:
      - "task_destinations"
      summary: "Lists all task destinations."
      description: "**API Key Scope**: task_destinations / index"
      operationId: "index_task_destinations"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "folder_id"
        in: "query"
        description: "Filter on folder id"
        required: false
        type: "string"
        x-exportParamName: "FolderId"
        x-optionalDataType: "String"
      - name: "tape_id"
        in: "query"
        description: "Filter on tape id"
        required: false
        type: "string"
        x-exportParamName: "TapeId"
        x-optionalDataType: "String"
      - name: "pool_id"
        in: "query"
        description: "Filter on a pool id"
        required: false
        type: "string"
        x-exportParamName: "PoolId"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of task destinations."
          schema:
            $ref: "#/definitions/task_destination_collection"
    post:
      tags:
      - "task_destinations"
      summary: "Creates a new task destination."
      description: "**API Key Scope**: task_destinations / create"
      operationId: "create_task_destination"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - in: "body"
        name: "task_destination_body"
        required: true
        schema:
          $ref: "#/definitions/task_destination_up"
        x-exportParamName: "TaskDestinationBody"
      responses:
        201:
          description: "A specific task destination."
          schema:
            $ref: "#/definitions/task_destination_down"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
  /tasks/{task_id}/task_destinations/{task_destination_id}:
    get:
      tags:
      - "task_destinations"
      summary: "Displays a specific task destination."
      description: "**API Key Scope**: task_destinations / show"
      operationId: "show_task_destination"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_destination_id"
        in: "path"
        description: "Numeric ID of task destination."
        required: true
        type: "integer"
        x-exportParamName: "TaskDestinationId"
      responses:
        200:
          description: "A specific task destination."
          schema:
            $ref: "#/definitions/task_destination_down"
    put:
      tags:
      - "task_destinations"
      summary: "Updates a specific task destination."
      description: "**API Key Scope**: task_destinations / update"
      operationId: "update_task_destination"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_destination_id"
        in: "path"
        description: "Numeric ID of task destination."
        required: true
        type: "integer"
        x-exportParamName: "TaskDestinationId"
      - in: "body"
        name: "task_destination_body"
        required: true
        schema:
          $ref: "#/definitions/task_destination_up"
        x-exportParamName: "TaskDestinationBody"
      responses:
        200:
          description: "A specific task destination."
          schema:
            $ref: "#/definitions/task_destination_down"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "task_destinations"
      summary: "Destroys a specific task destination."
      description: "**API Key Scope**: task_destinations / destroy"
      operationId: "destroy_task_destination"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_destination_id"
        in: "path"
        description: "Numeric ID of task destination."
        required: true
        type: "integer"
        x-exportParamName: "TaskDestinationId"
      responses:
        204:
          description: "Task destination destroyed."
  /task_schedules:
    get:
      tags:
      - "task_schedules"
      summary: "Lists all task schedules."
      description: "**API Key Scope**: task_schedules / index"
      operationId: "index_task_schedules"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "rrule"
        in: "query"
        description: "Filter on RRule of schedule"
        required: false
        type: "string"
        x-exportParamName: "Rrule"
        x-optionalDataType: "String"
      - name: "done"
        in: "query"
        description: "Filter on done schedule"
        required: false
        type: "string"
        x-exportParamName: "Done"
        x-optionalDataType: "String"
      - name: "task_id"
        in: "query"
        description: "Filter on task id"
        required: false
        type: "string"
        x-exportParamName: "TaskId"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of task schedules."
          schema:
            $ref: "#/definitions/task_schedule_collection"
  /tasks/{task_id}/task_schedule:
    get:
      tags:
      - "task_schedules"
      summary: "Displays the task schedule."
      description: "**API Key Scope**: task_schedules / show"
      operationId: "show_task_schedule"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      responses:
        200:
          description: "A specific task schedule."
          schema:
            $ref: "#/definitions/task_schedule"
    post:
      tags:
      - "task_schedules"
      summary: "Creates a new task schedule. Only one should be created."
      description: "**API Key Scope**: task_schedules / create"
      operationId: "create_task_schedule"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - in: "body"
        name: "task_schedule_body"
        required: true
        schema:
          $ref: "#/definitions/task_schedule"
        x-exportParamName: "TaskScheduleBody"
      responses:
        201:
          description: "A specific task schedule."
          schema:
            $ref: "#/definitions/task_schedule"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    put:
      tags:
      - "task_schedules"
      summary: "Updates the existing task schedule."
      description: "**API Key Scope**: task_schedules / update"
      operationId: "update_task_schedule"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - in: "body"
        name: "task_schedule_body"
        required: true
        schema:
          $ref: "#/definitions/task_schedule"
        x-exportParamName: "TaskScheduleBody"
      responses:
        200:
          description: "A specific task schedule."
          schema:
            $ref: "#/definitions/task_schedule"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "task_schedules"
      summary: "Destroys the task schedule."
      description: "**API Key Scope**: task_schedules / destroy"
      operationId: "destroy_task_schedule"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      responses:
        204:
          description: "Task schedule destroyed."
  /tasks/{task_id}/task_options:
    get:
      tags:
      - "task_options"
      summary: "Lists all task options."
      description: "**API Key Scope**: task_options / index"
      operationId: "index_task_options"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "value"
        in: "query"
        description: "Filter on value"
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of task options."
          schema:
            $ref: "#/definitions/task_option_collection"
    post:
      tags:
      - "task_options"
      summary: "Creates a new task option."
      description: "**API Key Scope**: task_options / create"
      operationId: "create_task_option"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - in: "body"
        name: "task_option_body"
        required: true
        schema:
          $ref: "#/definitions/task_option"
        x-exportParamName: "TaskOptionBody"
      responses:
        201:
          description: "A specific task option."
          schema:
            $ref: "#/definitions/task_option"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
  /tasks/{task_id}/task_options/{task_option_id}:
    get:
      tags:
      - "task_options"
      summary: "Displays a specific task option."
      description: "**API Key Scope**: task_options / show"
      operationId: "show_task_option"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_option_id"
        in: "path"
        description: "Numeric ID of task option."
        required: true
        type: "integer"
        x-exportParamName: "TaskOptionId"
      responses:
        200:
          description: "A specific task option."
          schema:
            $ref: "#/definitions/task_option"
    put:
      tags:
      - "task_options"
      summary: "Updates a specific task option."
      description: "**API Key Scope**: task_options / update"
      operationId: "update_task_option"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_option_id"
        in: "path"
        description: "Numeric ID of task option."
        required: true
        type: "integer"
        x-exportParamName: "TaskOptionId"
      - in: "body"
        name: "task_option_body"
        required: true
        schema:
          $ref: "#/definitions/task_option"
        x-exportParamName: "TaskOptionBody"
      responses:
        200:
          description: "A specific task option."
          schema:
            $ref: "#/definitions/task_option"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "task_options"
      summary: "Destroys a specific task option."
      description: "**API Key Scope**: task_options / destroy"
      operationId: "destroy_task_option"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_option_id"
        in: "path"
        description: "Numeric ID of task option."
        required: true
        type: "integer"
        x-exportParamName: "TaskOptionId"
      responses:
        204:
          description: "Task option destroyed."
  /tasks/{task_id}/task_callbacks:
    get:
      tags:
      - "task_callbacks"
      summary: "Lists all task callbacks."
      description: "**API Key Scope**: task_callbacks / index"
      operationId: "index_task_callbacks"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "script"
        in: "query"
        description: "Filter on task callback script"
        required: false
        type: "string"
        x-exportParamName: "Script"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of task callbacks."
          schema:
            $ref: "#/definitions/task_callback_collection"
    post:
      tags:
      - "task_callbacks"
      summary: "Creates a new task callback."
      description: "**API Key Scope**: task_callbacks / create"
      operationId: "create_task_callback"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - in: "body"
        name: "task_callback_body"
        required: true
        schema:
          $ref: "#/definitions/task_callback"
        x-exportParamName: "TaskCallbackBody"
      responses:
        201:
          description: "A specific task callback."
          schema:
            $ref: "#/definitions/task_callback"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
  /tasks/{task_id}/task_callbacks/{task_callback_id}:
    get:
      tags:
      - "task_callbacks"
      summary: "Displays a specific task callback."
      description: "**API Key Scope**: task_callbacks / show"
      operationId: "show_task_callback"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_callback_id"
        in: "path"
        description: "Numeric ID of task callback."
        required: true
        type: "integer"
        x-exportParamName: "TaskCallbackId"
      responses:
        200:
          description: "A specific task callback."
          schema:
            $ref: "#/definitions/task_callback"
    put:
      tags:
      - "task_callbacks"
      summary: "Updates a specific task callback."
      description: "**API Key Scope**: task_callbacks / update"
      operationId: "update_task_callback"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_callback_id"
        in: "path"
        description: "Numeric ID of task callback."
        required: true
        type: "integer"
        x-exportParamName: "TaskCallbackId"
      - in: "body"
        name: "task_callback_body"
        required: true
        schema:
          $ref: "#/definitions/task_callback"
        x-exportParamName: "TaskCallbackBody"
      responses:
        200:
          description: "A specific task callback."
          schema:
            $ref: "#/definitions/task_callback"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "task_callbacks"
      summary: "Destroys a specific task callback."
      description: "**API Key Scope**: task_callbacks / destroy"
      operationId: "destroy_task_callback"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_callback_id"
        in: "path"
        description: "Numeric ID of task callback."
        required: true
        type: "integer"
        x-exportParamName: "TaskCallbackId"
      responses:
        204:
          description: "Task callback destroyed."
  /tasks/{task_id}/task_metadata:
    get:
      tags:
      - "task_metadata"
      summary: "Lists all task metadata."
      description: "**API Key Scope**: task_metadata / index"
      operationId: "index_task_metadata"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "key"
        in: "query"
        description: "Filter on key"
        required: false
        type: "string"
        x-exportParamName: "Key"
        x-optionalDataType: "String"
      - name: "value"
        in: "query"
        description: "Filter on value"
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of task metadata."
          schema:
            $ref: "#/definitions/task_metadatum_collection"
    post:
      tags:
      - "task_metadata"
      summary: "Creates a new task metadatum."
      description: "**API Key Scope**: task_metadata / create"
      operationId: "create_task_metadatum"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - in: "body"
        name: "task_metadatum_body"
        required: true
        schema:
          $ref: "#/definitions/task_metadatum"
        x-exportParamName: "TaskMetadatumBody"
      responses:
        201:
          description: "A specific task metadatum."
          schema:
            $ref: "#/definitions/task_metadatum"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
  /tasks/{task_id}/task_metadata/{task_metadatum_id}:
    get:
      tags:
      - "task_metadata"
      summary: "Displays a specific task metadatum."
      description: "**API Key Scope**: task_metadata / show"
      operationId: "show_task_metadatum"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_metadatum_id"
        in: "path"
        description: "Numeric ID of task metadatum."
        required: true
        type: "integer"
        x-exportParamName: "TaskMetadatumId"
      responses:
        200:
          description: "A specific task metadatum."
          schema:
            $ref: "#/definitions/task_metadatum"
    put:
      tags:
      - "task_metadata"
      summary: "Updates a specific task metadatum."
      description: "**API Key Scope**: task_metadata / update"
      operationId: "update_task_metadatum"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_metadatum_id"
        in: "path"
        description: "Numeric ID of task metadatum."
        required: true
        type: "integer"
        x-exportParamName: "TaskMetadatumId"
      - in: "body"
        name: "task_metadatum_body"
        required: true
        schema:
          $ref: "#/definitions/task_metadatum"
        x-exportParamName: "TaskMetadatumBody"
      responses:
        200:
          description: "A specific task metadatum."
          schema:
            $ref: "#/definitions/task_metadatum"
        422:
          description: "The received resource was not correctly formatted."
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
      - "task_metadata"
      summary: "Destroys a specific task metadatum."
      description: "**API Key Scope**: task_metadata / destroy"
      operationId: "destroy_task_metadatum"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_metadatum_id"
        in: "path"
        description: "Numeric ID of task metadatum."
        required: true
        type: "integer"
        x-exportParamName: "TaskMetadatumId"
      responses:
        204:
          description: "Task metadatum destroyed."
  /tasks/{task_id}/task_executions:
    get:
      tags:
      - "task_executions"
      summary: "Lists all task executions."
      description: "**API Key Scope**: task_executions / index"
      operationId: "index_task_executions_by_task"
      parameters:
      - name: "task_id"
        in: "query"
        description: "Filter on task id"
        required: false
        type: "string"
        x-exportParamName: "TaskId"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "workflow_type"
        in: "query"
        description: "Filter on task workflow type"
        required: false
        type: "string"
        x-exportParamName: "WorkflowType"
        x-optionalDataType: "String"
      - name: "workflow_action"
        in: "query"
        description: "Filter on task workflow action"
        required: false
        type: "string"
        x-exportParamName: "WorkflowAction"
        x-optionalDataType: "String"
      - name: "source_type"
        in: "query"
        description: "Filter on task source type"
        required: false
        type: "string"
        x-exportParamName: "SourceType"
        x-optionalDataType: "String"
      - name: "destination_type"
        in: "query"
        description: "Filter on task destination type"
        required: false
        type: "string"
        x-exportParamName: "DestinationType"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "Filter on status"
        required: false
        type: "string"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "log_time"
        in: "query"
        description: "Filter on log time"
        required: false
        type: "string"
        x-exportParamName: "LogTime"
        x-optionalDataType: "String"
      - name: "job_started"
        in: "query"
        description: "Filter on job started"
        required: false
        type: "string"
        x-exportParamName: "JobStarted"
        x-optionalDataType: "String"
      - name: "job_finished"
        in: "query"
        description: "Filter on job finished"
        required: false
        type: "string"
        x-exportParamName: "JobFinished"
        x-optionalDataType: "String"
      - name: "to_process_size"
        in: "query"
        description: "Filter on to process size"
        required: false
        type: "string"
        x-exportParamName: "ToProcessSize"
        x-optionalDataType: "String"
      - name: "processed_size"
        in: "query"
        description: "Filter on processed size"
        required: false
        type: "string"
        x-exportParamName: "ProcessedSize"
        x-optionalDataType: "String"
      - name: "to_process_files"
        in: "query"
        description: "Filter on to process files"
        required: false
        type: "string"
        x-exportParamName: "ToProcessFiles"
        x-optionalDataType: "String"
      - name: "processed_files"
        in: "query"
        description: "Filter on processed files"
        required: false
        type: "string"
        x-exportParamName: "ProcessedFiles"
        x-optionalDataType: "String"
      - name: "finalized_files"
        in: "query"
        description: "Filter on finalized files"
        required: false
        type: "string"
        x-exportParamName: "FinalizedFiles"
        x-optionalDataType: "String"
      - name: "estimation_time"
        in: "query"
        description: "Filter on estimation time"
        required: false
        type: "string"
        x-exportParamName: "EstimationTime"
        x-optionalDataType: "String"
      - name: "bandwidth"
        in: "query"
        description: "Filter on bandwidth"
        required: false
        type: "string"
        x-exportParamName: "Bandwidth"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of task executions."
          schema:
            $ref: "#/definitions/task_execution_collection"
  /tasks/{task_id}/task_executions/{task_execution_id}:
    get:
      tags:
      - "task_executions"
      summary: "Displays a specific task execution."
      description: "**API Key Scope**: task_executions / show"
      operationId: "show_task_execution_by_task"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_execution_id"
        in: "path"
        description: "Numeric ID of task execution."
        required: true
        type: "string"
        x-exportParamName: "TaskExecutionId"
      responses:
        200:
          description: "A specific task execution."
          schema:
            $ref: "#/definitions/task_execution"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /tasks/{task_id}/task_executions/{task_execution_id}/files:
    get:
      tags:
      - "files"
      summary: "Lists files on root."
      description: "**API Key Scope**: files / index"
      operationId: "index_files_by_task_execution_by_task"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_execution_id"
        in: "path"
        description: "Numeric ID of task execution."
        required: true
        type: "string"
        x-exportParamName: "TaskExecutionId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "file_id"
        in: "query"
        description: "Filter on file id"
        required: false
        type: "string"
        x-exportParamName: "FileId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "permission"
        in: "query"
        description: "Filter on permission"
        required: false
        type: "string"
        x-exportParamName: "Permission"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "change_date"
        in: "query"
        description: "Filter on change date"
        required: false
        type: "string"
        x-exportParamName: "ChangeDate"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "access_date"
        in: "query"
        description: "Filter on access date"
        required: false
        type: "string"
        x-exportParamName: "AccessDate"
        x-optionalDataType: "String"
      - name: "gid"
        in: "query"
        description: "Filter on gid"
        required: false
        type: "string"
        x-exportParamName: "Gid"
        x-optionalDataType: "String"
      - name: "uid"
        in: "query"
        description: "Filter on uid"
        required: false
        type: "string"
        x-exportParamName: "Uid"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of files."
          schema:
            $ref: "#/definitions/nodeum_file_collection"
  /tasks/{task_id}/task_executions/{task_execution_id}/files/{file_id}:
    get:
      tags:
      - "files"
      summary: "Displays a specific file."
      description: "**API Key Scope**: files / show"
      operationId: "show_file_by_task_execution_by_task"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_execution_id"
        in: "path"
        description: "Numeric ID of task execution."
        required: true
        type: "string"
        x-exportParamName: "TaskExecutionId"
      - name: "file_id"
        in: "path"
        description: "Numeric ID of file."
        required: true
        type: "integer"
        x-exportParamName: "FileId"
      responses:
        200:
          description: "A specific file."
          schema:
            $ref: "#/definitions/nodeum_file_with_path"
  /tasks/{task_id}/task_executions/{task_execution_id}/files/{file_id}/tapes:
    get:
      tags:
      - "files"
      summary: "Displays tapes containing specific file, related to the specific task."
      description: "**API Key Scope**: files / tapes"
      operationId: "index_tapes_by_file_by_task_execution_by_task"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_execution_id"
        in: "path"
        description: "Numeric ID of task execution."
        required: true
        type: "string"
        x-exportParamName: "TaskExecutionId"
      - name: "file_id"
        in: "path"
        description: "Numeric ID of file."
        required: true
        type: "integer"
        x-exportParamName: "FileId"
      responses:
        200:
          description: "List of tapes."
          schema:
            $ref: "#/definitions/tape_collection"
  /tasks/{task_id}/task_executions/{task_execution_id}/files/{file_parent_id}/children:
    get:
      tags:
      - "files"
      summary: "Lists files under a specific folder."
      description: "**API Key Scope**: files / index"
      operationId: "files_children_by_task_execution_by_task"
      parameters:
      - name: "task_id"
        in: "path"
        description: "Numeric ID or name of task. Task names are not unique, it's\
          \ recommanded to use numeric ID."
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "task_execution_id"
        in: "path"
        description: "Numeric ID of task execution."
        required: true
        type: "string"
        x-exportParamName: "TaskExecutionId"
      - name: "file_parent_id"
        in: "path"
        description: "Numeric ID of parent folder."
        required: true
        type: "integer"
        x-exportParamName: "FileParentId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "file_id"
        in: "query"
        description: "Filter on file id"
        required: false
        type: "string"
        x-exportParamName: "FileId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "permission"
        in: "query"
        description: "Filter on permission"
        required: false
        type: "string"
        x-exportParamName: "Permission"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "change_date"
        in: "query"
        description: "Filter on change date"
        required: false
        type: "string"
        x-exportParamName: "ChangeDate"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "access_date"
        in: "query"
        description: "Filter on access date"
        required: false
        type: "string"
        x-exportParamName: "AccessDate"
        x-optionalDataType: "String"
      - name: "gid"
        in: "query"
        description: "Filter on gid"
        required: false
        type: "string"
        x-exportParamName: "Gid"
        x-optionalDataType: "String"
      - name: "uid"
        in: "query"
        description: "Filter on uid"
        required: false
        type: "string"
        x-exportParamName: "Uid"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of files."
          schema:
            $ref: "#/definitions/nodeum_file_collection"
  /task_executions:
    get:
      tags:
      - "task_executions"
      summary: "Lists all task executions."
      description: "**API Key Scope**: task_executions / index"
      operationId: "index_task_executions"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_by"
        in: "query"
        description: "Sort results by attribute.\n\nCan sort on multiple attributes,\
          \ separated by `|`.\nOrder direction can be suffixing the attribute by either\
          \ `:asc` (default) or `:desc`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "pipes"
        x-exportParamName: "SortBy"
      - name: "complete_list"
        in: "query"
        description: "If `false`, only includes the last correct execution of a task."
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "CompleteList"
        x-optionalDataType: "Bool"
      - name: "id"
        in: "query"
        description: "Filter on id"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "task_id"
        in: "query"
        description: "Filter on task id"
        required: false
        type: "string"
        x-exportParamName: "TaskId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "workflow_type"
        in: "query"
        description: "Filter on task workflow type"
        required: false
        type: "string"
        x-exportParamName: "WorkflowType"
        x-optionalDataType: "String"
      - name: "workflow_action"
        in: "query"
        description: "Filter on task workflow action"
        required: false
        type: "string"
        x-exportParamName: "WorkflowAction"
        x-optionalDataType: "String"
      - name: "source_type"
        in: "query"
        description: "Filter on task source type"
        required: false
        type: "string"
        x-exportParamName: "SourceType"
        x-optionalDataType: "String"
      - name: "destination_type"
        in: "query"
        description: "Filter on task destination type"
        required: false
        type: "string"
        x-exportParamName: "DestinationType"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "Filter on status"
        required: false
        type: "string"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "log_time"
        in: "query"
        description: "Filter on log time"
        required: false
        type: "string"
        x-exportParamName: "LogTime"
        x-optionalDataType: "String"
      - name: "job_started"
        in: "query"
        description: "Filter on job started"
        required: false
        type: "string"
        x-exportParamName: "JobStarted"
        x-optionalDataType: "String"
      - name: "job_finished"
        in: "query"
        description: "Filter on job finished"
        required: false
        type: "string"
        x-exportParamName: "JobFinished"
        x-optionalDataType: "String"
      - name: "creation_date"
        in: "query"
        description: "Filter on creation date"
        required: false
        type: "string"
        x-exportParamName: "CreationDate"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "to_process_size"
        in: "query"
        description: "Filter on to process size"
        required: false
        type: "string"
        x-exportParamName: "ToProcessSize"
        x-optionalDataType: "String"
      - name: "processed_size"
        in: "query"
        description: "Filter on processed size"
        required: false
        type: "string"
        x-exportParamName: "ProcessedSize"
        x-optionalDataType: "String"
      - name: "to_process_files"
        in: "query"
        description: "Filter on to process files"
        required: false
        type: "string"
        x-exportParamName: "ToProcessFiles"
        x-optionalDataType: "String"
      - name: "processed_files"
        in: "query"
        description: "Filter on processed files"
        required: false
        type: "string"
        x-exportParamName: "ProcessedFiles"
        x-optionalDataType: "String"
      - name: "finalized_files"
        in: "query"
        description: "Filter on finalized files"
        required: false
        type: "string"
        x-exportParamName: "FinalizedFiles"
        x-optionalDataType: "String"
      - name: "estimation_time"
        in: "query"
        description: "Filter on estimation time"
        required: false
        type: "string"
        x-exportParamName: "EstimationTime"
        x-optionalDataType: "String"
      - name: "bandwidth"
        in: "query"
        description: "Filter on bandwidth"
        required: false
        type: "string"
        x-exportParamName: "Bandwidth"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of task executions."
          schema:
            $ref: "#/definitions/task_execution_collection"
  /task_executions/{task_execution_id}:
    get:
      tags:
      - "task_executions"
      summary: "Displays a specific task execution."
      description: "**API Key Scope**: task_executions / show"
      operationId: "show_task_execution"
      parameters:
      - name: "task_execution_id"
        in: "path"
        description: "Numeric ID of task execution."
        required: true
        type: "string"
        x-exportParamName: "TaskExecutionId"
      responses:
        200:
          description: "A specific task execution."
          schema:
            $ref: "#/definitions/task_execution"
        404:
          description: "The requested resource was not found. The detailed error will\
            \ be of type `not_found`."
          schema:
            $ref: "#/definitions/error"
  /task_executions/{task_execution_id}/files:
    get:
      tags:
      - "files"
      summary: "Lists files on root."
      description: "**API Key Scope**: files / index"
      operationId: "index_files_by_task_execution"
      parameters:
      - name: "task_execution_id"
        in: "path"
        description: "Numeric ID of task execution."
        required: true
        type: "string"
        x-exportParamName: "TaskExecutionId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "file_id"
        in: "query"
        description: "Filter on file id"
        required: false
        type: "string"
        x-exportParamName: "FileId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "permission"
        in: "query"
        description: "Filter on permission"
        required: false
        type: "string"
        x-exportParamName: "Permission"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "change_date"
        in: "query"
        description: "Filter on change date"
        required: false
        type: "string"
        x-exportParamName: "ChangeDate"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "access_date"
        in: "query"
        description: "Filter on access date"
        required: false
        type: "string"
        x-exportParamName: "AccessDate"
        x-optionalDataType: "String"
      - name: "gid"
        in: "query"
        description: "Filter on gid"
        required: false
        type: "string"
        x-exportParamName: "Gid"
        x-optionalDataType: "String"
      - name: "uid"
        in: "query"
        description: "Filter on uid"
        required: false
        type: "string"
        x-exportParamName: "Uid"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of files."
          schema:
            $ref: "#/definitions/nodeum_file_collection"
  /task_executions/{task_execution_id}/files/{file_id}:
    get:
      tags:
      - "files"
      summary: "Displays a specific file."
      description: "**API Key Scope**: files / show"
      operationId: "show_file_by_task_execution"
      parameters:
      - name: "task_execution_id"
        in: "path"
        description: "Numeric ID of task execution."
        required: true
        type: "string"
        x-exportParamName: "TaskExecutionId"
      - name: "file_id"
        in: "path"
        description: "Numeric ID of file."
        required: true
        type: "integer"
        x-exportParamName: "FileId"
      responses:
        200:
          description: "A specific file."
          schema:
            $ref: "#/definitions/nodeum_file_with_path"
  /task_executions/{task_execution_id}/files/{file_id}/tapes:
    get:
      tags:
      - "files"
      summary: "Displays tapes containing specific file, related to the specific task."
      description: "**API Key Scope**: files / tapes"
      operationId: "index_tapes_by_file_by_task_execution"
      parameters:
      - name: "task_execution_id"
        in: "path"
        description: "Numeric ID of task execution."
        required: true
        type: "string"
        x-exportParamName: "TaskExecutionId"
      - name: "file_id"
        in: "path"
        description: "Numeric ID of file."
        required: true
        type: "integer"
        x-exportParamName: "FileId"
      responses:
        200:
          description: "List of tapes."
          schema:
            $ref: "#/definitions/tape_collection"
  /task_executions/{task_execution_id}/files/{file_parent_id}/children:
    get:
      tags:
      - "files"
      summary: "Lists files under a specific folder."
      description: "**API Key Scope**: files / index"
      operationId: "files_children_by_task_execution"
      parameters:
      - name: "task_execution_id"
        in: "path"
        description: "Numeric ID of task execution."
        required: true
        type: "string"
        x-exportParamName: "TaskExecutionId"
      - name: "file_parent_id"
        in: "path"
        description: "Numeric ID of parent folder."
        required: true
        type: "integer"
        x-exportParamName: "FileParentId"
      - name: "limit"
        in: "query"
        description: "The number of items to display for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "The number of items to skip for pagination."
        required: false
        type: "integer"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "file_id"
        in: "query"
        description: "Filter on file id"
        required: false
        type: "string"
        x-exportParamName: "FileId"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter on name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Filter on type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "permission"
        in: "query"
        description: "Filter on permission"
        required: false
        type: "string"
        x-exportParamName: "Permission"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "Filter on size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "change_date"
        in: "query"
        description: "Filter on change date"
        required: false
        type: "string"
        x-exportParamName: "ChangeDate"
        x-optionalDataType: "String"
      - name: "modification_date"
        in: "query"
        description: "Filter on modification date"
        required: false
        type: "string"
        x-exportParamName: "ModificationDate"
        x-optionalDataType: "String"
      - name: "access_date"
        in: "query"
        description: "Filter on access date"
        required: false
        type: "string"
        x-exportParamName: "AccessDate"
        x-optionalDataType: "String"
      - name: "gid"
        in: "query"
        description: "Filter on gid"
        required: false
        type: "string"
        x-exportParamName: "Gid"
        x-optionalDataType: "String"
      - name: "uid"
        in: "query"
        description: "Filter on uid"
        required: false
        type: "string"
        x-exportParamName: "Uid"
        x-optionalDataType: "String"
      responses:
        200:
          description: "List of files."
          schema:
            $ref: "#/definitions/nodeum_file_collection"
securityDefinitions:
  BasicAuth:
    description: "Pass the username and password of a user in the authorization header.\n\
      This currently gives full access."
    type: "basic"
  BearerAuth:
    description: "Create an API Key associated to user.\nAccess can be restricted\
      \ with the scope.\nEach API call described below has a scoped mentionned in\
      \ its description.\n\nFor example :\n\n**API Key Scope**: files / index\n\n\
      This means that the API key should have a scope with controller as *files*\n\
      and the action as *index*."
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  attribute_error:
    type: "object"
    required:
    - "error"
    discriminator: "error"
    properties:
      error:
        type: "string"
  blank:
    allOf:
    - $ref: "#/definitions/attribute_error"
    - {}
    description: "Attribute can't be blank"
    x-discriminator-value: "blank"
  frozen:
    allOf:
    - $ref: "#/definitions/attribute_error"
    - {}
    description: "Attribute can't be updated"
    x-discriminator-value: "frozen"
  taken:
    allOf:
    - $ref: "#/definitions/attribute_error"
    - type: "object"
      properties:
        value:
          type: "string"
          description: "Value received"
    description: "Attribute has already been taken"
    x-discriminator-value: "taken"
  invalid:
    allOf:
    - $ref: "#/definitions/attribute_error"
    - type: "object"
      properties:
        value:
          type: "string"
          description: "Value received"
    description: "Attribute is invalid"
    x-discriminator-value: "invalid"
  too_short:
    allOf:
    - $ref: "#/definitions/attribute_error"
    - type: "object"
      properties:
        count:
          type: "integer"
          description: "Expected minimum length"
    description: "Attribute is too short (minimum is %{count} characters)"
    x-discriminator-value: "too_short"
  too_long:
    allOf:
    - $ref: "#/definitions/attribute_error"
    - type: "object"
      properties:
        count:
          type: "integer"
          description: "Expected maximum length"
    description: "Attribute is too long (maximum is %{count} characters)"
    x-discriminator-value: "too_long"
  greater_than:
    allOf:
    - $ref: "#/definitions/attribute_error"
    - type: "object"
      properties:
        value:
          type: "integer"
          description: "Value received"
        count:
          type: "integer"
          description: "Expected maximum value"
    description: "Attribute must be greater than %{count}"
    x-discriminator-value: "greater_than"
  greater_than_or_equal_to:
    allOf:
    - $ref: "#/definitions/attribute_error"
    - type: "object"
      properties:
        value:
          type: "integer"
          description: "Value received"
        count:
          type: "integer"
          description: "Expected maximum value"
    description: "Attribute must be greater than or equal to %{count}"
    x-discriminator-value: "greater_than_or_equal_to"
  less_than:
    allOf:
    - $ref: "#/definitions/attribute_error"
    - type: "object"
      properties:
        value:
          type: "integer"
          description: "Value received"
        count:
          type: "integer"
          description: "Expected minimum value"
    description: "Attribute must be less than %{count}"
    x-discriminator-value: "less_than"
  less_than_or_equal_to:
    allOf:
    - $ref: "#/definitions/attribute_error"
    - type: "object"
      properties:
        value:
          type: "integer"
          description: "Value received"
        count:
          type: "integer"
          description: "Expected minimum value"
    description: "Attribute must be less than or equal to %{count}"
    x-discriminator-value: "less_than_or_equal_to"
  occurrence_less_than:
    allOf:
    - $ref: "#/definitions/attribute_error"
    - type: "object"
      properties:
        count:
          type: "integer"
          description: "Expected maximum number of occurrences"
        value:
          type: "integer"
          description: "Current number of occurrences"
    description: "Must have less than %{count} occurrences (currently have %{value})"
    x-discriminator-value: "occurrence_less_than"
  occurrence_less_than_or_equal_to:
    allOf:
    - $ref: "#/definitions/attribute_error"
    - type: "object"
      properties:
        count:
          type: "integer"
          description: "Expected maximum number of occurrences"
        value:
          type: "integer"
          description: "Current number of occurrences"
    description: "Must have at most or less than %{count} occurrences (currently have\
      \ %{value})"
    x-discriminator-value: "occurrence_less_than_or_equal_to"
  quota_on_cache:
    allOf:
    - $ref: "#/definitions/attribute_error"
    - {}
    description: "Quota on cache can't be above 100% (total)"
    x-discriminator-value: "quota_on_cache"
  error:
    properties:
      details:
        type: "object"
        description: "Parsable objects describing the errors. The key is the invalid\
          \ attribute name."
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/attribute_error"
      messages:
        type: "array"
        description: "English description of the errors."
        items:
          type: "string"
  mount_status:
    properties:
      mounted:
        type: "boolean"
        example: true
        readOnly: true
      message:
        type: "string"
        readOnly: true
      status:
        $ref: "#/definitions/mount_info"
    example:
      message: "message"
      mounted: true
      status:
        nas_name: "nas_name"
        cloud_connector_id: 5
        cloud_bucket_id: 5
        tape_id: 2
        source: "//server.local/shared_folder"
        cloud_bucket_name: "cloud_bucket_name"
        type: "cifs"
        pool_id: 0
        pool_name: "pool_name"
        major_minor: "0:189"
        target: "/mnt/MOUNT_POINTS/folder"
        tape_library_serial: "tape_library_serial"
        nas_share_id: 1
        cloud_connector_name: "cloud_connector_name"
        tape_library_id: 7
        tape_barcode: "tape_barcode"
        options: "vers=3.0,rsize=1048576,wsize=1048576"
        id: 123
        nas_id: 6
        tape_library_name: "tape_library_name"
  mount_notification:
    type: "object"
    properties:
      action:
        type: "string"
        enum:
        - "added"
        - "removed"
        - "modified"
      info:
        $ref: "#/definitions/mount_info"
  active_job_status:
    properties:
      job_id:
        type: "string"
        example: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
        readOnly: true
      status:
        type: "string"
        example: "working"
        readOnly: true
        enum:
        - "queued"
        - "working"
        - "completed"
        - "failed"
      progress:
        type: "integer"
        example: 2
        readOnly: true
      total:
        type: "integer"
        example: 6
        readOnly: true
  api_key:
    properties:
      id:
        type: "integer"
        example: 5
        readOnly: true
      key:
        type: "string"
        example: "******************Iwgo"
        readOnly: true
      name:
        type: "string"
        example: "dev-key"
    example:
      name: "dev-key"
      id: 5
      key: "******************Iwgo"
  api_key_full:
    allOf:
    - $ref: "#/definitions/api_key"
    - type: "object"
      properties:
        api_key_scopes:
          type: "array"
          items:
            $ref: "#/definitions/api_key_scope"
  api_key_scope:
    type: "object"
    properties:
      controller:
        type: "string"
      action:
        type: "string"
  api_key_collection:
    properties:
      api_keys:
        type: "array"
        items:
          $ref: "#/definitions/api_key"
      count:
        type: "integer"
        example: 1
    example:
      count: 1
      api_keys:
      - name: "dev-key"
        id: 5
        key: "******************Iwgo"
      - name: "dev-key"
        id: 5
        key: "******************Iwgo"
  nodeum_file:
    properties:
      id:
        type: "integer"
        example: 105
        readOnly: true
      name:
        type: "string"
        example: "my-file.txt"
        readOnly: true
      parent:
        type: "integer"
        example: 100
        readOnly: true
      primary_id:
        type: "integer"
        example: 100
        readOnly: true
      type:
        type: "string"
        example: "file"
        readOnly: true
        enum:
        - "file"
        - "folder"
      permission:
        type: "integer"
        example: 100666
        readOnly: true
      size:
        type: "integer"
        example: 1063457
        readOnly: true
      change_date:
        type: "string"
        example: "2018-12-10T08:33:47.000Z"
        readOnly: true
      modification_date:
        type: "string"
        example: "2018-12-10T15:29:23.000Z"
        readOnly: true
      access_date:
        type: "string"
        example: "2018-12-10T15:27:51.000Z"
        readOnly: true
      uid:
        type: "integer"
        example: 1000
        readOnly: true
      gid:
        type: "integer"
        example: 1000
        readOnly: true
    example:
      parent: 100
      uid: 1000
      gid: 1000
      size: 1063457
      change_date: "2018-12-10T08:33:47.000Z"
      access_date: "2018-12-10T15:27:51.000Z"
      modification_date: "2018-12-10T15:29:23.000Z"
      name: "my-file.txt"
      primary_id: 100
      permission: 100666
      id: 105
      type: "file"
  nodeum_file_with_path:
    allOf:
    - $ref: "#/definitions/nodeum_file"
    - type: "object"
      properties:
        file_path:
          type: "string"
          example: "/my-container/my-file.txt"
          readOnly: true
  import_file:
    properties:
      id:
        type: "integer"
        example: 105
        readOnly: true
      name:
        type: "string"
        example: "my-file.txt"
        readOnly: true
      parent:
        type: "integer"
        example: 100
        readOnly: true
      primary_id:
        type: "integer"
        example: 100
        readOnly: true
      type:
        type: "string"
        example: "file"
        readOnly: true
        enum:
        - "file"
        - "folder"
      permission:
        type: "integer"
        example: 100666
        readOnly: true
      size:
        type: "integer"
        example: 1063457
        readOnly: true
      change_date:
        type: "string"
        example: "2018-12-10T08:33:47.000Z"
        readOnly: true
      modification_date:
        type: "string"
        example: "2018-12-10T15:29:23.000Z"
        readOnly: true
      access_date:
        type: "string"
        example: "2018-12-10T15:27:51.000Z"
        readOnly: true
      uid:
        type: "integer"
        example: 1000
        readOnly: true
      gid:
        type: "integer"
        example: 1000
        readOnly: true
    example:
      parent: 100
      uid: 1000
      gid: 1000
      size: 1063457
      change_date: "2018-12-10T08:33:47.000Z"
      access_date: "2018-12-10T15:27:51.000Z"
      modification_date: "2018-12-10T15:29:23.000Z"
      name: "my-file.txt"
      primary_id: 100
      permission: 100666
      id: 105
      type: "file"
  import_file_with_path:
    allOf:
    - $ref: "#/definitions/import_file"
    - type: "object"
      properties:
        file_path:
          type: "string"
          example: "/my-container/my-file.txt"
          readOnly: true
  on_tapes_file:
    properties:
      id:
        type: "integer"
        example: 105
        readOnly: true
      name:
        type: "string"
        example: "my-file.txt"
        readOnly: true
      type:
        type: "string"
        example: "file"
        readOnly: true
        enum:
        - "file"
        - "folder"
      size:
        type: "integer"
        example: 1063457
        readOnly: true
      barcodes:
        type: "array"
        example:
        - "NOD407L5"
        - "NOD415L5"
        readOnly: true
        items:
          type: "string"
    example:
      size: 1063457
      name: "my-file.txt"
      id: 105
      type: "file"
      barcodes:
      - "NOD407L5"
      - "NOD415L5"
  container:
    properties:
      id:
        type: "integer"
        example: 100
        readOnly: true
      name:
        type: "string"
        example: "my-container"
      comment:
        type: "string"
        example: "Read only container for random stuff"
      quota_total_size:
        type: "integer"
      quota_on_cache:
        type: "integer"
      stat_total_files:
        type: "integer"
        example: 99301
        readOnly: true
      stat_total_size:
        type: "integer"
        example: 6145076462
        readOnly: true
      stat_size_on_cache:
        type: "integer"
        example: 6899417088
        readOnly: true
      guest_right:
        type: "string"
        example: "read"
        enum:
        - "none"
        - "read"
        - "read_write"
      last_update:
        type: "string"
        example: "2019-08-05T14:24:15.000Z"
        readOnly: true
    example:
      stat_total_files: 99301
      stat_total_size: 6145076462
      stat_size_on_cache: 6899417088
      quota_total_size: 0
      guest_right: "read"
      last_update: "2019-08-05T14:24:15.000Z"
      name: "my-container"
      comment: "Read only container for random stuff"
      id: 100
      quota_on_cache: 6
  container_privilege:
    properties:
      id:
        type: "integer"
        example: 1
        readOnly: true
      name:
        type: "string"
        example: "admin"
      privilege:
        type: "string"
        example: "read_write"
        enum:
        - "none"
        - "read"
        - "read_write"
      type:
        type: "string"
        example: "user"
        enum:
        - "user"
        - "group"
    example:
      name: "admin"
      id: 1
      privilege: "read_write"
      type: "user"
  tape_library_device:
    properties:
      serial:
        type: "string"
        example: "C0F905D800A0_LL3"
        readOnly: true
      protocol:
        type: "string"
        example: "scsi"
        readOnly: true
        enum:
        - "scsi"
        - "acsls"
      vendor:
        type: "string"
        example: "IBM"
        readOnly: true
      product:
        type: "string"
        example: "3573-TL"
        readOnly: true
      firmware:
        type: "string"
        example: "6.24"
        readOnly: true
      device:
        type: "string"
        example: "/dev/sg9"
        readOnly: true
      acs:
        type: "integer"
        readOnly: true
      storage_slots:
        type: "integer"
        example: 20
        readOnly: true
      storage_slots_address:
        type: "integer"
        example: 1024
        readOnly: true
      io_slots:
        type: "integer"
        example: 4
        readOnly: true
      io_slots_address:
        type: "integer"
        example: 768
        readOnly: true
    example:
      acs: 0
      protocol: "scsi"
      product: "3573-TL"
      storage_slots_address: 1024
      serial: "C0F905D800A0_LL3"
      vendor: "IBM"
      storage_slots: 20
      io_slots_address: 768
      firmware: "6.24"
      device: "/dev/sg9"
      io_slots: 4
  tape_library_device_collection:
    properties:
      tape_libraries:
        type: "array"
        items:
          $ref: "#/definitions/tape_library_device"
    example:
      tape_libraries:
      - acs: 0
        protocol: "scsi"
        product: "3573-TL"
        storage_slots_address: 1024
        serial: "C0F905D800A0_LL3"
        vendor: "IBM"
        storage_slots: 20
        io_slots_address: 768
        firmware: "6.24"
        device: "/dev/sg9"
        io_slots: 4
      - acs: 0
        protocol: "scsi"
        product: "3573-TL"
        storage_slots_address: 1024
        serial: "C0F905D800A0_LL3"
        vendor: "IBM"
        storage_slots: 20
        io_slots_address: 768
        firmware: "6.24"
        device: "/dev/sg9"
        io_slots: 4
  tape_library:
    allOf:
    - $ref: "#/definitions/tape_library_device"
    - type: "object"
      properties:
        id:
          type: "integer"
          example: 2
          readOnly: true
        name:
          type: "string"
          example: "my-library"
        comment:
          type: "string"
        libso:
          type: "string"
          example: "ibm_3573-tl"
        status:
          type: "string"
          example: "online"
          readOnly: true
          enum:
          - "offline"
          - "online"
        price:
          type: "string"
          example: "5.0"
  tape_drive_device:
    properties:
      serial:
        type: "string"
        example: "C0F9000A01"
        readOnly: true
      scsi_address:
        type: "integer"
        example: 256
        readOnly: true
      vendor:
        type: "string"
        example: "IBM"
        readOnly: true
      product:
        type: "string"
        example: "ULT3580-TD5"
        readOnly: true
      firmware:
        type: "string"
        example: "D711"
        readOnly: true
      device:
        type: "string"
        example: "/dev/st5"
        description: "When saved, device may be prefixed by *n* (eg. `/dev/nst5`)"
        readOnly: true
      sgdevice:
        type: "string"
        example: "/dev/sg8"
        readOnly: true
    example:
      product: "ULT3580-TD5"
      serial: "C0F9000A01"
      vendor: "IBM"
      firmware: "D711"
      device: "/dev/st5"
      scsi_address: 256
      sgdevice: "/dev/sg8"
  tape_drive_device_collection:
    properties:
      tape_drives:
        type: "array"
        items:
          $ref: "#/definitions/tape_drive_device"
    example:
      tape_drives:
      - product: "ULT3580-TD5"
        serial: "C0F9000A01"
        vendor: "IBM"
        firmware: "D711"
        device: "/dev/st5"
        scsi_address: 256
        sgdevice: "/dev/sg8"
      - product: "ULT3580-TD5"
        serial: "C0F9000A01"
        vendor: "IBM"
        firmware: "D711"
        device: "/dev/st5"
        scsi_address: 256
        sgdevice: "/dev/sg8"
  tape_drive:
    allOf:
    - $ref: "#/definitions/tape_drive_device"
    - type: "object"
      properties:
        id:
          type: "integer"
          example: 1
          readOnly: true
        tape_library_id:
          type: "integer"
          example: 2
          readOnly: true
        name:
          type: "string"
          example: ""
        comment:
          type: "string"
          example: ""
        libso:
          type: "string"
          example: "drive_lto"
        acs:
          type: "integer"
        lsm:
          type: "integer"
        panel:
          type: "integer"
        transport:
          type: "integer"
        status:
          type: "string"
          example: "online"
          readOnly: true
          enum:
          - "offline"
          - "online"
        full:
          type: "integer"
          readOnly: true
        mount_count:
          type: "integer"
          readOnly: true
        use_to:
          type: "string"
          example: "Idle"
          readOnly: true
        use_by:
          type: "string"
          example: "Idle"
          readOnly: true
        barcode:
          type: "string"
          example: "NOD407L5"
          readOnly: true
        task_id:
          type: "integer"
          example: 14
          readOnly: true
        use_file_processed_size:
          type: "integer"
          readOnly: true
        use_file_size_to_process:
          type: "integer"
          readOnly: true
        use_file_name_processed:
          type: "string"
          readOnly: true
        bandwidth:
          type: "integer"
          readOnly: true
  tape:
    properties:
      id:
        type: "integer"
        example: 10
        readOnly: true
      tape_library_id:
        type: "integer"
        example: 2
        readOnly: true
      pool_id:
        type: "integer"
        example: 6
        readOnly: true
      barcode:
        type: "string"
        example: "NOD407L5"
        readOnly: true
      location:
        type: "string"
        example: "Slot 2"
        readOnly: true
      type:
        type: "string"
        example: "data_lto5"
        readOnly: true
        enum:
        - "unknown"
        - "data"
        - "cleaning"
        - "diagnostic"
        - "data_lto1"
        - "data_lto2"
        - "data_lto3"
        - "data_lto4"
        - "data_lto5"
        - "data_lto6"
        - "data_lto7"
        - "data_lto8"
        - "data_lto9"
        - "data_lto10"
        - "data_lto11"
        - "data_lto12"
      locked:
        type: "boolean"
        readOnly: true
      scratch:
        type: "boolean"
        readOnly: true
      cleaning:
        type: "boolean"
        readOnly: true
      write_protect:
        type: "boolean"
        readOnly: true
      mounted:
        type: "boolean"
        readOnly: true
      ejected:
        type: "boolean"
        readOnly: true
      known:
        type: "boolean"
        readOnly: true
      mount_count:
        type: "integer"
        readOnly: true
      date_in:
        type: "string"
        readOnly: true
      date_move:
        type: "string"
        readOnly: true
      free:
        type: "integer"
        readOnly: true
      max:
        type: "integer"
        readOnly: true
      last_size_update:
        type: "string"
        readOnly: true
      last_maintenance:
        type: "string"
        readOnly: true
      last_repack:
        type: "string"
        readOnly: true
      repack_status:
        type: "boolean"
        readOnly: true
      hash:
        type: "string"
        readOnly: true
      force_import_type:
        type: "boolean"
        readOnly: true
      need_to_check:
        type: "boolean"
        readOnly: true
    example:
      need_to_check: true
      last_repack: "last_repack"
      ejected: true
      last_size_update: "last_size_update"
      type: "data_lto5"
      date_in: "date_in"
      write_protect: true
      tape_library_id: 2
      known: true
      force_import_type: true
      id: 10
      locked: true
      free: 6
      barcode: "NOD407L5"
      cleaning: true
      last_maintenance: "last_maintenance"
      date_move: "date_move"
      max: 1
      repack_status: true
      scratch: true
      pool_id: 6
      mounted: true
      location: "Slot 2"
      hash: "hash"
      mount_count: 0
  pool:
    properties:
      id:
        type: "integer"
        example: 6
        readOnly: true
      name:
        type: "string"
        example: "offline-tapes"
      comment:
        type: "string"
        example: ""
      type:
        type: "string"
        example: "offline_archive"
        enum:
        - "active_archive"
        - "offline_archive"
        - "data_exchange"
        - "scratch"
        - "data_enrichment"
        - "primary"
      content:
        type: "string"
        enum:
        - "tape"
        - "cloud"
        - "nas"
      primary_id:
        type: "integer"
        example: 100
        readOnly: true
    example:
      name: "offline-tapes"
      comment: ""
      primary_id: 100
      id: 6
      type: "offline_archive"
      content: "tape"
  pool_up:
    allOf:
    - $ref: "#/definitions/pool"
    - type: "object"
      properties:
        tape_ids:
          type: "array"
          example:
          - 10
          - 11
          - 12
          items:
            type: "integer"
        nas_share_ids:
          type: "array"
          example:
          - 15
          items:
            type: "integer"
        cloud_bucket_ids:
          type: "array"
          example:
          - 15
          items:
            type: "integer"
  primary_scan:
    properties:
      id:
        type: "integer"
        readOnly: true
      pool_id:
        type: "integer"
        example: 16
      enabled:
        type: "boolean"
        example: true
      operand:
        type: "number"
        example: 4
      unit:
        type: "string"
        enum:
        - "minutes"
        - "hours"
        - "days"
        - "weeks"
        - "months"
        - "years"
    example:
      unit: "minutes"
      id: 0
      pool_id: 16
      enabled: true
      operand: 4
  cloud_connector:
    properties:
      id:
        type: "integer"
        readOnly: true
      name:
        type: "string"
      url:
        type: "string"
      url_proxy:
        type: "string"
      provider:
        type: "string"
        enum:
        - "generic_s3"
        - "amazon_aws_s3"
        - "cloudian_hyperstore"
        - "scality_ring"
        - "dell_emc_ecs"
        - "azure"
        - "google_cloud_storage"
        - "openstack_swift"
      region:
        type: "string"
      access_key:
        type: "string"
      secret_key:
        type: "string"
    example:
      secret_key: "secret_key"
      provider: "generic_s3"
      url_proxy: "url_proxy"
      access_key: "access_key"
      name: "name"
      id: 0
      region: "region"
      url: "url"
  cloud_bucket:
    properties:
      id:
        type: "integer"
        readOnly: true
      cloud_connector_id:
        type: "integer"
        readOnly: true
      pool_id:
        type: "integer"
        readOnly: true
      name:
        type: "string"
        readOnly: true
      files_count:
        type: "integer"
        readOnly: true
      files_size:
        type: "integer"
        readOnly: true
      location:
        type: "string"
        readOnly: true
      price:
        type: "string"
        readOnly: true
    example:
      files_count: 5
      cloud_connector_id: 6
      price: "price"
      name: "name"
      location: "location"
      id: 0
      pool_id: 1
      files_size: 5
  nas:
    properties:
      id:
        type: "integer"
        example: 2
        readOnly: true
      name:
        type: "string"
        example: "samba"
      host:
        type: "string"
        example: "samba.local"
      type:
        type: "string"
        example: "smb_v3"
        enum:
        - "smb_v1"
        - "smb_v2_1"
        - "smb_v3"
        - "nfs_v3"
        - "nfs_v4"
        - "storenext_v5"
      comment:
        type: "string"
        example: "Local NAS"
      price:
        type: "string"
        example: "120.0"
    example:
      price: "120.0"
      name: "samba"
      host: "samba.local"
      comment: "Local NAS"
      id: 2
      type: "smb_v3"
  nas_share:
    properties:
      id:
        type: "integer"
        example: 10
        readOnly: true
      nas_id:
        type: "integer"
        example: 2
        readOnly: true
      pool_id:
        type: "integer"
        example: 6
        readOnly: true
      path:
        type: "string"
        example: "archives/general"
      options:
        type: "string"
        example: "rsize=1048576,wsize=1048576"
      username:
        type: "string"
        example: "admin"
      password:
        type: "string"
        example: "[censored]"
    example:
      path: "archives/general"
      password: "[censored]"
      options: "rsize=1048576,wsize=1048576"
      id: 10
      nas_id: 2
      pool_id: 6
      username: "admin"
  task:
    properties:
      id:
        type: "integer"
        readOnly: true
      name:
        type: "string"
      comment:
        type: "string"
      workflow_type:
        type: "string"
        enum:
        - "active_archive"
        - "offline_archive"
        - "data_exchange"
        - "maintenance"
        - "data_enrichment"
      workflow_action:
        type: "string"
        enum:
        - "copy"
        - "move"
        - "scan"
        - "rehydratation"
        - "format"
        - "check_consistency"
        - "duplication"
      source_type:
        type: "string"
        enum:
        - "container"
        - "primary_nas"
        - "secondary_nas"
        - "primary_cloud"
        - "secondary_cloud"
        - "secondary_tape"
      destination_type:
        type: "string"
        enum:
        - "container"
        - "primary_nas"
        - "secondary_nas"
        - "primary_cloud"
        - "secondary_cloud"
        - "secondary_tape"
      priority:
        type: "integer"
      conflict_resolution:
        type: "string"
        enum:
        - "rename"
        - "overwrite"
        - "ignore"
      action:
        type: "string"
        readOnly: true
        enum:
        - "noop"
        - "run"
        - "pause"
        - "stop"
        - "resume"
      activate:
        type: "boolean"
      creation_date:
        type: "string"
        readOnly: true
      modification_date:
        type: "string"
        readOnly: true
      creation_username:
        type: "string"
        readOnly: true
      modification_username:
        type: "string"
        readOnly: true
      status:
        type: "string"
        readOnly: true
        enum:
        - "not_activated"
        - "done"
        - "in_progress"
        - "error"
        - "paused"
        - "stopped_by_system"
        - "in_queue"
        - "finished_with_warnings"
        - "calculating"
        - "stopped_by_user"
      job_started:
        type: "string"
        readOnly: true
      job_finished:
        type: "string"
        readOnly: true
      processed_size:
        type: "integer"
        readOnly: true
      to_process_size:
        type: "integer"
        readOnly: true
    example:
      modification_username: "modification_username"
      workflow_action: "copy"
      job_finished: "job_finished"
      job_started: "job_started"
      source_type: "container"
      conflict_resolution: "rename"
      workflow_type: "active_archive"
      creation_date: "creation_date"
      priority: 6
      processed_size: 1
      destination_type: "container"
      to_process_size: 5
      creation_username: "creation_username"
      modification_date: "modification_date"
      name: "name"
      activate: true
      action: "noop"
      comment: "comment"
      id: 0
      status: "not_activated"
  task_source_up:
    properties:
      file_id:
        type: "integer"
      file_path:
        type: "string"
      range:
        type: "array"
        example:
        - 150000
        - 290000
        items:
          type: "integer"
        maxItems: 2
        minItems: 2
      import_file_id:
        type: "integer"
      import_file_path:
        type: "string"
      tape_id:
        type: "integer"
      tape_barcode:
        type: "string"
      pool_id:
        type: "integer"
      pool_name:
        type: "string"
  task_source_down:
    properties:
      id:
        type: "integer"
        readOnly: true
      file:
        $ref: "#/definitions/nodeum_file"
      range:
        type: "array"
        example:
        - 150000
        - 290000
        items:
          type: "integer"
        maxItems: 2
        minItems: 2
      container:
        $ref: "#/definitions/container"
      import_file:
        $ref: "#/definitions/import_file"
      tape:
        $ref: "#/definitions/tape"
      pool:
        $ref: "#/definitions/pool"
    example:
      container:
        stat_total_files: 99301
        stat_total_size: 6145076462
        stat_size_on_cache: 6899417088
        quota_total_size: 0
        guest_right: "read"
        last_update: "2019-08-05T14:24:15.000Z"
        name: "my-container"
        comment: "Read only container for random stuff"
        id: 100
        quota_on_cache: 6
      file:
        parent: 100
        uid: 1000
        gid: 1000
        size: 1063457
        change_date: "2018-12-10T08:33:47.000Z"
        access_date: "2018-12-10T15:27:51.000Z"
        modification_date: "2018-12-10T15:29:23.000Z"
        name: "my-file.txt"
        primary_id: 100
        permission: 100666
        id: 105
        type: "file"
      tape:
        need_to_check: true
        last_repack: "last_repack"
        ejected: true
        last_size_update: "last_size_update"
        type: "data_lto5"
        date_in: "date_in"
        write_protect: true
        tape_library_id: 2
        known: true
        force_import_type: true
        id: 10
        locked: true
        free: 6
        barcode: "NOD407L5"
        cleaning: true
        last_maintenance: "last_maintenance"
        date_move: "date_move"
        max: 1
        repack_status: true
        scratch: true
        pool_id: 6
        mounted: true
        location: "Slot 2"
        hash: "hash"
        mount_count: 0
      pool:
        name: "offline-tapes"
        comment: ""
        primary_id: 100
        id: 6
        type: "offline_archive"
        content: "tape"
      range:
      - 150000
      - 290000
      id: 0
      import_file:
        parent: 100
        uid: 1000
        gid: 1000
        size: 1063457
        change_date: "2018-12-10T08:33:47.000Z"
        access_date: "2018-12-10T15:27:51.000Z"
        modification_date: "2018-12-10T15:29:23.000Z"
        name: "my-file.txt"
        primary_id: 100
        permission: 100666
        id: 105
        type: "file"
  task_destination_up:
    properties:
      folder_id:
        type: "integer"
      folder_path:
        type: "string"
      tape_id:
        type: "integer"
      tape_barcode:
        type: "string"
      pool_id:
        type: "integer"
      pool_name:
        type: "string"
  task_destination_down:
    properties:
      id:
        type: "integer"
        readOnly: true
      folder:
        $ref: "#/definitions/nodeum_file"
      container:
        $ref: "#/definitions/container"
      tape:
        $ref: "#/definitions/tape"
      pool:
        $ref: "#/definitions/pool"
    example:
      container:
        stat_total_files: 99301
        stat_total_size: 6145076462
        stat_size_on_cache: 6899417088
        quota_total_size: 0
        guest_right: "read"
        last_update: "2019-08-05T14:24:15.000Z"
        name: "my-container"
        comment: "Read only container for random stuff"
        id: 100
        quota_on_cache: 6
      folder:
        parent: 100
        uid: 1000
        gid: 1000
        size: 1063457
        change_date: "2018-12-10T08:33:47.000Z"
        access_date: "2018-12-10T15:27:51.000Z"
        modification_date: "2018-12-10T15:29:23.000Z"
        name: "my-file.txt"
        primary_id: 100
        permission: 100666
        id: 105
        type: "file"
      tape:
        need_to_check: true
        last_repack: "last_repack"
        ejected: true
        last_size_update: "last_size_update"
        type: "data_lto5"
        date_in: "date_in"
        write_protect: true
        tape_library_id: 2
        known: true
        force_import_type: true
        id: 10
        locked: true
        free: 6
        barcode: "NOD407L5"
        cleaning: true
        last_maintenance: "last_maintenance"
        date_move: "date_move"
        max: 1
        repack_status: true
        scratch: true
        pool_id: 6
        mounted: true
        location: "Slot 2"
        hash: "hash"
        mount_count: 0
      pool:
        name: "offline-tapes"
        comment: ""
        primary_id: 100
        id: 6
        type: "offline_archive"
        content: "tape"
      id: 0
  task_schedule:
    properties:
      id:
        type: "integer"
        readOnly: true
      task_id:
        type: "integer"
        example: 16
      rrule:
        type: "string"
        example: "DTSTART;TZID=Europe/Paris:20190705T085000\nRRULE:FREQ=WEEKLY"
      done:
        type: "boolean"
        example: false
      next:
        type: "string"
        example: "2019-10-11T15:00:00Z"
        readOnly: true
      missed_count:
        type: "integer"
        example: 2
        readOnly: true
      skipped_count:
        type: "integer"
        example: 0
        readOnly: true
      missed_last:
        type: "string"
        example: "2019-10-11T13:00:00Z"
        readOnly: true
      missed_first:
        type: "string"
        example: "2019-10-11T11:00:00Z"
        readOnly: true
    example:
      next: "2019-10-11T15:00:00Z"
      missed_last: "2019-10-11T13:00:00Z"
      missed_first: "2019-10-11T11:00:00Z"
      rrule: "DTSTART;TZID=Europe/Paris:20190705T085000\nRRULE:FREQ=WEEKLY"
      skipped_count: 0
      task_id: 16
      id: 0
      done: false
      missed_count: 2
  task_option:
    properties:
      id:
        type: "integer"
        readOnly: true
      type:
        type: "string"
        enum:
        - "file_checksum"
        - "reset_file_date"
        - "reset_folder_date"
        - "rename_to"
        - "execution_task_id"
        - "selected_drive"
        - "parallel_processing"
        - "task_id"
        - "full_report"
        - "processing_order"
        - "rehydration_usage_threshold"
        - "rehydration_deleted_files_threshold"
        - "learning_type"
        - "learning_threshold"
        - "tape_to_scratch"
        - "eject_tape_after"
        - "barcodes"
        - "task_template"
      value:
        type: "string"
    example:
      id: 0
      type: "file_checksum"
      value: "value"
  task_callback:
    properties:
      id:
        type: "integer"
        readOnly: true
      type:
        type: "string"
        enum:
        - "filter"
      script:
        type: "string"
    example:
      id: 0
      type: "filter"
      script: "script"
  task_metadatum:
    properties:
      id:
        type: "integer"
        readOnly: true
      key:
        type: "string"
      value:
        type: "string"
    example:
      id: 0
      value: "value"
      key: "key"
  task_execution:
    properties:
      id:
        type: "string"
        example: "1542797273225418555"
      task_id:
        type: "integer"
      name:
        type: "string"
      workflow_type:
        type: "string"
        enum:
        - "active_archive"
        - "offline_archive"
        - "data_exchange"
        - "maintenance"
        - "data_enrichment"
      workflow_action:
        type: "string"
        enum:
        - "copy"
        - "move"
        - "scan"
        - "rehydratation"
        - "format"
        - "check_consistency"
        - "duplication"
      source_type:
        type: "string"
        enum:
        - "container"
        - "primary_nas"
        - "secondary_nas"
        - "primary_cloud"
        - "secondary_cloud"
        - "secondary_tape"
      destination_type:
        type: "string"
        enum:
        - "container"
        - "primary_nas"
        - "secondary_nas"
        - "primary_cloud"
        - "secondary_cloud"
        - "secondary_tape"
      status:
        type: "string"
        example: "finished_with_warnings"
        enum:
        - "not_activated"
        - "done"
        - "in_progress"
        - "error"
        - "paused"
        - "stopped_by_system"
        - "in_queue"
        - "finished_with_warnings"
        - "calculating"
        - "stopped_by_user"
      log_time:
        type: "string"
        example: "2018-11-21T09:48:09.000Z"
      job_started:
        type: "string"
        example: "2018-11-21T10:47:53.000Z"
      job_finished:
        type: "string"
        example: "2018-11-21T10:48:08.000Z"
      to_process_size:
        type: "integer"
        example: 16515610
      processed_size:
        type: "integer"
        example: 12115125
      to_process_files:
        type: "integer"
        example: 126
      processed_files:
        type: "integer"
        example: 113
      finalized_files:
        type: "integer"
        example: 126
      estimation_time:
        type: "integer"
      bandwidth:
        type: "integer"
    example:
      workflow_action: "copy"
      to_process_files: 126
      bandwidth: 1
      job_finished: "2018-11-21T10:48:08.000Z"
      job_started: "2018-11-21T10:47:53.000Z"
      task_id: 0
      source_type: "container"
      processed_files: 113
      workflow_type: "active_archive"
      log_time: "2018-11-21T09:48:09.000Z"
      processed_size: 12115125
      destination_type: "container"
      to_process_size: 16515610
      finalized_files: 126
      name: "name"
      estimation_time: 6
      id: "1542797273225418555"
      status: "finished_with_warnings"
  nodeum_file_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      files:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/nodeum_file"
    example:
      count: 1
      files:
      - parent: 100
        uid: 1000
        gid: 1000
        size: 1063457
        change_date: "2018-12-10T08:33:47.000Z"
        access_date: "2018-12-10T15:27:51.000Z"
        modification_date: "2018-12-10T15:29:23.000Z"
        name: "my-file.txt"
        primary_id: 100
        permission: 100666
        id: 105
        type: "file"
      - parent: 100
        uid: 1000
        gid: 1000
        size: 1063457
        change_date: "2018-12-10T08:33:47.000Z"
        access_date: "2018-12-10T15:27:51.000Z"
        modification_date: "2018-12-10T15:29:23.000Z"
        name: "my-file.txt"
        primary_id: 100
        permission: 100666
        id: 105
        type: "file"
  import_file_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      import_files:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/import_file"
    example:
      import_files:
      - parent: 100
        uid: 1000
        gid: 1000
        size: 1063457
        change_date: "2018-12-10T08:33:47.000Z"
        access_date: "2018-12-10T15:27:51.000Z"
        modification_date: "2018-12-10T15:29:23.000Z"
        name: "my-file.txt"
        primary_id: 100
        permission: 100666
        id: 105
        type: "file"
      - parent: 100
        uid: 1000
        gid: 1000
        size: 1063457
        change_date: "2018-12-10T08:33:47.000Z"
        access_date: "2018-12-10T15:27:51.000Z"
        modification_date: "2018-12-10T15:29:23.000Z"
        name: "my-file.txt"
        primary_id: 100
        permission: 100666
        id: 105
        type: "file"
      count: 1
  on_tapes_file_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      on_tapes_files:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/on_tapes_file"
    example:
      count: 1
      on_tapes_files:
      - size: 1063457
        name: "my-file.txt"
        id: 105
        type: "file"
        barcodes:
        - "NOD407L5"
        - "NOD415L5"
      - size: 1063457
        name: "my-file.txt"
        id: 105
        type: "file"
        barcodes:
        - "NOD407L5"
        - "NOD415L5"
  mount_collection:
    properties:
      mounts:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/mount_info"
    example:
      mounts:
      - nas_name: "nas_name"
        cloud_connector_id: 5
        cloud_bucket_id: 5
        tape_id: 2
        source: "//server.local/shared_folder"
        cloud_bucket_name: "cloud_bucket_name"
        type: "cifs"
        pool_id: 0
        pool_name: "pool_name"
        major_minor: "0:189"
        target: "/mnt/MOUNT_POINTS/folder"
        tape_library_serial: "tape_library_serial"
        nas_share_id: 1
        cloud_connector_name: "cloud_connector_name"
        tape_library_id: 7
        tape_barcode: "tape_barcode"
        options: "vers=3.0,rsize=1048576,wsize=1048576"
        id: 123
        nas_id: 6
        tape_library_name: "tape_library_name"
      - nas_name: "nas_name"
        cloud_connector_id: 5
        cloud_bucket_id: 5
        tape_id: 2
        source: "//server.local/shared_folder"
        cloud_bucket_name: "cloud_bucket_name"
        type: "cifs"
        pool_id: 0
        pool_name: "pool_name"
        major_minor: "0:189"
        target: "/mnt/MOUNT_POINTS/folder"
        tape_library_serial: "tape_library_serial"
        nas_share_id: 1
        cloud_connector_name: "cloud_connector_name"
        tape_library_id: 7
        tape_barcode: "tape_barcode"
        options: "vers=3.0,rsize=1048576,wsize=1048576"
        id: 123
        nas_id: 6
        tape_library_name: "tape_library_name"
  container_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      containers:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/container"
    example:
      count: 1
      containers:
      - stat_total_files: 99301
        stat_total_size: 6145076462
        stat_size_on_cache: 6899417088
        quota_total_size: 0
        guest_right: "read"
        last_update: "2019-08-05T14:24:15.000Z"
        name: "my-container"
        comment: "Read only container for random stuff"
        id: 100
        quota_on_cache: 6
      - stat_total_files: 99301
        stat_total_size: 6145076462
        stat_size_on_cache: 6899417088
        quota_total_size: 0
        guest_right: "read"
        last_update: "2019-08-05T14:24:15.000Z"
        name: "my-container"
        comment: "Read only container for random stuff"
        id: 100
        quota_on_cache: 6
  container_privilege_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      container_privileges:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/container_privilege"
    example:
      count: 1
      container_privileges:
      - name: "admin"
        id: 1
        privilege: "read_write"
        type: "user"
      - name: "admin"
        id: 1
        privilege: "read_write"
        type: "user"
  tape_library_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      tape_libraries:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/tape_library"
    example:
      tape_libraries:
      - ""
      - ""
      count: 1
  tape_drive_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      tape_drives:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/tape_drive"
    example:
      count: 1
      tape_drives:
      - ""
      - ""
  tape_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      tapes:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/tape"
    example:
      tapes:
      - need_to_check: true
        last_repack: "last_repack"
        ejected: true
        last_size_update: "last_size_update"
        type: "data_lto5"
        date_in: "date_in"
        write_protect: true
        tape_library_id: 2
        known: true
        force_import_type: true
        id: 10
        locked: true
        free: 6
        barcode: "NOD407L5"
        cleaning: true
        last_maintenance: "last_maintenance"
        date_move: "date_move"
        max: 1
        repack_status: true
        scratch: true
        pool_id: 6
        mounted: true
        location: "Slot 2"
        hash: "hash"
        mount_count: 0
      - need_to_check: true
        last_repack: "last_repack"
        ejected: true
        last_size_update: "last_size_update"
        type: "data_lto5"
        date_in: "date_in"
        write_protect: true
        tape_library_id: 2
        known: true
        force_import_type: true
        id: 10
        locked: true
        free: 6
        barcode: "NOD407L5"
        cleaning: true
        last_maintenance: "last_maintenance"
        date_move: "date_move"
        max: 1
        repack_status: true
        scratch: true
        pool_id: 6
        mounted: true
        location: "Slot 2"
        hash: "hash"
        mount_count: 0
      count: 1
  pool_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      pools:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/pool"
    example:
      count: 1
      pools:
      - name: "offline-tapes"
        comment: ""
        primary_id: 100
        id: 6
        type: "offline_archive"
        content: "tape"
      - name: "offline-tapes"
        comment: ""
        primary_id: 100
        id: 6
        type: "offline_archive"
        content: "tape"
  cloud_connector_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      cloud_connectors:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/cloud_connector"
    example:
      count: 1
      cloud_connectors:
      - secret_key: "secret_key"
        provider: "generic_s3"
        url_proxy: "url_proxy"
        access_key: "access_key"
        name: "name"
        id: 0
        region: "region"
        url: "url"
      - secret_key: "secret_key"
        provider: "generic_s3"
        url_proxy: "url_proxy"
        access_key: "access_key"
        name: "name"
        id: 0
        region: "region"
        url: "url"
  cloud_bucket_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      cloud_buckets:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/cloud_bucket"
    example:
      count: 1
      cloud_buckets:
      - files_count: 5
        cloud_connector_id: 6
        price: "price"
        name: "name"
        location: "location"
        id: 0
        pool_id: 1
        files_size: 5
      - files_count: 5
        cloud_connector_id: 6
        price: "price"
        name: "name"
        location: "location"
        id: 0
        pool_id: 1
        files_size: 5
  cloud_bucket_simple_collection:
    properties:
      cloud_buckets:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/cloud_bucket"
    example:
      cloud_buckets:
      - files_count: 5
        cloud_connector_id: 6
        price: "price"
        name: "name"
        location: "location"
        id: 0
        pool_id: 1
        files_size: 5
      - files_count: 5
        cloud_connector_id: 6
        price: "price"
        name: "name"
        location: "location"
        id: 0
        pool_id: 1
        files_size: 5
  nas_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      nas:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/nas"
    example:
      nas:
      - price: "120.0"
        name: "samba"
        host: "samba.local"
        comment: "Local NAS"
        id: 2
        type: "smb_v3"
      - price: "120.0"
        name: "samba"
        host: "samba.local"
        comment: "Local NAS"
        id: 2
        type: "smb_v3"
      count: 1
  nas_share_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      nas_shares:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/nas_share"
    example:
      count: 1
      nas_shares:
      - path: "archives/general"
        password: "[censored]"
        options: "rsize=1048576,wsize=1048576"
        id: 10
        nas_id: 2
        pool_id: 6
        username: "admin"
      - path: "archives/general"
        password: "[censored]"
        options: "rsize=1048576,wsize=1048576"
        id: 10
        nas_id: 2
        pool_id: 6
        username: "admin"
  task_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      tasks:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/task"
    example:
      count: 1
      tasks:
      - modification_username: "modification_username"
        workflow_action: "copy"
        job_finished: "job_finished"
        job_started: "job_started"
        source_type: "container"
        conflict_resolution: "rename"
        workflow_type: "active_archive"
        creation_date: "creation_date"
        priority: 6
        processed_size: 1
        destination_type: "container"
        to_process_size: 5
        creation_username: "creation_username"
        modification_date: "modification_date"
        name: "name"
        activate: true
        action: "noop"
        comment: "comment"
        id: 0
        status: "not_activated"
      - modification_username: "modification_username"
        workflow_action: "copy"
        job_finished: "job_finished"
        job_started: "job_started"
        source_type: "container"
        conflict_resolution: "rename"
        workflow_type: "active_archive"
        creation_date: "creation_date"
        priority: 6
        processed_size: 1
        destination_type: "container"
        to_process_size: 5
        creation_username: "creation_username"
        modification_date: "modification_date"
        name: "name"
        activate: true
        action: "noop"
        comment: "comment"
        id: 0
        status: "not_activated"
  task_source_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      task_sources:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/task_source_down"
    example:
      task_sources:
      - container:
          stat_total_files: 99301
          stat_total_size: 6145076462
          stat_size_on_cache: 6899417088
          quota_total_size: 0
          guest_right: "read"
          last_update: "2019-08-05T14:24:15.000Z"
          name: "my-container"
          comment: "Read only container for random stuff"
          id: 100
          quota_on_cache: 6
        file:
          parent: 100
          uid: 1000
          gid: 1000
          size: 1063457
          change_date: "2018-12-10T08:33:47.000Z"
          access_date: "2018-12-10T15:27:51.000Z"
          modification_date: "2018-12-10T15:29:23.000Z"
          name: "my-file.txt"
          primary_id: 100
          permission: 100666
          id: 105
          type: "file"
        tape:
          need_to_check: true
          last_repack: "last_repack"
          ejected: true
          last_size_update: "last_size_update"
          type: "data_lto5"
          date_in: "date_in"
          write_protect: true
          tape_library_id: 2
          known: true
          force_import_type: true
          id: 10
          locked: true
          free: 6
          barcode: "NOD407L5"
          cleaning: true
          last_maintenance: "last_maintenance"
          date_move: "date_move"
          max: 1
          repack_status: true
          scratch: true
          pool_id: 6
          mounted: true
          location: "Slot 2"
          hash: "hash"
          mount_count: 0
        pool:
          name: "offline-tapes"
          comment: ""
          primary_id: 100
          id: 6
          type: "offline_archive"
          content: "tape"
        range:
        - 150000
        - 290000
        id: 0
        import_file:
          parent: 100
          uid: 1000
          gid: 1000
          size: 1063457
          change_date: "2018-12-10T08:33:47.000Z"
          access_date: "2018-12-10T15:27:51.000Z"
          modification_date: "2018-12-10T15:29:23.000Z"
          name: "my-file.txt"
          primary_id: 100
          permission: 100666
          id: 105
          type: "file"
      - container:
          stat_total_files: 99301
          stat_total_size: 6145076462
          stat_size_on_cache: 6899417088
          quota_total_size: 0
          guest_right: "read"
          last_update: "2019-08-05T14:24:15.000Z"
          name: "my-container"
          comment: "Read only container for random stuff"
          id: 100
          quota_on_cache: 6
        file:
          parent: 100
          uid: 1000
          gid: 1000
          size: 1063457
          change_date: "2018-12-10T08:33:47.000Z"
          access_date: "2018-12-10T15:27:51.000Z"
          modification_date: "2018-12-10T15:29:23.000Z"
          name: "my-file.txt"
          primary_id: 100
          permission: 100666
          id: 105
          type: "file"
        tape:
          need_to_check: true
          last_repack: "last_repack"
          ejected: true
          last_size_update: "last_size_update"
          type: "data_lto5"
          date_in: "date_in"
          write_protect: true
          tape_library_id: 2
          known: true
          force_import_type: true
          id: 10
          locked: true
          free: 6
          barcode: "NOD407L5"
          cleaning: true
          last_maintenance: "last_maintenance"
          date_move: "date_move"
          max: 1
          repack_status: true
          scratch: true
          pool_id: 6
          mounted: true
          location: "Slot 2"
          hash: "hash"
          mount_count: 0
        pool:
          name: "offline-tapes"
          comment: ""
          primary_id: 100
          id: 6
          type: "offline_archive"
          content: "tape"
        range:
        - 150000
        - 290000
        id: 0
        import_file:
          parent: 100
          uid: 1000
          gid: 1000
          size: 1063457
          change_date: "2018-12-10T08:33:47.000Z"
          access_date: "2018-12-10T15:27:51.000Z"
          modification_date: "2018-12-10T15:29:23.000Z"
          name: "my-file.txt"
          primary_id: 100
          permission: 100666
          id: 105
          type: "file"
      count: 1
  task_destination_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      task_destinations:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/task_destination_down"
    example:
      count: 1
      task_destinations:
      - container:
          stat_total_files: 99301
          stat_total_size: 6145076462
          stat_size_on_cache: 6899417088
          quota_total_size: 0
          guest_right: "read"
          last_update: "2019-08-05T14:24:15.000Z"
          name: "my-container"
          comment: "Read only container for random stuff"
          id: 100
          quota_on_cache: 6
        folder:
          parent: 100
          uid: 1000
          gid: 1000
          size: 1063457
          change_date: "2018-12-10T08:33:47.000Z"
          access_date: "2018-12-10T15:27:51.000Z"
          modification_date: "2018-12-10T15:29:23.000Z"
          name: "my-file.txt"
          primary_id: 100
          permission: 100666
          id: 105
          type: "file"
        tape:
          need_to_check: true
          last_repack: "last_repack"
          ejected: true
          last_size_update: "last_size_update"
          type: "data_lto5"
          date_in: "date_in"
          write_protect: true
          tape_library_id: 2
          known: true
          force_import_type: true
          id: 10
          locked: true
          free: 6
          barcode: "NOD407L5"
          cleaning: true
          last_maintenance: "last_maintenance"
          date_move: "date_move"
          max: 1
          repack_status: true
          scratch: true
          pool_id: 6
          mounted: true
          location: "Slot 2"
          hash: "hash"
          mount_count: 0
        pool:
          name: "offline-tapes"
          comment: ""
          primary_id: 100
          id: 6
          type: "offline_archive"
          content: "tape"
        id: 0
      - container:
          stat_total_files: 99301
          stat_total_size: 6145076462
          stat_size_on_cache: 6899417088
          quota_total_size: 0
          guest_right: "read"
          last_update: "2019-08-05T14:24:15.000Z"
          name: "my-container"
          comment: "Read only container for random stuff"
          id: 100
          quota_on_cache: 6
        folder:
          parent: 100
          uid: 1000
          gid: 1000
          size: 1063457
          change_date: "2018-12-10T08:33:47.000Z"
          access_date: "2018-12-10T15:27:51.000Z"
          modification_date: "2018-12-10T15:29:23.000Z"
          name: "my-file.txt"
          primary_id: 100
          permission: 100666
          id: 105
          type: "file"
        tape:
          need_to_check: true
          last_repack: "last_repack"
          ejected: true
          last_size_update: "last_size_update"
          type: "data_lto5"
          date_in: "date_in"
          write_protect: true
          tape_library_id: 2
          known: true
          force_import_type: true
          id: 10
          locked: true
          free: 6
          barcode: "NOD407L5"
          cleaning: true
          last_maintenance: "last_maintenance"
          date_move: "date_move"
          max: 1
          repack_status: true
          scratch: true
          pool_id: 6
          mounted: true
          location: "Slot 2"
          hash: "hash"
          mount_count: 0
        pool:
          name: "offline-tapes"
          comment: ""
          primary_id: 100
          id: 6
          type: "offline_archive"
          content: "tape"
        id: 0
  task_schedule_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      task_schedules:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/task_schedule"
    example:
      task_schedules:
      - next: "2019-10-11T15:00:00Z"
        missed_last: "2019-10-11T13:00:00Z"
        missed_first: "2019-10-11T11:00:00Z"
        rrule: "DTSTART;TZID=Europe/Paris:20190705T085000\nRRULE:FREQ=WEEKLY"
        skipped_count: 0
        task_id: 16
        id: 0
        done: false
        missed_count: 2
      - next: "2019-10-11T15:00:00Z"
        missed_last: "2019-10-11T13:00:00Z"
        missed_first: "2019-10-11T11:00:00Z"
        rrule: "DTSTART;TZID=Europe/Paris:20190705T085000\nRRULE:FREQ=WEEKLY"
        skipped_count: 0
        task_id: 16
        id: 0
        done: false
        missed_count: 2
      count: 1
  task_option_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      task_options:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/task_option"
    example:
      task_options:
      - id: 0
        type: "file_checksum"
        value: "value"
      - id: 0
        type: "file_checksum"
        value: "value"
      count: 1
  task_callback_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      task_callbacks:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/task_callback"
    example:
      task_callbacks:
      - id: 0
        type: "filter"
        script: "script"
      - id: 0
        type: "filter"
        script: "script"
      count: 1
  task_metadatum_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      task_metadata:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/task_metadatum"
    example:
      task_metadata:
      - id: 0
        value: "value"
        key: "key"
      - id: 0
        value: "value"
        key: "key"
      count: 1
  task_execution_collection:
    properties:
      count:
        type: "integer"
        example: 1
        readOnly: true
      task_executions:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/task_execution"
    example:
      count: 1
      task_executions:
      - workflow_action: "copy"
        to_process_files: 126
        bandwidth: 1
        job_finished: "2018-11-21T10:48:08.000Z"
        job_started: "2018-11-21T10:47:53.000Z"
        task_id: 0
        source_type: "container"
        processed_files: 113
        workflow_type: "active_archive"
        log_time: "2018-11-21T09:48:09.000Z"
        processed_size: 12115125
        destination_type: "container"
        to_process_size: 16515610
        finalized_files: 126
        name: "name"
        estimation_time: 6
        id: "1542797273225418555"
        status: "finished_with_warnings"
      - workflow_action: "copy"
        to_process_files: 126
        bandwidth: 1
        job_finished: "2018-11-21T10:48:08.000Z"
        job_started: "2018-11-21T10:47:53.000Z"
        task_id: 0
        source_type: "container"
        processed_files: 113
        workflow_type: "active_archive"
        log_time: "2018-11-21T09:48:09.000Z"
        processed_size: 12115125
        destination_type: "container"
        to_process_size: 16515610
        finalized_files: 126
        name: "name"
        estimation_time: 6
        id: "1542797273225418555"
        status: "finished_with_warnings"
  mount_info:
    type: "object"
    properties:
      id:
        type: "integer"
        example: 123
      major_minor:
        type: "string"
        example: "0:189"
      target:
        type: "string"
        example: "/mnt/MOUNT_POINTS/folder"
      source:
        type: "string"
        example: "//server.local/shared_folder"
      options:
        type: "string"
        example: "vers=3.0,rsize=1048576,wsize=1048576"
      type:
        type: "string"
        example: "cifs"
        enum:
        - "cifs"
        - "nfs"
        - "fuse.s3fs"
        - "fuse.core_fuse"
        - "fuse"
      pool_id:
        type: "integer"
      pool_name:
        type: "string"
      nas_id:
        type: "integer"
      nas_name:
        type: "string"
      nas_share_id:
        type: "integer"
      cloud_connector_id:
        type: "integer"
      cloud_connector_name:
        type: "string"
      cloud_bucket_id:
        type: "integer"
      cloud_bucket_name:
        type: "string"
      tape_id:
        type: "integer"
      tape_barcode:
        type: "string"
      tape_library_id:
        type: "integer"
      tape_library_name:
        type: "string"
      tape_library_serial:
        type: "string"
    example:
      nas_name: "nas_name"
      cloud_connector_id: 5
      cloud_bucket_id: 5
      tape_id: 2
      source: "//server.local/shared_folder"
      cloud_bucket_name: "cloud_bucket_name"
      type: "cifs"
      pool_id: 0
      pool_name: "pool_name"
      major_minor: "0:189"
      target: "/mnt/MOUNT_POINTS/folder"
      tape_library_serial: "tape_library_serial"
      nas_share_id: 1
      cloud_connector_name: "cloud_connector_name"
      tape_library_id: 7
      tape_barcode: "tape_barcode"
      options: "vers=3.0,rsize=1048576,wsize=1048576"
      id: 123
      nas_id: 6
      tape_library_name: "tape_library_name"
parameters:
  limit:
    name: "limit"
    in: "query"
    description: "The number of items to display for pagination."
    required: false
    type: "integer"
  offset:
    name: "offset"
    in: "query"
    description: "The number of items to skip for pagination."
    required: false
    type: "integer"
  sort_by:
    name: "sort_by"
    in: "query"
    description: "Sort results by attribute.\n\nCan sort on multiple attributes, separated\
      \ by `|`.\nOrder direction can be suffixing the attribute by either `:asc` (default)\
      \ or `:desc`."
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "pipes"
  job_id:
    name: "job_id"
    in: "query"
    description: "ID of active job"
    required: false
    type: "string"
  complete_list:
    name: "complete_list"
    in: "query"
    description: "If `false`, only includes the last correct execution of a task."
    required: false
    type: "boolean"
    default: true
  filter_id:
    name: "id"
    in: "query"
    description: "Filter on id"
    required: false
    type: "string"
  filter_name:
    name: "name"
    in: "query"
    description: "Filter on name"
    required: false
    type: "string"
  filter_type:
    name: "type"
    in: "query"
    description: "Filter on type"
    required: false
    type: "string"
  filter_comment:
    name: "comment"
    in: "query"
    description: "Filter on comment"
    required: false
    type: "string"
  filter_access_date:
    name: "access_date"
    in: "query"
    description: "Filter on access date"
    required: false
    type: "string"
  filter_access_key:
    name: "access_key"
    in: "query"
    description: "Filter on access key"
    required: false
    type: "string"
  filter_acs:
    name: "acs"
    in: "query"
    description: "Filter on acs"
    required: false
    type: "string"
  filter_action:
    name: "action"
    in: "query"
    description: "Filter on action"
    required: false
    type: "string"
  filter_activate:
    name: "activate"
    in: "query"
    description: "Filter on activate"
    required: false
    type: "string"
  filter_bandwidth:
    name: "bandwidth"
    in: "query"
    description: "Filter on bandwidth"
    required: false
    type: "string"
  filter_barcode:
    name: "barcode"
    in: "query"
    description: "Filter on barcode"
    required: false
    type: "string"
  filter_change_date:
    name: "change_date"
    in: "query"
    description: "Filter on change date"
    required: false
    type: "string"
  filter_cleaning:
    name: "cleaning"
    in: "query"
    description: "Filter on cleaning"
    required: false
    type: "string"
  filter_cloud_connector_id:
    name: "cloud_connector_id"
    in: "query"
    description: "Filter on cloud connector id"
    required: false
    type: "string"
  filter_pool_id:
    name: "pool_id"
    in: "query"
    description: "Filter on a pool id"
    required: false
    type: "string"
  filter_conflict_resolution:
    name: "conflict_resolution"
    in: "query"
    description: "Filter on conflict resolution"
    required: false
    type: "string"
  filter_content:
    name: "content"
    in: "query"
    description: "Filter on content"
    required: false
    type: "string"
  filter_creation_date:
    name: "creation_date"
    in: "query"
    description: "Filter on creation date"
    required: false
    type: "string"
  filter_creation_username:
    name: "creation_username"
    in: "query"
    description: "Filter on creation username"
    required: false
    type: "string"
  filter_date_in:
    name: "date_in"
    in: "query"
    description: "Filter on date in"
    required: false
    type: "string"
  filter_date_move:
    name: "date_move"
    in: "query"
    description: "Filter on date move"
    required: false
    type: "string"
  filter_device:
    name: "device"
    in: "query"
    description: "Filter on device"
    required: false
    type: "string"
  filter_ejected:
    name: "ejected"
    in: "query"
    description: "Filter on ejected"
    required: false
    type: "string"
  filter_estimation_time:
    name: "estimation_time"
    in: "query"
    description: "Filter on estimation time"
    required: false
    type: "string"
  filter_file_id:
    name: "file_id"
    in: "query"
    description: "Filter on file id"
    required: false
    type: "string"
  filter_finalized_files:
    name: "finalized_files"
    in: "query"
    description: "Filter on finalized files"
    required: false
    type: "string"
  filter_firmware:
    name: "firmware"
    in: "query"
    description: "Filter on firmware"
    required: false
    type: "string"
  filter_folder_id:
    name: "folder_id"
    in: "query"
    description: "Filter on folder id"
    required: false
    type: "string"
  filter_force_import_type:
    name: "force_import_type"
    in: "query"
    description: "Filter on force import type"
    required: false
    type: "string"
  filter_free:
    name: "free"
    in: "query"
    description: "Filter on free"
    required: false
    type: "string"
  filter_full:
    name: "full"
    in: "query"
    description: "Filter on full"
    required: false
    type: "string"
  filter_gid:
    name: "gid"
    in: "query"
    description: "Filter on gid"
    required: false
    type: "string"
  filter_guest_right:
    name: "guest_right"
    in: "query"
    description: "Filter on guest right"
    required: false
    type: "string"
  filter_hash:
    name: "hash"
    in: "query"
    description: "Filter on hash"
    required: false
    type: "string"
  filter_host:
    name: "host"
    in: "query"
    description: "Filter on host"
    required: false
    type: "string"
  filter_import_file_id:
    name: "import_file_id"
    in: "query"
    description: "Filter on import file id"
    required: false
    type: "string"
  filter_io_slots:
    name: "io_slots"
    in: "query"
    description: "Filter on io slots"
    required: false
    type: "string"
  filter_io_slots_address:
    name: "io_slots_address"
    in: "query"
    description: "Filter on io slots address"
    required: false
    type: "string"
  filter_job_finished:
    name: "job_finished"
    in: "query"
    description: "Filter on job finished"
    required: false
    type: "string"
  filter_job_started:
    name: "job_started"
    in: "query"
    description: "Filter on job started"
    required: false
    type: "string"
  filter_key:
    name: "key"
    in: "query"
    description: "Filter on key"
    required: false
    type: "string"
  filter_known:
    name: "known"
    in: "query"
    description: "Filter on known"
    required: false
    type: "string"
  filter_last_maintenance:
    name: "last_maintenance"
    in: "query"
    description: "Filter on last maintenance"
    required: false
    type: "string"
  filter_last_repack:
    name: "last_repack"
    in: "query"
    description: "Filter on last repack"
    required: false
    type: "string"
  filter_last_size_update:
    name: "last_size_update"
    in: "query"
    description: "Filter on last size update"
    required: false
    type: "string"
  filter_last_update:
    name: "last_update"
    in: "query"
    description: "Filter on last update"
    required: false
    type: "string"
  filter_libso:
    name: "libso"
    in: "query"
    description: "Filter on libso"
    required: false
    type: "string"
  filter_location:
    name: "location"
    in: "query"
    description: "Filter on location"
    required: false
    type: "string"
  filter_locked:
    name: "locked"
    in: "query"
    description: "Filter on locked"
    required: false
    type: "string"
  filter_log_time:
    name: "log_time"
    in: "query"
    description: "Filter on log time"
    required: false
    type: "string"
  filter_lsm:
    name: "lsm"
    in: "query"
    description: "Filter on lsm"
    required: false
    type: "string"
  filter_max:
    name: "max"
    in: "query"
    description: "Filter on max"
    required: false
    type: "string"
  filter_modification_date:
    name: "modification_date"
    in: "query"
    description: "Filter on modification date"
    required: false
    type: "string"
  filter_modification_username:
    name: "modification_username"
    in: "query"
    description: "Filter on modification username"
    required: false
    type: "string"
  filter_mount_count:
    name: "mount_count"
    in: "query"
    description: "Filter on mount count"
    required: false
    type: "string"
  filter_mounted:
    name: "mounted"
    in: "query"
    description: "Filter on mounted"
    required: false
    type: "string"
  filter_nas_id:
    name: "nas_id"
    in: "query"
    description: "Filter on NAS id"
    required: false
    type: "string"
  filter_need_to_check:
    name: "need_to_check"
    in: "query"
    description: "Filter on need to check"
    required: false
    type: "string"
  filter_options:
    name: "options"
    in: "query"
    description: "Filter on options"
    required: false
    type: "string"
  filter_panel:
    name: "panel"
    in: "query"
    description: "Filter on panel"
    required: false
    type: "string"
  filter_path:
    name: "path"
    in: "query"
    description: "Filter on path"
    required: false
    type: "string"
  filter_permission:
    name: "permission"
    in: "query"
    description: "Filter on permission"
    required: false
    type: "string"
  filter_price:
    name: "price"
    in: "query"
    description: "Filter on price"
    required: false
    type: "string"
  filter_primary_id:
    name: "primary_id"
    in: "query"
    description: "Filter on primary id"
    required: false
    type: "string"
  filter_priority:
    name: "priority"
    in: "query"
    description: "Filter on priority"
    required: false
    type: "string"
  filter_privilege:
    name: "privilege"
    in: "query"
    description: "Filter on privilege"
    required: false
    type: "string"
  filter_processed_files:
    name: "processed_files"
    in: "query"
    description: "Filter on processed files"
    required: false
    type: "string"
  filter_processed_size:
    name: "processed_size"
    in: "query"
    description: "Filter on processed size"
    required: false
    type: "string"
  filter_product:
    name: "product"
    in: "query"
    description: "Filter on product"
    required: false
    type: "string"
  filter_protocol:
    name: "protocol"
    in: "query"
    description: "Filter on protocol"
    required: false
    type: "string"
  filter_provider:
    name: "provider"
    in: "query"
    description: "Filter on provider"
    required: false
    type: "string"
  filter_quota_on_cache:
    name: "quota_on_cache"
    in: "query"
    description: "Filter on quota on cache"
    required: false
    type: "string"
  filter_quota_total_size:
    name: "quota_total_size"
    in: "query"
    description: "Filter on quota total size"
    required: false
    type: "string"
  filter_region:
    name: "region"
    in: "query"
    description: "Filter on region"
    required: false
    type: "string"
  filter_repack_status:
    name: "repack_status"
    in: "query"
    description: "Filter on repack status"
    required: false
    type: "string"
  filter_scan_interval:
    name: "scan_interval"
    in: "query"
    description: "Filter on mount point scan interval"
    required: false
    type: "string"
  filter_scratch:
    name: "scratch"
    in: "query"
    description: "Filter on scratch"
    required: false
    type: "string"
  filter_scsi_address:
    name: "scsi_address"
    in: "query"
    description: "Filter on scsi address"
    required: false
    type: "string"
  filter_serial:
    name: "serial"
    in: "query"
    description: "Filter on serial"
    required: false
    type: "string"
  filter_sgdevice:
    name: "sgdevice"
    in: "query"
    description: "Filter on sgdevice"
    required: false
    type: "string"
  filter_size:
    name: "size"
    in: "query"
    description: "Filter on size"
    required: false
    type: "string"
  filter_stat_size_on_cache:
    name: "stat_size_on_cache"
    in: "query"
    description: "Filter on stat size on cache"
    required: false
    type: "string"
  filter_stat_total_files:
    name: "stat_total_files"
    in: "query"
    description: "Filter on stat total files"
    required: false
    type: "string"
  filter_stat_total_size:
    name: "stat_total_size"
    in: "query"
    description: "Filter on stat total size"
    required: false
    type: "string"
  filter_status:
    name: "status"
    in: "query"
    description: "Filter on status"
    required: false
    type: "string"
  filter_storage_slots:
    name: "storage_slots"
    in: "query"
    description: "Filter on storage slots"
    required: false
    type: "string"
  filter_storage_slots_address:
    name: "storage_slots_address"
    in: "query"
    description: "Filter on storage slots address"
    required: false
    type: "string"
  filter_tape_id:
    name: "tape_id"
    in: "query"
    description: "Filter on tape id"
    required: false
    type: "string"
  filter_tape_library_id:
    name: "tape_library_id"
    in: "query"
    description: "Filter on tape library id"
    required: false
    type: "string"
  filter_target:
    name: "target"
    in: "query"
    description: "Filter on mount point target"
    required: false
    type: "string"
  filter_task_id:
    name: "task_id"
    in: "query"
    description: "Filter on task id"
    required: false
    type: "string"
  filter_to_process_files:
    name: "to_process_files"
    in: "query"
    description: "Filter on to process files"
    required: false
    type: "string"
  filter_to_process_size:
    name: "to_process_size"
    in: "query"
    description: "Filter on to process size"
    required: false
    type: "string"
  filter_transport:
    name: "transport"
    in: "query"
    description: "Filter on transport"
    required: false
    type: "string"
  filter_uid:
    name: "uid"
    in: "query"
    description: "Filter on uid"
    required: false
    type: "string"
  filter_url:
    name: "url"
    in: "query"
    description: "Filter on url"
    required: false
    type: "string"
  filter_url_proxy:
    name: "url_proxy"
    in: "query"
    description: "Filter on url proxy"
    required: false
    type: "string"
  filter_use_by:
    name: "use_by"
    in: "query"
    description: "Filter on use by"
    required: false
    type: "string"
  filter_use_file_name_processed:
    name: "use_file_name_processed"
    in: "query"
    description: "Filter on use file name processed"
    required: false
    type: "string"
  filter_use_file_processed_size:
    name: "use_file_processed_size"
    in: "query"
    description: "Filter on use file processed size"
    required: false
    type: "string"
  filter_use_file_size_to_process:
    name: "use_file_size_to_process"
    in: "query"
    description: "Filter on use file size to process"
    required: false
    type: "string"
  filter_use_to:
    name: "use_to"
    in: "query"
    description: "Filter on use to"
    required: false
    type: "string"
  filter_username:
    name: "username"
    in: "query"
    description: "Filter on username"
    required: false
    type: "string"
  filter_value:
    name: "value"
    in: "query"
    description: "Filter on value"
    required: false
    type: "string"
  filter_vendor:
    name: "vendor"
    in: "query"
    description: "Filter on vendor"
    required: false
    type: "string"
  filter_write_protect:
    name: "write_protect"
    in: "query"
    description: "Filter on write protect"
    required: false
    type: "string"
  filter_script:
    name: "script"
    in: "query"
    description: "Filter on task callback script"
    required: false
    type: "string"
  filter_workflow_type:
    name: "workflow_type"
    in: "query"
    description: "Filter on task workflow type"
    required: false
    type: "string"
  filter_workflow_action:
    name: "workflow_action"
    in: "query"
    description: "Filter on task workflow action"
    required: false
    type: "string"
  filter_source_type:
    name: "source_type"
    in: "query"
    description: "Filter on task source type"
    required: false
    type: "string"
  filter_destination_type:
    name: "destination_type"
    in: "query"
    description: "Filter on task destination type"
    required: false
    type: "string"
  filter_rrule:
    name: "rrule"
    in: "query"
    description: "Filter on RRule of schedule"
    required: false
    type: "string"
  filter_done:
    name: "done"
    in: "query"
    description: "Filter on done schedule"
    required: false
    type: "string"
  api_key_id:
    name: "api_key_id"
    in: "path"
    description: "Numeric ID of API Key."
    required: true
    type: "integer"
  file_id:
    name: "file_id"
    in: "path"
    description: "Numeric ID of file."
    required: true
    type: "integer"
  file_parent_id:
    name: "file_parent_id"
    in: "path"
    description: "Numeric ID of parent folder."
    required: true
    type: "integer"
  container_id:
    name: "container_id"
    in: "path"
    description: "Numeric ID or name of container."
    required: true
    type: "string"
  container_privilege_id:
    name: "container_privilege_id"
    in: "path"
    description: "Numeric ID of container privilege."
    required: true
    type: "integer"
  tape_library_id:
    name: "tape_library_id"
    in: "path"
    description: "Numeric ID, serial, or name of tape library."
    required: true
    type: "string"
  tape_id:
    name: "tape_id"
    in: "path"
    description: "Numeric ID, or barcode of tape."
    required: true
    type: "string"
  pool_id:
    name: "pool_id"
    in: "path"
    description: "Numeric ID, or name of pool."
    required: true
    type: "string"
  tape_drive_id:
    name: "tape_drive_id"
    in: "path"
    description: "Numeric ID, serial, or name of tape drive."
    required: true
    type: "string"
  cloud_connector_id:
    name: "cloud_connector_id"
    in: "path"
    description: "Numeric ID or name of cloud connector."
    required: true
    type: "string"
  cloud_bucket_id:
    name: "cloud_bucket_id"
    in: "path"
    description: "Numeric ID or name of cloud bucket."
    required: true
    type: "string"
  nas_id:
    name: "nas_id"
    in: "path"
    description: "Numeric ID or name of NAS."
    required: true
    type: "string"
  nas_share_id:
    name: "nas_share_id"
    in: "path"
    description: "Numeric ID of NAS share."
    required: true
    type: "integer"
  task_id:
    name: "task_id"
    in: "path"
    description: "Numeric ID or name of task. Task names are not unique, it's recommanded\
      \ to use numeric ID."
    required: true
    type: "string"
  task_source_id:
    name: "task_source_id"
    in: "path"
    description: "Numeric ID of task source."
    required: true
    type: "integer"
  task_destination_id:
    name: "task_destination_id"
    in: "path"
    description: "Numeric ID of task destination."
    required: true
    type: "integer"
  task_option_id:
    name: "task_option_id"
    in: "path"
    description: "Numeric ID of task option."
    required: true
    type: "integer"
  task_callback_id:
    name: "task_callback_id"
    in: "path"
    description: "Numeric ID of task callback."
    required: true
    type: "integer"
  task_metadatum_id:
    name: "task_metadatum_id"
    in: "path"
    description: "Numeric ID of task metadatum."
    required: true
    type: "integer"
  task_execution_id:
    name: "task_execution_id"
    in: "path"
    description: "Numeric ID of task execution."
    required: true
    type: "string"
  api_key_body:
    in: "body"
    name: "api_key_body"
    required: true
    schema:
      $ref: "#/definitions/api_key_full"
  container_body:
    in: "body"
    name: "container_body"
    required: true
    schema:
      $ref: "#/definitions/container"
  container_privilege_body:
    in: "body"
    name: "container_privilege_body"
    required: true
    schema:
      $ref: "#/definitions/container_privilege"
  tape_library_body:
    in: "body"
    name: "tape_library_body"
    required: true
    schema:
      $ref: "#/definitions/tape_library"
  tape_drive_body:
    in: "body"
    name: "tape_drive_body"
    required: true
    schema:
      $ref: "#/definitions/tape_drive"
  pool_body:
    in: "body"
    name: "pool_body"
    required: true
    schema:
      $ref: "#/definitions/pool_up"
  primary_scan_body:
    in: "body"
    name: "primary_scan_body"
    required: true
    schema:
      $ref: "#/definitions/primary_scan"
  sync_primary_tx:
    name: "tx"
    in: "query"
    description: "New transaction number."
    required: true
    type: "integer"
  cloud_connector_body:
    in: "body"
    name: "cloud_connector_body"
    required: true
    schema:
      $ref: "#/definitions/cloud_connector"
  nas_body:
    in: "body"
    name: "nas_body"
    required: true
    schema:
      $ref: "#/definitions/nas"
  nas_share_body:
    in: "body"
    name: "nas_share_body"
    required: true
    schema:
      $ref: "#/definitions/nas_share"
  task_body:
    in: "body"
    name: "task_body"
    required: true
    schema:
      $ref: "#/definitions/task"
  task_source_body:
    in: "body"
    name: "task_source_body"
    required: true
    schema:
      $ref: "#/definitions/task_source_up"
  task_destination_body:
    in: "body"
    name: "task_destination_body"
    required: true
    schema:
      $ref: "#/definitions/task_destination_up"
  task_schedule_body:
    in: "body"
    name: "task_schedule_body"
    required: true
    schema:
      $ref: "#/definitions/task_schedule"
  task_option_body:
    in: "body"
    name: "task_option_body"
    required: true
    schema:
      $ref: "#/definitions/task_option"
  task_callback_body:
    in: "body"
    name: "task_callback_body"
    required: true
    schema:
      $ref: "#/definitions/task_callback"
  task_metadatum_body:
    in: "body"
    name: "task_metadatum_body"
    required: true
    schema:
      $ref: "#/definitions/task_metadatum"
responses:
  not_found:
    description: "The requested resource was not found. The detailed error will be\
      \ of type `not_found`."
    schema:
      $ref: "#/definitions/error"
  unprocessable_entity:
    description: "The received resource was not correctly formatted."
    schema:
      $ref: "#/definitions/error"
  mount_status:
    description: "Mount status of storage."
    schema:
      $ref: "#/definitions/mount_status"
  active_job_status:
    description: "An active job that may be queued, working, completed or failed."
    examples:
      queued:
        value:
          job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
          status: "queued"
      working:
        value:
          job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
          status: "working"
          progress: 2
          total: 6
      failed:
        value:
          job_id: "6f4d759d-48e9-43c8-ab24-640f5ea63922"
          status: "failed"
    schema:
      $ref: "#/definitions/active_job_status"
  api_key_index:
    description: "List of API Keys."
    schema:
      $ref: "#/definitions/api_key_collection"
  api_key_show:
    description: "A specific file."
    schema:
      $ref: "#/definitions/api_key_full"
  files_index:
    description: "List of files."
    schema:
      $ref: "#/definitions/nodeum_file_collection"
  files_show:
    description: "A specific file."
    schema:
      $ref: "#/definitions/nodeum_file_with_path"
  import_files_index:
    description: "List of imported files."
    schema:
      $ref: "#/definitions/import_file_collection"
  import_files_show:
    description: "A specific imported file."
    schema:
      $ref: "#/definitions/import_file_with_path"
  on_tapes_files_index:
    description: "List of files on tapes."
    schema:
      $ref: "#/definitions/on_tapes_file_collection"
  on_tapes_files_show:
    description: "A specific file on tapes."
    schema:
      $ref: "#/definitions/on_tapes_file"
  mounts_index:
    description: "List of mounted storages."
    schema:
      $ref: "#/definitions/mount_collection"
  containers_index:
    description: "List of containers."
    schema:
      $ref: "#/definitions/container_collection"
  containers_show:
    description: "A specific container."
    schema:
      $ref: "#/definitions/container"
  container_privileges_index:
    description: "List of container privileges."
    schema:
      $ref: "#/definitions/container_privilege_collection"
  container_privileges_show:
    description: "A specific container privilege."
    schema:
      $ref: "#/definitions/container_privilege"
  tape_libraries_index:
    description: "List of tape libraries."
    schema:
      $ref: "#/definitions/tape_library_collection"
  tape_libraries_devices:
    description: "List of tape libraries devices."
    schema:
      $ref: "#/definitions/tape_library_device_collection"
  tape_libraries_show:
    description: "A specific tape library."
    schema:
      $ref: "#/definitions/tape_library"
  tape_drives_index:
    description: "List of tape drives."
    schema:
      $ref: "#/definitions/tape_drive_collection"
  tape_drives_devices:
    description: "List of tape drives devices."
    schema:
      $ref: "#/definitions/tape_drive_device_collection"
  tape_drives_show:
    description: "A specific tape drive."
    schema:
      $ref: "#/definitions/tape_drive"
  tapes_index:
    description: "List of tapes."
    schema:
      $ref: "#/definitions/tape_collection"
  tapes_show:
    description: "A specific tape."
    schema:
      $ref: "#/definitions/tape"
  pools_index:
    description: "List of pools."
    schema:
      $ref: "#/definitions/pool_collection"
  pools_show:
    description: "A specific pool."
    schema:
      $ref: "#/definitions/pool"
  primary_scan_show:
    description: "The primary pool scan status."
    schema:
      $ref: "#/definitions/primary_scan"
  cloud_connectors_index:
    description: "List of cloud connectors."
    schema:
      $ref: "#/definitions/cloud_connector_collection"
  cloud_connectors_show:
    description: "A specific cloud connector."
    schema:
      $ref: "#/definitions/cloud_connector"
  cloud_buckets_index:
    description: "List of cloud buckets."
    schema:
      $ref: "#/definitions/cloud_bucket_collection"
  cloud_buckets_show:
    description: "A specific cloud bucket."
    schema:
      $ref: "#/definitions/cloud_bucket"
  cloud_buckets_sync:
    description: "Simple list of cloud buckets."
    schema:
      $ref: "#/definitions/cloud_bucket_simple_collection"
  nas_index:
    description: "List of NAS."
    schema:
      $ref: "#/definitions/nas_collection"
  nas_show:
    description: "A specific NAS."
    schema:
      $ref: "#/definitions/nas"
  nas_shares_index:
    description: "List of NAS shares."
    schema:
      $ref: "#/definitions/nas_share_collection"
  nas_shares_show:
    description: "A specific NAS share."
    schema:
      $ref: "#/definitions/nas_share"
  tasks_index:
    description: "List of tasks."
    schema:
      $ref: "#/definitions/task_collection"
  tasks_show:
    description: "A specific task."
    schema:
      $ref: "#/definitions/task"
  task_sources_index:
    description: "List of task sources."
    schema:
      $ref: "#/definitions/task_source_collection"
  task_sources_show:
    description: "A specific task source."
    schema:
      $ref: "#/definitions/task_source_down"
  task_destinations_index:
    description: "List of task destinations."
    schema:
      $ref: "#/definitions/task_destination_collection"
  task_destinations_show:
    description: "A specific task destination."
    schema:
      $ref: "#/definitions/task_destination_down"
  task_schedules_index:
    description: "List of task schedules."
    schema:
      $ref: "#/definitions/task_schedule_collection"
  task_schedule_show:
    description: "A specific task schedule."
    schema:
      $ref: "#/definitions/task_schedule"
  task_options_index:
    description: "List of task options."
    schema:
      $ref: "#/definitions/task_option_collection"
  task_options_show:
    description: "A specific task option."
    schema:
      $ref: "#/definitions/task_option"
  task_callbacks_index:
    description: "List of task callbacks."
    schema:
      $ref: "#/definitions/task_callback_collection"
  task_callbacks_show:
    description: "A specific task callback."
    schema:
      $ref: "#/definitions/task_callback"
  task_metadata_index:
    description: "List of task metadata."
    schema:
      $ref: "#/definitions/task_metadatum_collection"
  task_metadata_show:
    description: "A specific task metadatum."
    schema:
      $ref: "#/definitions/task_metadatum"
  task_executions_index:
    description: "List of task executions."
    schema:
      $ref: "#/definitions/task_execution_collection"
  task_executions_show:
    description: "A specific task execution."
    schema:
      $ref: "#/definitions/task_execution"
