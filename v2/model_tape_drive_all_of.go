/*
 * Nodeum API
 *
 * # About  This document describes the Nodeum API version 2:  If you are looking for any information about the product itself, reach the product website https://www.nodeum.io. You can also contact us at this email address : info@nodeum.io  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  
 *
 * API version: 2.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package nodeum

import (
	"bytes"
	"encoding/json"
)

// TapeDriveAllOf struct for TapeDriveAllOf
type TapeDriveAllOf struct {
	Id *int32 `json:"id,omitempty"`
	TapeLibraryId *int32 `json:"tape_library_id,omitempty"`
	Name *string `json:"name,omitempty"`
	Comment *string `json:"comment,omitempty"`
	Libso *string `json:"libso,omitempty"`
	Acs *int32 `json:"acs,omitempty"`
	Lsm *int32 `json:"lsm,omitempty"`
	Panel *int32 `json:"panel,omitempty"`
	Transport *int32 `json:"transport,omitempty"`
	Status *string `json:"status,omitempty"`
	Full *int32 `json:"full,omitempty"`
	MountCount *int32 `json:"mount_count,omitempty"`
	UseTo *string `json:"use_to,omitempty"`
	UseBy *string `json:"use_by,omitempty"`
	Barcode *string `json:"barcode,omitempty"`
	TaskId *int32 `json:"task_id,omitempty"`
	UseFileProcessedSize *int32 `json:"use_file_processed_size,omitempty"`
	UseFileSizeToProcess *int32 `json:"use_file_size_to_process,omitempty"`
	UseFileNameProcessed *string `json:"use_file_name_processed,omitempty"`
	Bandwidth *int32 `json:"bandwidth,omitempty"`
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetIdOk() (int32, bool) {
	if o == nil || o.Id == nil {
		var ret int32
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TapeDriveAllOf) SetId(v int32) {
	o.Id = &v
}

// GetTapeLibraryId returns the TapeLibraryId field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetTapeLibraryId() int32 {
	if o == nil || o.TapeLibraryId == nil {
		var ret int32
		return ret
	}
	return *o.TapeLibraryId
}

// GetTapeLibraryIdOk returns a tuple with the TapeLibraryId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetTapeLibraryIdOk() (int32, bool) {
	if o == nil || o.TapeLibraryId == nil {
		var ret int32
		return ret, false
	}
	return *o.TapeLibraryId, true
}

// HasTapeLibraryId returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasTapeLibraryId() bool {
	if o != nil && o.TapeLibraryId != nil {
		return true
	}

	return false
}

// SetTapeLibraryId gets a reference to the given int32 and assigns it to the TapeLibraryId field.
func (o *TapeDriveAllOf) SetTapeLibraryId(v int32) {
	o.TapeLibraryId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TapeDriveAllOf) SetName(v string) {
	o.Name = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetCommentOk() (string, bool) {
	if o == nil || o.Comment == nil {
		var ret string
		return ret, false
	}
	return *o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *TapeDriveAllOf) SetComment(v string) {
	o.Comment = &v
}

// GetLibso returns the Libso field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetLibso() string {
	if o == nil || o.Libso == nil {
		var ret string
		return ret
	}
	return *o.Libso
}

// GetLibsoOk returns a tuple with the Libso field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetLibsoOk() (string, bool) {
	if o == nil || o.Libso == nil {
		var ret string
		return ret, false
	}
	return *o.Libso, true
}

// HasLibso returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasLibso() bool {
	if o != nil && o.Libso != nil {
		return true
	}

	return false
}

// SetLibso gets a reference to the given string and assigns it to the Libso field.
func (o *TapeDriveAllOf) SetLibso(v string) {
	o.Libso = &v
}

// GetAcs returns the Acs field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetAcs() int32 {
	if o == nil || o.Acs == nil {
		var ret int32
		return ret
	}
	return *o.Acs
}

// GetAcsOk returns a tuple with the Acs field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetAcsOk() (int32, bool) {
	if o == nil || o.Acs == nil {
		var ret int32
		return ret, false
	}
	return *o.Acs, true
}

// HasAcs returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasAcs() bool {
	if o != nil && o.Acs != nil {
		return true
	}

	return false
}

// SetAcs gets a reference to the given int32 and assigns it to the Acs field.
func (o *TapeDriveAllOf) SetAcs(v int32) {
	o.Acs = &v
}

// GetLsm returns the Lsm field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetLsm() int32 {
	if o == nil || o.Lsm == nil {
		var ret int32
		return ret
	}
	return *o.Lsm
}

// GetLsmOk returns a tuple with the Lsm field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetLsmOk() (int32, bool) {
	if o == nil || o.Lsm == nil {
		var ret int32
		return ret, false
	}
	return *o.Lsm, true
}

// HasLsm returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasLsm() bool {
	if o != nil && o.Lsm != nil {
		return true
	}

	return false
}

// SetLsm gets a reference to the given int32 and assigns it to the Lsm field.
func (o *TapeDriveAllOf) SetLsm(v int32) {
	o.Lsm = &v
}

// GetPanel returns the Panel field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetPanel() int32 {
	if o == nil || o.Panel == nil {
		var ret int32
		return ret
	}
	return *o.Panel
}

// GetPanelOk returns a tuple with the Panel field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetPanelOk() (int32, bool) {
	if o == nil || o.Panel == nil {
		var ret int32
		return ret, false
	}
	return *o.Panel, true
}

// HasPanel returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasPanel() bool {
	if o != nil && o.Panel != nil {
		return true
	}

	return false
}

// SetPanel gets a reference to the given int32 and assigns it to the Panel field.
func (o *TapeDriveAllOf) SetPanel(v int32) {
	o.Panel = &v
}

// GetTransport returns the Transport field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetTransport() int32 {
	if o == nil || o.Transport == nil {
		var ret int32
		return ret
	}
	return *o.Transport
}

// GetTransportOk returns a tuple with the Transport field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetTransportOk() (int32, bool) {
	if o == nil || o.Transport == nil {
		var ret int32
		return ret, false
	}
	return *o.Transport, true
}

// HasTransport returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasTransport() bool {
	if o != nil && o.Transport != nil {
		return true
	}

	return false
}

// SetTransport gets a reference to the given int32 and assigns it to the Transport field.
func (o *TapeDriveAllOf) SetTransport(v int32) {
	o.Transport = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetStatusOk() (string, bool) {
	if o == nil || o.Status == nil {
		var ret string
		return ret, false
	}
	return *o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TapeDriveAllOf) SetStatus(v string) {
	o.Status = &v
}

// GetFull returns the Full field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetFull() int32 {
	if o == nil || o.Full == nil {
		var ret int32
		return ret
	}
	return *o.Full
}

// GetFullOk returns a tuple with the Full field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetFullOk() (int32, bool) {
	if o == nil || o.Full == nil {
		var ret int32
		return ret, false
	}
	return *o.Full, true
}

// HasFull returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasFull() bool {
	if o != nil && o.Full != nil {
		return true
	}

	return false
}

// SetFull gets a reference to the given int32 and assigns it to the Full field.
func (o *TapeDriveAllOf) SetFull(v int32) {
	o.Full = &v
}

// GetMountCount returns the MountCount field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetMountCount() int32 {
	if o == nil || o.MountCount == nil {
		var ret int32
		return ret
	}
	return *o.MountCount
}

// GetMountCountOk returns a tuple with the MountCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetMountCountOk() (int32, bool) {
	if o == nil || o.MountCount == nil {
		var ret int32
		return ret, false
	}
	return *o.MountCount, true
}

// HasMountCount returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasMountCount() bool {
	if o != nil && o.MountCount != nil {
		return true
	}

	return false
}

// SetMountCount gets a reference to the given int32 and assigns it to the MountCount field.
func (o *TapeDriveAllOf) SetMountCount(v int32) {
	o.MountCount = &v
}

// GetUseTo returns the UseTo field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetUseTo() string {
	if o == nil || o.UseTo == nil {
		var ret string
		return ret
	}
	return *o.UseTo
}

// GetUseToOk returns a tuple with the UseTo field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetUseToOk() (string, bool) {
	if o == nil || o.UseTo == nil {
		var ret string
		return ret, false
	}
	return *o.UseTo, true
}

// HasUseTo returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasUseTo() bool {
	if o != nil && o.UseTo != nil {
		return true
	}

	return false
}

// SetUseTo gets a reference to the given string and assigns it to the UseTo field.
func (o *TapeDriveAllOf) SetUseTo(v string) {
	o.UseTo = &v
}

// GetUseBy returns the UseBy field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetUseBy() string {
	if o == nil || o.UseBy == nil {
		var ret string
		return ret
	}
	return *o.UseBy
}

// GetUseByOk returns a tuple with the UseBy field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetUseByOk() (string, bool) {
	if o == nil || o.UseBy == nil {
		var ret string
		return ret, false
	}
	return *o.UseBy, true
}

// HasUseBy returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasUseBy() bool {
	if o != nil && o.UseBy != nil {
		return true
	}

	return false
}

// SetUseBy gets a reference to the given string and assigns it to the UseBy field.
func (o *TapeDriveAllOf) SetUseBy(v string) {
	o.UseBy = &v
}

// GetBarcode returns the Barcode field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetBarcode() string {
	if o == nil || o.Barcode == nil {
		var ret string
		return ret
	}
	return *o.Barcode
}

// GetBarcodeOk returns a tuple with the Barcode field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetBarcodeOk() (string, bool) {
	if o == nil || o.Barcode == nil {
		var ret string
		return ret, false
	}
	return *o.Barcode, true
}

// HasBarcode returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasBarcode() bool {
	if o != nil && o.Barcode != nil {
		return true
	}

	return false
}

// SetBarcode gets a reference to the given string and assigns it to the Barcode field.
func (o *TapeDriveAllOf) SetBarcode(v string) {
	o.Barcode = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetTaskId() int32 {
	if o == nil || o.TaskId == nil {
		var ret int32
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetTaskIdOk() (int32, bool) {
	if o == nil || o.TaskId == nil {
		var ret int32
		return ret, false
	}
	return *o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasTaskId() bool {
	if o != nil && o.TaskId != nil {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given int32 and assigns it to the TaskId field.
func (o *TapeDriveAllOf) SetTaskId(v int32) {
	o.TaskId = &v
}

// GetUseFileProcessedSize returns the UseFileProcessedSize field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetUseFileProcessedSize() int32 {
	if o == nil || o.UseFileProcessedSize == nil {
		var ret int32
		return ret
	}
	return *o.UseFileProcessedSize
}

// GetUseFileProcessedSizeOk returns a tuple with the UseFileProcessedSize field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetUseFileProcessedSizeOk() (int32, bool) {
	if o == nil || o.UseFileProcessedSize == nil {
		var ret int32
		return ret, false
	}
	return *o.UseFileProcessedSize, true
}

// HasUseFileProcessedSize returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasUseFileProcessedSize() bool {
	if o != nil && o.UseFileProcessedSize != nil {
		return true
	}

	return false
}

// SetUseFileProcessedSize gets a reference to the given int32 and assigns it to the UseFileProcessedSize field.
func (o *TapeDriveAllOf) SetUseFileProcessedSize(v int32) {
	o.UseFileProcessedSize = &v
}

// GetUseFileSizeToProcess returns the UseFileSizeToProcess field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetUseFileSizeToProcess() int32 {
	if o == nil || o.UseFileSizeToProcess == nil {
		var ret int32
		return ret
	}
	return *o.UseFileSizeToProcess
}

// GetUseFileSizeToProcessOk returns a tuple with the UseFileSizeToProcess field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetUseFileSizeToProcessOk() (int32, bool) {
	if o == nil || o.UseFileSizeToProcess == nil {
		var ret int32
		return ret, false
	}
	return *o.UseFileSizeToProcess, true
}

// HasUseFileSizeToProcess returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasUseFileSizeToProcess() bool {
	if o != nil && o.UseFileSizeToProcess != nil {
		return true
	}

	return false
}

// SetUseFileSizeToProcess gets a reference to the given int32 and assigns it to the UseFileSizeToProcess field.
func (o *TapeDriveAllOf) SetUseFileSizeToProcess(v int32) {
	o.UseFileSizeToProcess = &v
}

// GetUseFileNameProcessed returns the UseFileNameProcessed field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetUseFileNameProcessed() string {
	if o == nil || o.UseFileNameProcessed == nil {
		var ret string
		return ret
	}
	return *o.UseFileNameProcessed
}

// GetUseFileNameProcessedOk returns a tuple with the UseFileNameProcessed field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetUseFileNameProcessedOk() (string, bool) {
	if o == nil || o.UseFileNameProcessed == nil {
		var ret string
		return ret, false
	}
	return *o.UseFileNameProcessed, true
}

// HasUseFileNameProcessed returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasUseFileNameProcessed() bool {
	if o != nil && o.UseFileNameProcessed != nil {
		return true
	}

	return false
}

// SetUseFileNameProcessed gets a reference to the given string and assigns it to the UseFileNameProcessed field.
func (o *TapeDriveAllOf) SetUseFileNameProcessed(v string) {
	o.UseFileNameProcessed = &v
}

// GetBandwidth returns the Bandwidth field value if set, zero value otherwise.
func (o *TapeDriveAllOf) GetBandwidth() int32 {
	if o == nil || o.Bandwidth == nil {
		var ret int32
		return ret
	}
	return *o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TapeDriveAllOf) GetBandwidthOk() (int32, bool) {
	if o == nil || o.Bandwidth == nil {
		var ret int32
		return ret, false
	}
	return *o.Bandwidth, true
}

// HasBandwidth returns a boolean if a field has been set.
func (o *TapeDriveAllOf) HasBandwidth() bool {
	if o != nil && o.Bandwidth != nil {
		return true
	}

	return false
}

// SetBandwidth gets a reference to the given int32 and assigns it to the Bandwidth field.
func (o *TapeDriveAllOf) SetBandwidth(v int32) {
	o.Bandwidth = &v
}

type NullableTapeDriveAllOf struct {
	Value TapeDriveAllOf
	ExplicitNull bool
}

func (v NullableTapeDriveAllOf) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableTapeDriveAllOf) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
