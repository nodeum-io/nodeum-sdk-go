/*
 * Nodeum API
 *
 * # About  This document describes the Nodeum API version 2:  If you are looking for any information about the product itself, reach the product website https://www.nodeum.io. You can also contact us at this email address : info@nodeum.io  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  
 *
 * API version: 2.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package nodeum

import (
	"bytes"
	"encoding/json"
)

// TaskDestinationUp struct for TaskDestinationUp
type TaskDestinationUp struct {
	FolderId *int32 `json:"folder_id,omitempty"`
	FolderPath *string `json:"folder_path,omitempty"`
	TapeId *int32 `json:"tape_id,omitempty"`
	TapeBarcode *string `json:"tape_barcode,omitempty"`
	PoolId *int32 `json:"pool_id,omitempty"`
	PoolName *string `json:"pool_name,omitempty"`
}

// GetFolderId returns the FolderId field value if set, zero value otherwise.
func (o *TaskDestinationUp) GetFolderId() int32 {
	if o == nil || o.FolderId == nil {
		var ret int32
		return ret
	}
	return *o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TaskDestinationUp) GetFolderIdOk() (int32, bool) {
	if o == nil || o.FolderId == nil {
		var ret int32
		return ret, false
	}
	return *o.FolderId, true
}

// HasFolderId returns a boolean if a field has been set.
func (o *TaskDestinationUp) HasFolderId() bool {
	if o != nil && o.FolderId != nil {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given int32 and assigns it to the FolderId field.
func (o *TaskDestinationUp) SetFolderId(v int32) {
	o.FolderId = &v
}

// GetFolderPath returns the FolderPath field value if set, zero value otherwise.
func (o *TaskDestinationUp) GetFolderPath() string {
	if o == nil || o.FolderPath == nil {
		var ret string
		return ret
	}
	return *o.FolderPath
}

// GetFolderPathOk returns a tuple with the FolderPath field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TaskDestinationUp) GetFolderPathOk() (string, bool) {
	if o == nil || o.FolderPath == nil {
		var ret string
		return ret, false
	}
	return *o.FolderPath, true
}

// HasFolderPath returns a boolean if a field has been set.
func (o *TaskDestinationUp) HasFolderPath() bool {
	if o != nil && o.FolderPath != nil {
		return true
	}

	return false
}

// SetFolderPath gets a reference to the given string and assigns it to the FolderPath field.
func (o *TaskDestinationUp) SetFolderPath(v string) {
	o.FolderPath = &v
}

// GetTapeId returns the TapeId field value if set, zero value otherwise.
func (o *TaskDestinationUp) GetTapeId() int32 {
	if o == nil || o.TapeId == nil {
		var ret int32
		return ret
	}
	return *o.TapeId
}

// GetTapeIdOk returns a tuple with the TapeId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TaskDestinationUp) GetTapeIdOk() (int32, bool) {
	if o == nil || o.TapeId == nil {
		var ret int32
		return ret, false
	}
	return *o.TapeId, true
}

// HasTapeId returns a boolean if a field has been set.
func (o *TaskDestinationUp) HasTapeId() bool {
	if o != nil && o.TapeId != nil {
		return true
	}

	return false
}

// SetTapeId gets a reference to the given int32 and assigns it to the TapeId field.
func (o *TaskDestinationUp) SetTapeId(v int32) {
	o.TapeId = &v
}

// GetTapeBarcode returns the TapeBarcode field value if set, zero value otherwise.
func (o *TaskDestinationUp) GetTapeBarcode() string {
	if o == nil || o.TapeBarcode == nil {
		var ret string
		return ret
	}
	return *o.TapeBarcode
}

// GetTapeBarcodeOk returns a tuple with the TapeBarcode field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TaskDestinationUp) GetTapeBarcodeOk() (string, bool) {
	if o == nil || o.TapeBarcode == nil {
		var ret string
		return ret, false
	}
	return *o.TapeBarcode, true
}

// HasTapeBarcode returns a boolean if a field has been set.
func (o *TaskDestinationUp) HasTapeBarcode() bool {
	if o != nil && o.TapeBarcode != nil {
		return true
	}

	return false
}

// SetTapeBarcode gets a reference to the given string and assigns it to the TapeBarcode field.
func (o *TaskDestinationUp) SetTapeBarcode(v string) {
	o.TapeBarcode = &v
}

// GetPoolId returns the PoolId field value if set, zero value otherwise.
func (o *TaskDestinationUp) GetPoolId() int32 {
	if o == nil || o.PoolId == nil {
		var ret int32
		return ret
	}
	return *o.PoolId
}

// GetPoolIdOk returns a tuple with the PoolId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TaskDestinationUp) GetPoolIdOk() (int32, bool) {
	if o == nil || o.PoolId == nil {
		var ret int32
		return ret, false
	}
	return *o.PoolId, true
}

// HasPoolId returns a boolean if a field has been set.
func (o *TaskDestinationUp) HasPoolId() bool {
	if o != nil && o.PoolId != nil {
		return true
	}

	return false
}

// SetPoolId gets a reference to the given int32 and assigns it to the PoolId field.
func (o *TaskDestinationUp) SetPoolId(v int32) {
	o.PoolId = &v
}

// GetPoolName returns the PoolName field value if set, zero value otherwise.
func (o *TaskDestinationUp) GetPoolName() string {
	if o == nil || o.PoolName == nil {
		var ret string
		return ret
	}
	return *o.PoolName
}

// GetPoolNameOk returns a tuple with the PoolName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TaskDestinationUp) GetPoolNameOk() (string, bool) {
	if o == nil || o.PoolName == nil {
		var ret string
		return ret, false
	}
	return *o.PoolName, true
}

// HasPoolName returns a boolean if a field has been set.
func (o *TaskDestinationUp) HasPoolName() bool {
	if o != nil && o.PoolName != nil {
		return true
	}

	return false
}

// SetPoolName gets a reference to the given string and assigns it to the PoolName field.
func (o *TaskDestinationUp) SetPoolName(v string) {
	o.PoolName = &v
}

type NullableTaskDestinationUp struct {
	Value TaskDestinationUp
	ExplicitNull bool
}

func (v NullableTaskDestinationUp) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableTaskDestinationUp) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
