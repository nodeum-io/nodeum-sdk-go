/*
 * # Nodeum API Reference The Nodeum API makes it easy to tap into the digital data mesh that runs across your organisation. Make requests to our API endpoints and weâ€™ll give you everything you need to interconnect your business workflows with your storage.  All production API requests are made to:  http://nodeumhostname/api/  The current production version of the API is v1.   REST The Nodeum API is a RESTful API. This means that the API is designed to allow you to get, create, update, & delete objects with the HTTP verbs GET, POST, PUT, PATCH, & DELETE.  JSON The Nodeum API speaks exclusively in JSON. This means that you should always set the Content-Type header to application/json to ensure that your requests are properly accepted and processed by the API.    # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)
 *
 * API version: 2.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package nodeum

type TapeDrive struct {
	Serial string `json:"serial,omitempty"`
	ScsiAddress int32 `json:"scsi_address,omitempty"`
	Vendor string `json:"vendor,omitempty"`
	Product string `json:"product,omitempty"`
	Firmware string `json:"firmware,omitempty"`
	// When saved, device may be prefixed by *n* (eg. `/dev/nst5`)
	Device string `json:"device,omitempty"`
	Sgdevice string `json:"sgdevice,omitempty"`
	Id int32 `json:"id,omitempty"`
	TapeLibraryId int32 `json:"tape_library_id,omitempty"`
	Name string `json:"name,omitempty"`
	Comment string `json:"comment,omitempty"`
	Libso string `json:"libso,omitempty"`
	Acs int32 `json:"acs,omitempty"`
	Lsm int32 `json:"lsm,omitempty"`
	Panel int32 `json:"panel,omitempty"`
	Transport int32 `json:"transport,omitempty"`
	Status string `json:"status,omitempty"`
	Full int32 `json:"full,omitempty"`
	MountCount int32 `json:"mount_count,omitempty"`
	UseTo string `json:"use_to,omitempty"`
	UseBy string `json:"use_by,omitempty"`
	UseFileProcessedSize int32 `json:"use_file_processed_size,omitempty"`
	UseFileSizeToProcess int32 `json:"use_file_size_to_process,omitempty"`
	UseFileNameProcessed string `json:"use_file_name_processed,omitempty"`
	Bandwidth int32 `json:"bandwidth,omitempty"`
}
