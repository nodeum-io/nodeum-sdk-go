/*
 * # Nodeum API Reference The Nodeum API makes it easy to tap into the digital data mesh that runs across your organisation. Make requests to our API endpoints and weâ€™ll give you everything you need to interconnect your business workflows with your storage.  All production API requests are made to:  http://nodeumhostname/api/  The current production version of the API is v1.   REST The Nodeum API is a RESTful API. This means that the API is designed to allow you to get, create, update, & delete objects with the HTTP verbs GET, POST, PUT, PATCH, & DELETE.  JSON The Nodeum API speaks exclusively in JSON. This means that you should always set the Content-Type header to application/json to ensure that your requests are properly accepted and processed by the API.    # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)
 *
 * API version: 2.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package nodeum

type TaskExecution struct {
	Id string `json:"id,omitempty"`
	TaskId int32 `json:"task_id,omitempty"`
	Name string `json:"name,omitempty"`
	Type_ string `json:"type,omitempty"`
	Status string `json:"status,omitempty"`
	LogTime string `json:"log_time,omitempty"`
	JobStarted string `json:"job_started,omitempty"`
	JobFinished string `json:"job_finished,omitempty"`
	ToProcessSize int32 `json:"to_process_size,omitempty"`
	ProcessedSize int32 `json:"processed_size,omitempty"`
	ToProcessFiles int32 `json:"to_process_files,omitempty"`
	ProcessedFiles int32 `json:"processed_files,omitempty"`
	FinalizedFiles int32 `json:"finalized_files,omitempty"`
	EstimationTime int32 `json:"estimation_time,omitempty"`
	Bandwidth int32 `json:"bandwidth,omitempty"`
}
